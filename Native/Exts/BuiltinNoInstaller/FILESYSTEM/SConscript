#
# Copyright 2010-2011 Fabric Technologies Inc. All rights reserved.
#

Import( 'extsEnv', 'fileSystemFlags', 'ExtSLName', 'buildOS', 'buildArch', 'FABRIC_VERSION', 'distDir' )

fileSystemPackageName = "FabricEngine-FileSystemExt-"+buildOS+"-"+buildArch+"-"+FABRIC_VERSION
fileSystemPackageDir = distDir.Dir(fileSystemPackageName)

fileSystemPluginEnv = extsEnv.Clone()
fileSystemPluginEnv.MergeFlags( fileSystemFlags )
fileSystemPlugin = fileSystemPluginEnv.SharedLibrary( ExtSLName('FabricFILESYSTEM'), Glob('*.cpp') ),
fileSystemManifest = fileSystemPluginEnv.File('FabricFILESYSTEM.fpm.json'),
fileSystemKL = fileSystemPluginEnv.File('FabricFILESYSTEM.kl'),
fileSystemFiles = [fileSystemManifest, fileSystemPlugin, fileSystemKL]

fileSystemInstallerFiles = [
  Install(
    fileSystemPackageDir,
    fileSystemPluginEnv.File("README.txt")
  ),
  Install(
    fileSystemPackageDir.Dir('Exts'),
    fileSystemFiles
  )
  ]

if buildOS == 'Windows':
  installerEnv = fileSystemPluginEnv.Clone()
  generateDistZip( installerEnv )
  installerEnv.Append( DISTZIP_ROOTDIR = fileSystemPackageDir )
  fileSystemInstaller = installerEnv.DistZip(
    distDir.File(fileSystemPackageName+".zip"),
    installerFiles
  )
else:
  fileSystemInstaller = extsEnv.Command(
    distDir.File(fileSystemPackageName+".tar.bz2"),
    fileSystemInstallerFiles,
    [
      [ "tar", "-C", distDir, "-jcf", "$TARGET", fileSystemPackageName ]
    ]
  )
Alias( 'fileSystemInstaller', fileSystemInstaller )
Export( 'fileSystemInstaller' )

Return( 'fileSystemFiles' )
