{
  "libs": "FabricOGL",
  "code": "const Size GL_INDEX_CLEAR_VALUE = 0x0C20;const Size GL_OUTPUT_TEXTURE_COORD20_EXT = 0x87B1;const Size GL_PROVOKING_VERTEX_EXT = 0x8E4F;const Size GL_UNSIGNED_INT_IMAGE_2D_ARRAY_EXT = 0x9069;const Size GL_SOURCE1_ALPHA = 0x8589;const Size GL_DITHER = 0x0BD0;const Size GL_OUTPUT_TEXTURE_COORD22_EXT = 0x87B3;const Size GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE = 0x8217;const Size GL_SOURCE0_ALPHA = 0x8588;const Size GL_HISTOGRAM_FORMAT_EXT = 0x8027;const Size GL_INDEX_ARRAY_TYPE = 0x8085;const Size GL_PROXY_TEXTURE_2D_MULTISAMPLE = 0x9101;const Size GL_BACK_NORMALS_HINT_PGI = 107043;const Size GL_TEXTURE_MAX_LOD = 0x813B;const Size GL_RGBA_INTEGER_EXT = 0x8D99;const Size GL_SRGB8_EXT = 0x8C41;const Size GL_MIRROR_CLAMP_TO_EDGE_EXT = 0x8743;const Size GL_SAMPLER_2D_RECT = 0x8B63;const Size GL_RGB9_E5 = 0x8C3D;const Size GLX_BACK_LEFT_EXT = 0x20E0;const Size GL_TEXTURE_COMPRESSED = 0x86A1;const Size GL_PIXEL_PACK_BUFFER_BINDING_EXT = 0x88ED;const Size GL_TRANSPOSE_PROGRAM_MATRIX_EXT = 0x8E2E;const Size GL_T2F_C4UB_V3F = 0x2A29;const Size GL_SOURCE2_ALPHA_EXT = 0x858A;const Size GL_SECONDARY_COLOR_ARRAY_STRIDE_EXT = 0x845C;const Size GL_TEXTURE_MIN_LOD = 0x813A;const Size GL_PROXY_TEXTURE_RECTANGLE_EXT = 0x84F7;const Size GL_STENCIL_TEST_TWO_SIDE_EXT = 0x8910;const Size GL_HISTOGRAM_LUMINANCE_SIZE_EXT = 0x802C;const Size GL_TEXTURE_CUBE_MAP_POSITIVE_Y = 0x8517;const Size GL_TEXTURE_CUBE_MAP_POSITIVE_X = 0x8515;const Size GL_TEXTURE_CUBE_MAP_POSITIVE_Z = 0x8519;const Size GL_BYTE = 0x1400;const Size GL_TEXCOORD4_BIT_PGI = 0x80000000;const Size GL_PACK_RESAMPLE_OML = 0x8984;const Size GL_SAMPLER_1D_ARRAY_EXT = 0x8DC0;const Size GL_PGI_misc_hints = 1;const Size GL_DEPTH_BIAS = 0x0D1F;const Size GL_COLOR_CLEAR_VALUE = 0x0C22;const Size GL_BLUE_INTEGER_EXT = 0x8D96;const Size GL_DEPTH_WRITEMASK = 0x0B72;const Size GL_TEXTURE_GEN_MODE = 0x2500;const Size GL_3D_COLOR_TEXTURE = 0x0603;const Size GL_SAMPLER_2D_MULTISAMPLE = 0x9108;const Size GL_PIXEL_MAP_G_TO_G = 0x0C77;const Size GL_RENDER = 0x1C00;const Size GL_MAX_TEXTURE_COORDS = 0x8871;const Size GL_COMPARE_REF_DEPTH_TO_TEXTURE_EXT = 0x884E;const Size GL_TEXTURE_BINDING_2D_MULTISAMPLE = 0x9104;const Size GL_TRIANGLE_STRIP_ADJACENCY = 0x000D;const Size GL_MODELVIEW0_MATRIX_EXT = 0x0BA6;const Size GL_TRANSFORM_FEEDBACK_BUFFER = 0x8C8E;const Size GL_UNSIGNED_INT_10_10_10_2_EXT = 0x8036;const Size GL_BGRA_EXT = 0x80E1;const Size GL_RENDERBUFFER_INTERNAL_FORMAT_EXT = 0x8D44;const Size GL_SHADER_IMAGE_ACCESS_BARRIER_BIT_EXT = 0x00000020;const Size GL_PROVOKING_VERTEX = 0x8E4F;const Size GL_SIGNED_NORMALIZED = 0x8F9C;const Size GL_ALLOW_DRAW_FRG_HINT_PGI = 107024;const Size GL_RG_SNORM = 0x8F91;const Size GL_EXP = 0x0800;const Size GL_LINE_STRIP_ADJACENCY = 0x000B;const Size GL_POINT_SIZE = 0x0B11;const Size GL_TEXTURE_COMPARE_FUNC = 0x884D;const Size GL_CMYK_EXT = 0x800C;const Size GL_RGB12 = 0x8053;const Size GL_TIME_ELAPSED_EXT = 0x88BF;const Size GL_BLEND_DST_ALPHA_EXT = 0x80CA;const Size GL_RGB16 = 0x8054;const Size GL_POLYGON_OFFSET_FILL = 0x8037;const Size GL_FIRST_VERTEX_CONVENTION = 0x8E4D;const Size GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT = 0x9061;const Size GL_DOUBLEBUFFER = 0x0C32;const Size GL_MINMAX_FORMAT = 0x802F;const Size GL_MAX_CLIP_PLANES = 0x0D32;const Size GL_FOG_COORDINATE_ARRAY_STRIDE = 0x8455;const Size GL_1PASS_EXT = 0x80A1;const Size GL_EXT_packed_float = 1;const Size GL_RGB9_E5_EXT = 0x8C3D;const Size GL_OML_subsample = 1;const Size GL_TEXTURE_SWIZZLE_G_EXT = 0x8E43;const Size GL_MAX_VERTEX_SHADER_INVARIANTS_EXT = 0x87C7;const Size GL_COMPILE_AND_EXECUTE = 0x1301;const Size GL_GREEN_BITS = 0x0D53;const Size GL_SHADING_LANGUAGE_VERSION = 0x8B8C;const Size GL_UNSIGNED_SHORT_1_5_5_5_REV = 0x8366;const Size GL_COMBINE_ALPHA_EXT = 0x8572;const Size GL_RGB5_A1_EXT = 0x8057;const Size GL_4PASS_1_EXT = 0x80A5;const Size GL_CONTEXT_CORE_PROFILE_BIT = 0x00000001;const Size GL_ALPHA_TEST_FUNC = 0x0BC1;const Size GL_FRAGMENT_SHADER_DERIVATIVE_HINT = 0x8B8B;const Size GL_TEXTURE_DEPTH = 0x8071;const Size GL_EXT_separate_shader_objects = 1;const Size GL_POST_CONVOLUTION_BLUE_BIAS_EXT = 0x8022;const Size GL_DRAW_BUFFER6 = 0x882B;const Size GL_DRAW_BUFFER7 = 0x882C;const Size GL_DRAW_BUFFER4 = 0x8829;const Size GL_DRAW_BUFFER5 = 0x882A;const Size GL_DRAW_BUFFER2 = 0x8827;const Size GL_DRAW_BUFFER3 = 0x8828;const Size GL_DRAW_BUFFER0 = 0x8825;const Size GL_DRAW_BUFFER1 = 0x8826;const Size GL_LIGHT1 = 0x4001;const Size GL_LIGHT0 = 0x4000;const Size GL_LIGHT3 = 0x4003;const Size GL_LIGHT2 = 0x4002;const Size GL_LIGHT5 = 0x4005;const Size GL_LIGHT4 = 0x4004;const Size GL_DRAW_BUFFER8 = 0x882D;const Size GL_LIGHT6 = 0x4006;const Size GL_MAP_STENCIL = 0x0D11;const Size GL_QUADRATIC_ATTENUATION = 0x1209;const Size GL_TEXTURE_CUBE_MAP_SEAMLESS = 0x884F;const Size GL_TEXTURE_RECTANGLE = 0x84F5;const Size GL_PROXY_TEXTURE_2D_ARRAY_EXT = 0x8C1B;const Size GL_MAX_GEOMETRY_VARYING_COMPONENTS_EXT = 0x8DDD;const Size GL_FILL = 0x1B02;const Size GL_LUMINANCE_ALPHA32UI_EXT = 0x8D75;const Size GL_DEPTH_BUFFER = 0x8223;const Size GL_SRC_COLOR = 0x0300;const Size GLX_BIND_TO_TEXTURE_RGBA_EXT = 0x20D1;const Size GLX_FRAMEBUFFER_SRGB_CAPABLE_EXT = 0x20B2;const Size GL_EXT_framebuffer_blit = 1;const Size GL_SAMPLE_BUFFERS = 0x80A8;const Size GL_RGBA_INTEGER = 0x8D99;const Size GL_CONVOLUTION_FILTER_SCALE_EXT = 0x8014;const Size GL_COLOR_ATTACHMENT11_EXT = 0x8CEB;const Size GL_ACTIVE_ATTRIBUTE_MAX_LENGTH = 0x8B8A;const Size GL_EXTENSIONS = 0x1F03;const Size GL_COLOR_MATRIX = 0x80B1;const Size GL_VERTEX_WEIGHT_ARRAY_EXT = 0x850C;const Size GL_PASS_THROUGH_TOKEN = 0x0700;const Size GL_UPPER_LEFT = 0x8CA2;const Size GL_TRANSPOSE_TEXTURE_MATRIX = 0x84E5;const Size GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_EXT = 0x8DE1;const Size GL_DEPTH_BUFFER_BIT = 0x00000100;const Size GL_STENCIL_BACK_PASS_DEPTH_FAIL = 0x8802;const Size GL_UNIFORM_BUFFER = 0x8A11;const Size GLX_EXTENSIONS = 0x3;const Size GLX_TEXTURE_1D_BIT_EXT = 0x00000001;const Size GL_EDGE_FLAG_ARRAY_STRIDE_EXT = 0x808C;const Size GLX_ACCUM_BLUE_SIZE = 16;const Size GL_CCW = 0x0901;const Size GL_DEPTH_COMPONENT24 = 0x81A6;const Size GL_VERTEX_ATTRIB_ARRAY_INTEGER = 0x88FD;const Size GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE = 0x8216;const Size GLX_BIND_TO_TEXTURE_TARGETS_EXT = 0x20D3;const Size GL_R32I = 0x8235;const Size GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_EXT = 0x8DA8;const Size GL_R32F = 0x822E;const Size GL_SAMPLE_ALPHA_TO_ONE_EXT = 0x809F;const Size GL_MAX_VERTEX_SHADER_VARIANTS_EXT = 0x87C6;const Size GL_OR_REVERSE = 0x150B;const Size GL_LUMINANCE12_ALPHA4 = 0x8046;const Size GL_VERTEX_ARRAY_BUFFER_BINDING = 0x8896;const Size GL_PIXEL_MAP_R_TO_R = 0x0C76;const Size GL_INGR_interlace_read = 1;const Size GL_FOG_COORDINATE_SOURCE = 0x8450;const Size GL_UNSIGNED_SHORT_5_6_5_REV = 0x8364;const Size GL_TEXTURE_BORDER = 0x1005;const Size GL_REPLICATE_BORDER = 0x8153;const Size GL_CMYKA_EXT = 0x800D;const Size GL_PROXY_TEXTURE_2D_EXT = 0x8064;const Size GL_FALSE = 0;const Size GL_FLOAT_MAT2 = 0x8B5A;const Size GL_FLOAT_MAT3 = 0x8B5B;const Size GL_DEPTH = 0x1801;const Size GL_FLOAT_MAT4 = 0x8B5C;const Size GL_OPERAND1_RGB = 0x8591;const Size GL_SRGB8_ALPHA8_EXT = 0x8C43;const Size GL_COLOR_ATTACHMENT8_EXT = 0x8CE8;const Size GL_MAX_VERTEX_HINT_PGI = 107053;const Size GL_RGBA32UI = 0x8D70;const Size GL_422_EXT = 0x80CC;const Size GL_RG8I = 0x8237;const Size GL_RGBA8I = 0x8D8E;const Size GL_MAX_BINDABLE_UNIFORM_SIZE_EXT = 0x8DED;const Size GL_RG32F = 0x8230;const Size GL_CURRENT_TANGENT_EXT = 0x843B;const Size GL_STENCIL_TAG_BITS_EXT = 0x88F2;const Size GL_ALPHA_BIAS = 0x0D1D;const Size GL_MULTISAMPLE_EXT = 0x809D;const Size GL_FOG_COORDINATE_ARRAY = 0x8457;const Size GL_RASTERIZER_DISCARD_EXT = 0x8C89;const Size GL_SAMPLER_CUBE_SHADOW = 0x8DC5;const Size GL_TEXTURE_BINDING_3D = 0x806A;const Size GL_PACK_IMAGE_HEIGHT_EXT = 0x806C;const Size GL_OP_CLAMP_EXT = 0x878E;const Size GLX_VISUAL_ID_EXT = 0x800B;const Size GL_FOG_COORDINATE_SOURCE_EXT = 0x8450;const Size GL_TEXTURE = 0x1702;const Size GL_BLUE_MAX_CLAMP_INGR = 0x8566;const Size GL_MAX_PROJECTION_STACK_DEPTH = 0x0D38;const Size GLX_STENCIL_BUFFER_BIT = 0x00000040;const Size GL_ACTIVE_UNIFORMS = 0x8B86;const Size GL_RECLAIM_MEMORY_HINT_PGI = 107006;const Size GL_EXT_subtexture = 1;const Size GL_TEXTURE_BINDING_CUBE_MAP = 0x8514;const Size GL_PIXEL_TRANSFORM_2D_MATRIX_EXT = 0x8338;const Size GL_NUM_COMPRESSED_TEXTURE_FORMATS = 0x86A2;const Size GL_SECONDARY_COLOR_ARRAY_EXT = 0x845E;const Size GL_CURRENT_VERTEX_EXT = 0x87E2;const Size GL_4PASS_2_EXT = 0x80A6;const Size GL_MAX_TEXTURE_BUFFER_SIZE = 0x8C2B;const Size GL_UNSIGNED_INT_8_8_8_8_EXT = 0x8035;const Size GL_TEXTURE_ENV_MODE_ALPHA_EXT = 0;const Size GLX_AUX_BUFFERS = 7;const Size GL_TEXTURE_MAX_LEVEL = 0x813D;const Size GL_OPERAND0_RGB_EXT = 0x8590;const Size GL_ACCUM_RED_BITS = 0x0D58;const Size GL_OML_interlace = 1;const Size GL_NORMAL_MAP = 0x8511;const Size GL_STENCIL_BUFFER = 0x8224;const Size GL_ALPHA8 = 0x803C;const Size GL_BLEND_EQUATION = 0x8009;const Size GL_FRAGMENT_COLOR_EXT = 0x834C;const Size GL_TEXTURE_APPLICATION_MODE_EXT = 0x834F;const Size GL_ALPHA4 = 0x803B;const Size GL_MAX_GEOMETRY_OUTPUT_COMPONENTS = 0x9124;const Size GL_RGBA_SIGNED_COMPONENTS_EXT = 0x8C3C;const Size GL_LINE = 0x1B01;const Size GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT = 0x8C4F;const Size GL_LUMINANCE16_EXT = 0x8042;const Size GL_STENCIL_BITS = 0x0D57;const Size GL_OUTPUT_TEXTURE_COORD19_EXT = 0x87B0;const Size GL_RGBA32UI_EXT = 0x8D70;const Size GL_CONVOLUTION_FILTER_SCALE = 0x8014;const Size GL_BLUE_INTEGER = 0x8D96;const Size GL_DYNAMIC_COPY = 0x88EA;const Size GL_SYNC_FLAGS = 0x9115;const Size GL_MINMAX_SINK_EXT = 0x8030;const Size GL_STENCIL_PASS_DEPTH_FAIL = 0x0B95;const Size GL_UNSIGNED_BYTE_2_3_3_REV = 0x8362;const Size GL_RENDERBUFFER_INTERNAL_FORMAT = 0x8D44;const Size GL_EXT_stencil_two_side = 1;const Size GL_COLOR_ARRAY_TYPE_EXT = 0x8082;const Size GL_CLIENT_ACTIVE_TEXTURE = 0x84E1;const Size GLX_SLOW_VISUAL_EXT = 0x8001;const Size GLX_SWAP_INTERVAL_EXT = 0x20F1;const Size GLX_GREEN_SIZE = 9;const Size GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER = 0x8A45;const Size GL_SAMPLE_ALPHA_TO_COVERAGE = 0x809E;const Size GLX_OML_sync_control = 1;const Size GL_FOG_DENSITY = 0x0B62;const Size GL_CONSTANT_ATTENUATION = 0x1207;const Size GL_OUTPUT_TEXTURE_COORD25_EXT = 0x87B6;const Size GLX_RGBA_FLOAT_TYPE = 0x20B9;const Size GL_RG = 0x8227;const Size GL_EXT_draw_buffers2 = 1;const Size GL_RESAMPLE_ZERO_FILL_OML = 0x8987;const Size GL_INVALID_OPERATION = 0x0502;const Size GL_CLAMP_READ_COLOR = 0x891C;const Size GL_RED_INTEGER = 0x8D94;const Size GL_TEXTURE_BINDING_BUFFER = 0x8C2C;const Size GL_COLOR_ATTACHMENT5 = 0x8CE5;const Size GL_COLOR_ATTACHMENT4 = 0x8CE4;const Size GL_COLOR_ATTACHMENT7 = 0x8CE7;const Size GL_COLOR_ATTACHMENT6 = 0x8CE6;const Size GL_COLOR_ATTACHMENT1 = 0x8CE1;const Size GL_COLOR_ATTACHMENT0 = 0x8CE0;const Size GL_COLOR_ATTACHMENT3 = 0x8CE3;const Size GL_COLOR_ATTACHMENT2 = 0x8CE2;const Size GL_COLOR_ATTACHMENT9 = 0x8CE9;const Size GL_COLOR_ATTACHMENT8 = 0x8CE8;const Size GL_PACK_IMAGE_HEIGHT = 0x806C;const Size GL_PIXEL_MAP_B_TO_B_SIZE = 0x0CB8;const Size GL_BUFFER_USAGE = 0x8765;const Size GL_CULL_FACE_MODE = 0x0B45;const Size GL_POST_CONVOLUTION_COLOR_TABLE = 0x80D1;const Size GL_FRAGMENT_COLOR_MATERIAL_EXT = 0x8401;const Size GL_BOOL = 0x8B56;const Size GL_RGBA_INTEGER_MODE_EXT = 0x8D9E;const Size GL_OUTPUT_TEXTURE_COORD6_EXT = 0x87A3;const Size GL_POLYGON_OFFSET_BIAS_EXT = 0x8039;const Size GL_PGI_vertex_hints = 1;const Size GL_DOT3_RGB_EXT = 0x8740;const Size GL_COMBINE_RGB_EXT = 0x8571;const Size GL_T2F_V3F = 0x2A27;const Size GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_EXT = 0x8C8B;const Size GL_RGB_SNORM = 0x8F92;const Size GL_OPERAND0_ALPHA = 0x8598;const Size GL_ALWAYS = 0x0207;const Size GL_EXT_texture_integer = 1;const Size GL_MODELVIEW1_EXT = 0x850A;const Size GL_POINT_SPRITE_COORD_ORIGIN = 0x8CA0;const Size GL_POINT_SIZE_RANGE = 0x0B12;const Size GL_HISTOGRAM_WIDTH = 0x8026;const Size GL_TRANSFORM_FEEDBACK_BUFFER_BINDING = 0x8C8F;const Size GL_GREEN_BIAS = 0x0D19;const Size GL_SAMPLER_2D_MULTISAMPLE_ARRAY = 0x910B;const Size GL_SHADER_TYPE = 0x8B4F;const Size GLX_ACCUM_ALPHA_SIZE = 17;const Size GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE = 0x8D56;const Size GL_FRAMEBUFFER_EXT = 0x8D40;const Size GLX_Y_INVERTED_EXT = 0x20D4;const Size GLX_X_VISUAL_TYPE = 0x22;const Size GLX_RED_SIZE = 8;const Size GL_SLUMINANCE8_ALPHA8_EXT = 0x8C45;const Size GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER = 0x84F0;const Size GL_FOG_COLOR = 0x0B66;const Size GL_TEXTURE_LUMINANCE_TYPE = 0x8C14;const Size GL_RG16UI = 0x823A;const Size GL_LUMINANCE_ALPHA16I_EXT = 0x8D8D;const Size GLX_TRANSPARENT_INDEX_EXT = 0x8009;const Size GL_MAX_RECTANGLE_TEXTURE_SIZE_EXT = 0x84F8;const Size GL_FRAGMENT_LIGHTING_EXT = 0x8400;const Size GL_UNSIGNED_INT_10_10_10_2 = 0x8036;const Size GLX_USE_GL = 1;const Size GL_STENCIL_BACK_REF = 0x8CA3;const Size GL_LINE_RESET_TOKEN = 0x0707;const Size GL_COMBINE_RGB = 0x8571;const Size GL_ENV_ADD_EXT = 0;const Size GL_STEREO = 0x0C33;const Size GL_ALREADY_SIGNALED = 0x911A;const Size GL_LIGHT_MODEL_LOCAL_VIEWER = 0x0B51;const Size GL_EXT_blend_color = 1;const Size GL_UNSIGNED_INT_SAMPLER_CUBE_EXT = 0x8DD4;const Size GL_TEXTURE_CUBE_MAP = 0x8513;const Size GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY = 0x9103;const Size GL_CLIP_PLANE1 = 0x3001;const Size GL_CLIP_PLANE0 = 0x3000;const Size GL_CLIP_PLANE3 = 0x3003;const Size GL_CLIP_PLANE2 = 0x3002;const Size GL_CLIP_PLANE5 = 0x3005;const Size GL_CLIP_PLANE4 = 0x3004;const Size GL_2_BYTES = 0x1407;const Size GL_COLOR_INDEX16_EXT = 0x80E7;const Size GL_NORMAL_ARRAY_TYPE = 0x807E;const Size GL_TEXTURE_BUFFER = 0x8C2A;const Size GL_ENV_REVERSE_BLEND_EXT = 0;const Size GL_OUTPUT_TEXTURE_COORD4_EXT = 0x87A1;const Size GL_COLOR_ATTACHMENT10_EXT = 0x8CEA;const Size GLX_SAMPLES = 100001;const Size GL_LINE_STIPPLE_REPEAT = 0x0B26;const Size GL_POINTS = 0x0000;const Size GL_RENDERBUFFER_DEPTH_SIZE_EXT = 0x8D54;const Size GL_RENDERBUFFER_BLUE_SIZE = 0x8D52;const Size GL_UNIFORM_NAME_LENGTH = 0x8A39;const Size GL_EXT_blend_func_separate = 1;const Size GL_NAND = 0x150E;const Size GL_MAP1_INDEX = 0x0D91;const Size GL_LINE_WIDTH_GRANULARITY = 0x0B23;const Size GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE = 0x8E24;const Size GL_TEXTURE_SWIZZLE_R_EXT = 0x8E42;const Size GLX_DEPTH_BUFFER_BIT = 0x00000020;const Size GL_OP_MUL_EXT = 0x8786;const Size GL_ADD_SIGNED = 0x8574;const Size GL_MAX_3D_TEXTURE_SIZE = 0x8073;const Size GL_DONT_CARE = 0x1100;const Size GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING = 0x889C;const Size GLX_PSEUDO_COLOR_EXT = 0x8004;const Size GL_MAP_FLUSH_EXPLICIT_BIT = 0x0010;const Size GL_TEXTURE_COORD_ARRAY_SIZE = 0x8088;const Size GL_CURRENT_VERTEX_WEIGHT_EXT = 0x850B;const Size GL_SRC_ALPHA_SATURATE = 0x0308;const Size GL_UNSIGNED_INT_VEC3_EXT = 0x8DC7;const Size GL_MAX_EXT = 0x8008;const Size GL_UNIFORM_BLOCK_BINDING = 0x8A3F;const Size GL_LOCAL_CONSTANT_DATATYPE_EXT = 0x87ED;const Size GL_Z_EXT = 0x87D7;const Size GL_LINE_WIDTH = 0x0B21;const Size GL_LEQUAL = 0x0203;const Size GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT = 0x8CDA;const Size GL_MAX_CONVOLUTION_HEIGHT = 0x801B;const Size GL_PIXEL_MAP_A_TO_A_SIZE = 0x0CB9;const Size GL_RGBA_S3TC = 0x83A2;const Size GL_LIGHT_MODEL_AMBIENT = 0x0B53;const Size GL_HISTOGRAM = 0x8024;const Size GL_CLAMP_TO_EDGE_EXT = 0x812F;const Size GL_EXT_bgra = 1;const Size GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT = 0x8CD7;const Size GL_VERTEX_ARRAY_SIZE_EXT = 0x807A;const Size GLX_BACK_LEFT_BUFFER_BIT = 0x00000004;const Size GL_MAX_CLIENT_ATTRIB_STACK_DEPTH = 0x0D3B;const Size GL_CURRENT_VERTEX_ATTRIB = 0x8626;const Size GL_OP_FRAC_EXT = 0x8789;const Size GL_LUMINANCE6_ALPHA2 = 0x8044;const Size GLX_SAMPLE_BUFFERS = 100000;const Size GL_PRIMARY_COLOR = 0x8577;const Size GL_C3F_V3F = 0x2A24;const Size GL_OP_EXP_BASE_2_EXT = 0x8791;const Size GL_AUX_BUFFERS = 0x0C00;const Size GL_VERTEX_WEIGHT_ARRAY_SIZE_EXT = 0x850D;const Size GL_IMPLEMENTATION_COLOR_READ_TYPE = 0x8B9A;const Size GL_UNSIGNED_SHORT_4_4_4_4_REV = 0x8365;const Size GLX_MAX_PBUFFER_PIXELS = 0x8018;const Size GL_INT_SAMPLER_2D_EXT = 0x8DCA;const Size GL_SMOOTH = 0x1D01;const Size GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER_EXT = 0x8CD4;const Size GL_CURRENT_TEXTURE_COORDS = 0x0B03;const Size GL_STATIC_READ = 0x88E5;const Size GL_LUMINANCE8I_EXT = 0x8D92;const Size GL_MAX_COLOR_ATTACHMENTS_EXT = 0x8CDF;const Size GLX_VISUAL_CAVEAT_EXT = 0x20;const Size GL_UNPACK_RESAMPLE_OML = 0x8985;const Size GL_CONVOLUTION_2D_EXT = 0x8011;const Size GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION = 0x8E4C;const Size GL_SHARED_TEXTURE_PALETTE_EXT = 0x81FB;const Size GL_ACTIVE_STENCIL_FACE_EXT = 0x8911;const Size GL_LUMINANCE_ALPHA = 0x190A;const Size GL_MAX_CONVOLUTION_WIDTH = 0x801A;const Size GL_TEXTURE_WRAP_R_EXT = 0x8072;const Size GL_PIXEL_UNPACK_BUFFER_BINDING = 0x88EF;const Size GL_ENV_REPLACE_EXT = 0;const Size GL_COMPRESSED_INTENSITY = 0x84EC;const Size GL_TRANSFORM_FEEDBACK_VARYINGS = 0x8C83;const Size GL_MAX_COLOR_ATTACHMENTS = 0x8CDF;const Size GL_MAT_EMISSION_BIT_PGI = 0x00800000;const Size GL_ALPHA = 0x1906;const Size GL_ALPHA_INTEGER_EXT = 0x8D97;const Size GL_MAX_ELEMENTS_VERTICES = 0x80E8;const Size GL_CURRENT_COLOR = 0x0B00;const Size GL_TEXTURE_FILTER_CONTROL_EXT = 0x8500;const Size GL_COMPRESSED_RED_RGTC1_EXT = 0x8DBB;const Size GL_INVALID_FRAMEBUFFER_OPERATION = 0x0506;const Size GL_RGB_INTEGER_EXT = 0x8D98;const Size GLX_TEXTURE_2D_EXT = 0x20DC;const Size GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING = 0x889D;const Size GL_DEPTH32F_STENCIL8 = 0x8CAD;const Size GL_MAX_ARRAY_TEXTURE_LAYERS = 0x88FF;const Size GL_MAX_SERVER_WAIT_TIMEOUT = 0x9111;const Size GL_NOR = 0x1508;const Size GL_EXT_texture_snorm = 1;const Size GL_COLOR_TABLE_LUMINANCE_SIZE_EXT = 0x80DE;const Size GL_FLAT = 0x1D00;const Size GL_PACK_ALIGNMENT = 0x0D05;const Size GL_PIXEL_MAP_S_TO_S = 0x0C71;const Size GL_RGBA8UI_EXT = 0x8D7C;const Size GL_RGB2_EXT = 0x804E;const Size GL_UNPACK_LSB_FIRST = 0x0CF1;const Size GL_SOURCE1_RGB = 0x8581;const Size GL_CONSTANT_BORDER = 0x8151;const Size GL_UNSIGNED_INT_VEC4_EXT = 0x8DC8;const Size GL_CURRENT_FOG_COORDINATE_EXT = 0x8453;const Size GL_ACTIVE_TEXTURE = 0x84E0;const Size GL_TEXTURE_BASE_LEVEL = 0x813C;const Size GL_ALPHA_INTEGER = 0x8D97;const Size GL_GREEN_SCALE = 0x0D18;const Size GL_CG_FRAGMENT_SHADER_EXT = 0x890F;const Size GL_2PASS_1_EXT = 0x80A3;const Size GL_UNSIGNED_INT_SAMPLER_3D = 0x8DD3;const Size GL_EXT_shader_image_load_store = 1;const Size GL_COLOR_INDEX4_EXT = 0x80E4;const Size GL_INT_VEC3 = 0x8B54;const Size GL_INT_VEC2 = 0x8B53;const Size GL_STENCIL_FAIL = 0x0B94;const Size GL_POST_CONVOLUTION_GREEN_BIAS_EXT = 0x8021;const Size GL_VERSION_4_0 = 1;const Size GL_VERSION_4_1 = 1;const Size GL_COLOR_TABLE = 0x80D0;const Size GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT = 0x8CDC;const Size GL_PACK_SKIP_IMAGES_EXT = 0x806B;const Size GL_FRAMEBUFFER_UNSUPPORTED = 0x8CDD;const Size GL_RED_BIAS = 0x0D15;const Size GL_LUMINANCE_ALPHA32I_EXT = 0x8D87;const Size GL_KTX_FRONT_REGION = 0x0;const Size GL_R8 = 0x8229;const Size GL_RENDER_MODE = 0x0C40;const Size GL_EDGE_FLAG_ARRAY_BUFFER_BINDING = 0x889B;const Size GL_MAX_CUBE_MAP_TEXTURE_SIZE = 0x851C;const Size GL_CONSTANT_COLOR_EXT = 0x8001;const Size GL_RENDERBUFFER_WIDTH = 0x8D42;const Size GL_EXT_shared_texture_palette = 1;const Size GL_MAX_VERTEX_VARYING_COMPONENTS_EXT = 0x8DDE;const Size GLX_TEXTURE_RECTANGLE_EXT = 0x20DD;const Size GL_VERTEX_ARRAY_STRIDE_EXT = 0x807C;const Size GL_TEXTURE_BLUE_SIZE = 0x805E;const Size GL_HISTOGRAM_GREEN_SIZE = 0x8029;const Size GL_DRAW_BUFFER10 = 0x882F;const Size GL_DRAW_BUFFER11 = 0x8830;const Size GL_DRAW_BUFFER12 = 0x8831;const Size GL_DRAW_BUFFER13 = 0x8832;const Size GL_DRAW_BUFFER14 = 0x8833;const Size GL_DRAW_BUFFER15 = 0x8834;const Size GL_RGB12_EXT = 0x8053;const Size GL_EDGEFLAG_BIT_PGI = 0x00040000;const Size GL_R16F = 0x822D;const Size GL_EXT_vertex_attrib_64bit = 1;const Size GL_CONSTANT_ALPHA = 0x8003;const Size GL_R16I = 0x8233;const Size GL_FRAGMENT_COLOR_MATERIAL_FACE_EXT = 0x8402;const Size GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER = 0x8A46;const Size GL_COMPARE_R_TO_TEXTURE = 0x884E;const Size GL_DEPTH_BOUNDS_EXT = 0x8891;const Size GL_PREVIOUS = 0x8578;const Size GL_ALPHA_SNORM = 0x9010;const Size GL_PROXY_COLOR_TABLE = 0x80D3;const Size GLX_DIRECT_COLOR = 0x8003;const Size GL_STENCIL = 0x1802;const Size GL_SAMPLE_MASK_VALUE = 0x8E52;const Size GL_DIFFUSE = 0x1201;const Size GL_ENV_REVERSE_SUBTRACT_EXT = 0;const Size GL_SOURCE2_RGB = 0x8582;const Size GL_TEXTURE_3D_EXT = 0x806F;const Size GL_INGR_color_clamp = 1;const Size GL_KTX_Z_REGION = 0x2;const Size GL_TEXTURE_GEN_S = 0x0C60;const Size GL_MAX_RENDERBUFFER_SIZE = 0x84E8;const Size GL_INCR_WRAP = 0x8507;const Size GL_RENDERBUFFER_ALPHA_SIZE = 0x8D53;const Size GL_TEXTURE_2D_BINDING_EXT = 0x8069;const Size GL_LIGHT_MODEL_TWO_SIDE = 0x0B52;const Size GL_DECR_WRAP = 0x8508;const Size GL_OP_SET_LT_EXT = 0x878D;const Size GL_COMPILE = 0x1300;const Size GL_SAMPLE_POSITION = 0x8E50;const Size GL_EXT_provoking_vertex = 1;const Size GL_INCR = 0x1E02;const Size GL_EXT_texture_compression_dxt1 = 1;const Size GL_MAX_RECTANGLE_TEXTURE_SIZE = 0x84F8;const Size GL_ALPHA_TEST_REF = 0x0BC2;const Size GL_UNPACK_SKIP_ROWS = 0x0CF3;const Size GL_EXT_transform_feedback = 1;const Size GL_RGB_SCALE_EXT = 0x8573;const Size GL_DEPTH_CLAMP = 0x864F;const Size GL_LUMINANCE_ALPHA_INTEGER_EXT = 0x8D9D;const Size GL_BLEND_DST_ALPHA = 0x80CA;const Size GL_INT_SAMPLER_CUBE = 0x8DCC;const Size GL_CURRENT_QUERY = 0x8865;const Size GL_MODELVIEW1_MATRIX_EXT = 0x8506;const Size GL_VERTEX_SHADER = 0x8B31;const Size GL_RGB16UI = 0x8D77;const Size GL_COPY_INVERTED = 0x150C;const Size GL_TEXTURE_PRIORITY = 0x8066;const Size GL_MAX_GEOMETRY_INPUT_COMPONENTS = 0x9123;const Size GL_LOWER_LEFT = 0x8CA1;const Size GL_INDEX_ARRAY_EXT = 0x8077;const Size GL_GEOMETRY_OUTPUT_TYPE_EXT = 0x8DDC;const Size GL_PIXEL_MIN_FILTER_EXT = 0x8332;const Size GL_TEXTURE_BINDING_1D = 0x8068;const Size GL_AUX1 = 0x040A;const Size GL_NATIVE_GRAPHICS_HANDLE_PGI = 107010;const Size GL_TEXTURE_BINDING_CUBE_MAP_EXT = 0x8514;const Size GL_PIXEL_UNPACK_BUFFER = 0x88EC;const Size GL_LOCAL_CONSTANT_VALUE_EXT = 0x87EC;const Size GL_POINT_DISTANCE_ATTENUATION = 0x8129;const Size GL_TEXTURE_BUFFER_DATA_STORE_BINDING = 0x8C2D;const Size GL_UNSIGNED_BYTE_3_3_2_EXT = 0x8032;const Size GL_AMBIENT_AND_DIFFUSE = 0x1602;const Size GL_TEXTURE_1D_BINDING_EXT = 0x8068;const Size GL_COMPRESSED_SIGNED_RED_RGTC1_EXT = 0x8DBC;const Size GL_ZERO = 0;const Size GL_ELEMENT_ARRAY_BUFFER = 0x8893;const Size GL_SYNC_STATUS = 0x9114;const Size GL_MAX_NAME_STACK_DEPTH = 0x0D37;const Size GL_READ_ONLY = 0x88B8;const Size GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCALS_EXT = 0x87CE;const Size GL_MAP1_GRID_DOMAIN = 0x0DD0;const Size GL_EXT_texture_sRGB = 1;const Size GL_INVARIANT_EXT = 0x87C2;const Size GLX_TRANSPARENT_TYPE_EXT = 0x23;const Size GL_PROXY_HISTOGRAM = 0x8025;const Size GL_PIXEL_MAP_I_TO_R_SIZE = 0x0CB2;const Size GL_EXT_cmyka = 1;const Size GLX_MIPMAP_TEXTURE_EXT = 0x20D7;const Size GL_T2F_C3F_V3F = 0x2A2A;const Size GL_HISTOGRAM_BLUE_SIZE_EXT = 0x802A;const Size GL_COMPRESSED_RED = 0x8225;const Size GL_BGR = 0x80E0;const Size GL_IGNORE_BORDER = 0x8150;const Size GL_RGBA16_SNORM = 0x8F9B;const Size GL_INTENSITY8UI_EXT = 0x8D7F;const Size GL_MAX_VIEWPORT_DIMS = 0x0D3A;const Size GL_LIST_INDEX = 0x0B33;const Size GL_OP_RECIP_EXT = 0x8794;const Size GL_FRAGMENT_NORMAL_EXT = 0x834A;const Size GL_TEXTURE_BORDER_COLOR = 0x1004;const Size GL_PROXY_TEXTURE_1D_EXT = 0x8063;const Size GL_MAX_ACTIVE_LIGHTS_EXT = 0x8405;const Size GL_MAX_GEOMETRY_OUTPUT_VERTICES_EXT = 0x8DE0;const Size GLX_PBUFFER = 0x8023;const Size GL_LUMINANCE16_ALPHA16 = 0x8048;const Size GL_COMPILE_STATUS = 0x8B81;const Size GL_LOGIC_OP_MODE = 0x0BF0;const Size GL_OUTPUT_TEXTURE_COORD17_EXT = 0x87AE;const Size GLX_BAD_ENUM = 7;const Size GL_UNSIGNED_INT_24_8 = 0x84FA;const Size GL_UNSIGNED_BYTE = 0x1401;const Size GL_INT_SAMPLER_BUFFER_EXT = 0x8DD0;const Size GL_QUADS = 0x0007;const Size GL_R16 = 0x822A;const Size GL_EXT_texture_rectangle = 1;const Size GL_PIXEL_PACK_BUFFER = 0x88EB;const Size GL_VERSION_1_5 = 1;const Size GL_VERSION_1_4 = 1;const Size GL_VERSION_1_3 = 1;const Size GL_VERSION_1_2 = 1;const Size GL_VERSION_1_1 = 1;const Size GL_OUTPUT_FOG_EXT = 0x87BD;const Size GLX_RGBA_BIT = 0x00000001;const Size GL_HISTOGRAM_ALPHA_SIZE_EXT = 0x802B;const Size GL_UNSIGNED_BYTE_3_3_2 = 0x8032;const Size GL_422_REV_AVERAGE_EXT = 0x80CF;const Size GL_MAX_VERTEX_BINDABLE_UNIFORMS_EXT = 0x8DE2;const Size GL_TRANSFORM_FEEDBACK_BUFFER_SIZE = 0x8C85;const Size GL_DRAW_BUFFER = 0x0C01;const Size GL_POST_COLOR_MATRIX_BLUE_SCALE = 0x80B6;const Size GL_VERSION_3_1 = 1;const Size GL_VERSION_3_0 = 1;const Size GL_VERSION_3_3 = 1;const Size GL_STENCIL_INDEX1 = 0x8D46;const Size GL_STENCIL_INDEX4 = 0x8D47;const Size GL_MIRROR_CLAMP_TO_BORDER_EXT = 0x8912;const Size GL_TEXTURE_GREEN_TYPE = 0x8C11;const Size GL_MAX_COLOR_MATRIX_STACK_DEPTH = 0x80B3;const Size GL_DEPTH_BITS = 0x0D56;const Size GL_RGB8UI = 0x8D7D;const Size GL_STENCIL_INDEX16 = 0x8D49;const Size GL_OUTPUT_TEXTURE_COORD21_EXT = 0x87B2;const Size GL_CURRENT_RASTER_TEXTURE_COORDS = 0x0B06;const Size GL_POST_COLOR_MATRIX_COLOR_TABLE = 0x80D2;const Size GLX_PRESERVED_CONTENTS = 0x801B;const Size GL_EXT_framebuffer_multisample = 1;const Size GL_OP_DOT4_EXT = 0x8785;const Size GL_BLEND_DST_RGB = 0x80C8;const Size GL_COPY = 0x1503;const Size GL_MAP1_VERTEX_3 = 0x0D97;const Size GL_SAMPLE_PATTERN_EXT = 0x80AC;const Size GLX_X_RENDERABLE = 0x8012;const Size GL_VERTEX_ATTRIB_ARRAY_INTEGER_EXT = 0x88FD;const Size GL_CLEAR = 0x1500;const Size GL_LIGHT7 = 0x4007;const Size GL_CURRENT_RASTER_POSITION_VALID = 0x0B08;const Size GL_HISTOGRAM_LUMINANCE_SIZE = 0x802C;const Size GL_MATRIX_MODE = 0x0BA0;const Size GL_COLOR_ATTACHMENT3_EXT = 0x8CE3;const Size GL_DRAW_BUFFER9 = 0x882E;const Size GL_PIXEL_PACK_BUFFER_BINDING = 0x88ED;const Size GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS = 0x8B4D;const Size GLX_MAX_PBUFFER_HEIGHT = 0x8017;const Size GL_TEXTURE_BUFFER_DATA_STORE_BINDING_EXT = 0x8C2D;const Size GL_SELECTION_BUFFER_SIZE = 0x0DF4;const Size GL_RGBA16_EXT = 0x805B;const Size GL_UNSIGNED_INT_10F_11F_11F_REV_EXT = 0x8C3B;const Size GLX_STATIC_COLOR_EXT = 0x8005;const Size GL_OUTPUT_TEXTURE_COORD24_EXT = 0x87B5;const Size GL_CURRENT_RASTER_POSITION = 0x0B07;const Size GL_VERTEX_ATTRIB_ARRAY_SIZE = 0x8623;const Size GL_EXP2 = 0x0801;const Size GL_SHADOW_ATTENUATION_EXT = 0x834E;const Size GL_EXT_texture_buffer_object = 1;const Size GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_EXT = 0x8C88;const Size GL_FLOAT_VEC2 = 0x8B50;const Size GL_FOG_INDEX = 0x0B61;const Size GLX_SWAP_METHOD_OML = 0x8060;const Size GL_FLOAT_VEC4 = 0x8B52;const Size GL_R11F_G11F_B10F_EXT = 0x8C3A;const Size GL_COEFF = 0x0A00;const Size GL_SOURCE2_ALPHA = 0x858A;const Size GL_BUFFER_SIZE = 0x8764;const Size GLX_FRONT_RIGHT_EXT = 0x20DF;const Size GL_UNSIGNED_INT_SAMPLER_BUFFER = 0x8DD8;const Size GL_UNIFORM_BUFFER_START = 0x8A29;const Size GL_INT_VEC4 = 0x8B55;const Size GL_PROXY_HISTOGRAM_EXT = 0x8025;const Size GL_TEXTURE_DEPTH_EXT = 0x8071;const Size GL_MAX_TEXTURE_STACK_DEPTH = 0x0D39;const Size GL_TEXTURE_FILTER_CONTROL = 0x8500;const Size GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_EXT = 0x8DDF;const Size GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS = 0x8E7F;const Size GL_LUMINANCE_ALPHA8I_EXT = 0x8D93;const Size GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT = 0x8C4E;const Size GL_TEXTURE_COORD_ARRAY_STRIDE = 0x808A;const Size GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT = 0x8CDB;const Size GL_Q = 0x2003;const Size GL_R = 0x2002;const Size GL_S = 0x2000;const Size GL_T = 0x2001;const Size GL_DOUBLE = 0x140A;const Size GLX_SCREEN_EXT = 0x800C;const Size GL_EXT_separate_specular_color = 1;const Size GL_4PASS_3_EXT = 0x80A7;const Size GL_GREEN_MIN_CLAMP_INGR = 0x8561;const Size GL_OP_RECIP_SQRT_EXT = 0x8795;const Size GL_EXT_texture_env_combine = 1;const Size GL_MAX_SAMPLES = 0x8D57;const Size GL_NOOP = 0x1505;const Size GL_LIGHT_MODEL_COLOR_CONTROL_EXT = 0x81F8;const Size GL_CONTEXT_FLAGS = 0x821E;const Size GL_TEXCOORD3_BIT_PGI = 0x40000000;const Size GL_BLEND_DST_RGB_EXT = 0x80C8;const Size GL_INTENSITY16_SNORM = 0x901B;const Size GL_PROJECTION_MATRIX = 0x0BA7;const Size GL_POINT_SIZE_MAX = 0x8127;const Size GL_POST_COLOR_MATRIX_GREEN_SCALE = 0x80B5;const Size GL_MODELVIEW_MATRIX = 0x0BA6;const Size GL_QUERY_WAIT = 0x8E13;const Size GL_RED_SCALE = 0x0D14;const Size GL_OUTPUT_TEXTURE_COORD2_EXT = 0x879F;const Size GL_VERTEX_SHADER_LOCALS_EXT = 0x87D3;const Size GL_MAX_TEXTURE_LOD_BIAS = 0x84FD;const Size GL_ALIASED_LINE_WIDTH_RANGE = 0x846E;const Size GL_MAX_CUBE_MAP_TEXTURE_SIZE_EXT = 0x851C;const Size GL_EXT_light_texture = 1;const Size GL_FRAGMENT_MATERIAL_EXT = 0x8349;const Size GL_HISTOGRAM_EXT = 0x8024;const Size GLX_WIDTH = 0x801D;const Size GL_BGRA = 0x80E1;const Size GL_UNSIGNED_INT_SAMPLER_2D_EXT = 0x8DD2;const Size GL_RENDERBUFFER_WIDTH_EXT = 0x8D42;const Size GL_POST_COLOR_MATRIX_RED_BIAS = 0x80B8;const Size GL_POINT = 0x1B00;const Size GL_ALPHA16UI_EXT = 0x8D78;const Size GL_RENDERBUFFER_HEIGHT_EXT = 0x8D43;const Size GL_POLYGON_TOKEN = 0x0703;const Size GL_SMOOTH_LINE_WIDTH_GRANULARITY = 0x0B23;const Size GL_COMPRESSED_RGBA_FXT1_3DFX = 0x86B1;const Size GL_SRGB = 0x8C40;const Size GL_ONE_MINUS_CONSTANT_COLOR = 0x8002;const Size GL_UNSIGNED_INT_8_8_8_8 = 0x8035;const Size GL_MAX_TESS_CONTROL_INPUT_COMPONENTS = 0x886C;const Size GL_UNSIGNED_INT_SAMPLER_2D_RECT = 0x8DD5;const Size GL_EXT_texture_swizzle = 1;const Size GL_FOG_COORDINATE_ARRAY_POINTER_EXT = 0x8456;const Size GL_LUMINANCE_ALPHA16UI_EXT = 0x8D7B;const Size GLX_TRANSPARENT_RGB_EXT = 0x8008;const Size GL_3DFX_tbuffer = 1;const Size GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME = 0x8CD1;const Size GL_BLEND_SRC_ALPHA = 0x80CB;const Size GL_INTERPOLATE_EXT = 0x8575;const Size GL_AND_REVERSE = 0x1502;const Size GL_MAX_INTEGER_SAMPLES = 0x9110;const Size GL_HISTOGRAM_GREEN_SIZE_EXT = 0x8029;const Size GL_CLAMP_FRAGMENT_COLOR = 0x891B;const Size GL_QUERY_RESULT_AVAILABLE = 0x8867;const Size GL_FORMAT_SUBSAMPLE_24_24_OML = 0x8982;const Size GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT = 0x8CD1;const Size GL_FOG_MODE = 0x0B65;const Size GL_RGBA8_SNORM = 0x8F97;const Size GL_COLOR3_BIT_PGI = 0x00010000;const Size GL_INT_SAMPLER_3D = 0x8DCB;const Size GL_MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT = 0x8DE3;const Size GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS_EXT = 0x8F39;const Size GL_AND = 0x1501;const Size GL_ACTIVE_PROGRAM_EXT = 0x8B8D;const Size GL_INDEX_MODE = 0x0C30;const Size GL_BLUE_MIN_CLAMP_INGR = 0x8562;const Size GL_ACCUM_GREEN_BITS = 0x0D59;const Size GL_LINE_STRIP_ADJACENCY_EXT = 0xB;const Size GLX_TEXTURE_FORMAT_RGB_EXT = 0x20D9;const Size GL_INT_SAMPLER_1D_ARRAY_EXT = 0x8DCE;const Size GL_STATIC_COPY = 0x88E6;const Size GL_3_BYTES = 0x1408;const Size GL_COMPRESSED_RED_GREEN_RGTC2_EXT = 0x8DBD;const Size GL_INTENSITY12_EXT = 0x804C;const Size GL_ONE_MINUS_DST_ALPHA = 0x0305;const Size GL_COMPRESSED_RGB_S3TC_DXT1_EXT = 0x83F0;const Size GL_EXT_texture_compression_rgtc = 1;const Size GL_TEXTURE_SHARED_SIZE_EXT = 0x8C3F;const Size GL_SYNC_GPU_COMMANDS_COMPLETE = 0x9117;const Size GL_SMOOTH_POINT_SIZE_RANGE = 0x0B12;const Size GLX_NONE = 0x8000;const Size GL_ALIASED_POINT_SIZE_RANGE = 0x846D;const Size GL_COMPRESSED_SRGB_EXT = 0x8C48;const Size GL_EXT_fragment_lighting = 1;const Size GL_NEGATIVE_X_EXT = 0x87D9;const Size GL_SCISSOR_BIT = 0x00080000;const Size GL_GEOMETRY_VERTICES_OUT_EXT = 0x8DDA;const Size GL_MAX_GEOMETRY_OUTPUT_VERTICES = 0x8DE0;const Size GL_ACTIVE_UNIFORM_MAX_LENGTH = 0x8B87;const Size GL_UNSIGNED_INT_SAMPLER_2D_RECT_EXT = 0x8DD5;const Size GL_PERTURB_EXT = 0x85AE;const Size GL_TANGENT_ARRAY_EXT = 0x8439;const Size GL_IMPLEMENTATION_COLOR_READ_FORMAT = 0x8B9B;const Size GL_COLOR_TABLE_BIAS = 0x80D7;const Size GL_FEEDBACK_BUFFER_SIZE = 0x0DF1;const Size GL_VARIANT_ARRAY_TYPE_EXT = 0x87E7;const Size GL_COMPRESSED_TEXTURE_FORMATS = 0x86A3;const Size GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY = 0x900F;const Size GL_DRAW_FRAMEBUFFER_BINDING_EXT = 0x8CA6;const Size GL_MAT_COLOR_INDEXES_BIT_PGI = 0x01000000;const Size GL_PRIMITIVES_GENERATED_EXT = 0x8C87;const Size GL_RENDERBUFFER_STENCIL_SIZE_EXT = 0x8D55;const Size GL_MAX_PIXEL_MAP_TABLE = 0x0D34;const Size GL_EXT_polygon_offset = 1;const Size GL_STENCIL_INDEX1_EXT = 0x8D46;const Size GL_SAMPLER_2D_RECT_SHADOW = 0x8B64;const Size GL_POINT_TOKEN = 0x0701;const Size GL_T4F_C4F_N3F_V4F = 0x2A2D;const Size GL_TEXTURE30 = 0x84DE;const Size GL_TEXTURE31 = 0x84DF;const Size GL_UNSIGNED_INT_SAMPLER_1D = 0x8DD1;const Size GL_EXT_texture_compression_s3tc = 1;const Size GLX_PBUFFER_HEIGHT = 0x8040;const Size GL_BACK_LEFT = 0x0402;const Size GL_TEXTURE_ENV_COLOR = 0x2201;const Size GL_BUFFER_MAP_POINTER = 0x88BD;const Size GL_LINE_SMOOTH = 0x0B20;const Size GL_STENCIL_ATTACHMENT_EXT = 0x8D20;const Size GL_STENCIL_REF = 0x0B97;const Size GL_LUMINANCE_ALPHA8UI_EXT = 0x8D81;const Size GL_NORMAL_MAP_EXT = 0x8511;const Size GL_ALWAYS_FAST_HINT_PGI = 107020;const Size GL_BLEND_EQUATION_RGB_EXT = 0x8009;const Size GL_COPY_WRITE_BUFFER = 0x8F37;const Size GL_INDEX_ARRAY_COUNT_EXT = 0x8087;const Size GL_OPERAND0_RGB = 0x8590;const Size GL_EXT_texture_object = 1;const Size GL_NATIVE_GRAPHICS_BEGIN_HINT_PGI = 107011;const Size GL_LIGHT_MODEL_COLOR_CONTROL = 0x81F8;const Size GL_FEEDBACK = 0x1C01;const Size GLX_LARGEST_PBUFFER = 0x801C;const Size GL_TEXCOORD1_BIT_PGI = 0x10000000;const Size GL_EXT_texture = 1;const Size GL_MAX_ATTRIB_STACK_DEPTH = 0x0D35;const Size GL_RGBA4_DXT5_S3TC = 0x83A5;const Size GL_PROXY_TEXTURE_1D_ARRAY = 0x8C19;const Size GL_PIXEL_MAP_I_TO_G = 0x0C73;const Size GL_INTERLEAVED_ATTRIBS_EXT = 0x8C8C;const Size GL_PIXEL_MAP_I_TO_B = 0x0C74;const Size GL_PIXEL_MAP_I_TO_A = 0x0C75;const Size GL_EXT_packed_pixels = 1;const Size GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS = 0x8E47;const Size GL_PIXEL_MAP_I_TO_I = 0x0C70;const Size GL_PIXEL_MAP_I_TO_R = 0x0C72;const Size GL_MAX_3D_TEXTURE_SIZE_EXT = 0x8073;const Size GL_LINEAR_ATTENUATION = 0x1208;const Size GL_VERTEX_ARRAY_POINTER_EXT = 0x808E;const Size GL_LIST_BIT = 0x00020000;const Size GL_OP_LOG_BASE_2_EXT = 0x8792;const Size GL_EDGE_FLAG_ARRAY_STRIDE = 0x808C;const Size GL_TEXTURE_MAG_FILTER = 0x2800;const Size GL_MAX_VERTEX_SHADER_INSTRUCTIONS_EXT = 0x87C5;const Size GL_CONVOLUTION_FILTER_BIAS = 0x8015;const Size GL_LUMINANCE4_EXT = 0x803F;const Size GL_COLOR_MATERIAL_FACE = 0x0B55;const Size GL_TEXTURE_LIGHT_EXT = 0x8350;const Size GL_TEXTURE_RECTANGLE_EXT = 0x84F5;const Size GLX_TRANSPARENT_RED_VALUE_EXT = 0x25;const Size GLX_EXT_swap_control = 1;const Size GL_SAMPLER_CUBE = 0x8B60;const Size GL_RGB_S3TC = 0x83A0;const Size GL_TANGENT_ARRAY_STRIDE_EXT = 0x843F;const Size GL_LEFT = 0x0406;const Size GLX_BIND_TO_TEXTURE_RGB_EXT = 0x20D0;const Size GL_POST_COLOR_MATRIX_BLUE_BIAS = 0x80BA;const Size GL_DEPTH24_STENCIL8_EXT = 0x88F0;const Size GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER = 0x84F1;const Size GL_COMPRESSED_SRGB_S3TC_DXT1_EXT = 0x8C4C;const Size GL_PROXY_TEXTURE_3D_EXT = 0x8070;const Size GL_EXT_vertex_array_bgra = 1;const Size GLX_AUX6_EXT = 0x20E8;const Size GL_MINMAX = 0x802E;const Size GL_MAX_TEXTURE_SIZE = 0x0D33;const Size GL_ALPHA8_SNORM = 0x9014;const Size GL_ARRAY_BUFFER = 0x8892;const Size GL_COMPRESSED_ALPHA = 0x84E9;const Size GL_MAX_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT = 0x8337;const Size GL_MAX_LIGHTS = 0x0D31;const Size GL_TEXTURE_COMPRESSED_IMAGE_SIZE = 0x86A0;const Size GL_UNSIGNED_INT_SAMPLER_2D_ARRAY_EXT = 0x8DD7;const Size GL_TEXTURE_1D = 0x0DE0;const Size GL_NAME_STACK_DEPTH = 0x0D70;const Size GL_BLEND_SRC_RGB = 0x80C9;const Size GL_ALPHA8I_EXT = 0x8D90;const Size GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS = 0x8A31;const Size GL_TRIANGLE_STRIP_ADJACENCY_EXT = 0xD;const Size GL_SAMPLE_ALPHA_TO_ONE = 0x809F;const Size GL_WEIGHT_ARRAY_BUFFER_BINDING = 0x889E;const Size GL_PROGRAM_POINT_SIZE_EXT = 0x8642;const Size GL_ALPHA_TEST = 0x0BC0;const Size GL_EXT_clip_volume_hint = 1;const Size GL_UNPACK_IMAGE_HEIGHT_EXT = 0x806E;const Size GL_SECONDARY_COLOR_ARRAY_SIZE_EXT = 0x845A;const Size GL_STENCIL_CLEAR_TAG_VALUE_EXT = 0x88F3;const Size GL_INT_SAMPLER_2D = 0x8DCA;const Size GL_UNSIGNED_INT_SAMPLER_1D_ARRAY = 0x8DD6;const Size GL_RG32I = 0x823B;const Size GL_PIXEL_MAP_A_TO_A = 0x0C79;const Size GL_TEXTURE_COORD_ARRAY_POINTER = 0x8092;const Size GL_TEXTURE_ALPHA_SIZE_EXT = 0x805F;const Size GL_MAX_GEOMETRY_UNIFORM_BLOCKS = 0x8A2C;const Size GL_LUMINANCE8_SNORM = 0x9015;const Size GL_MAT_SPECULAR_BIT_PGI = 0x04000000;const Size GL_OML_resample = 1;const Size GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_EXT = 0x906B;const Size GL_POINT_FADE_THRESHOLD_SIZE_EXT = 0x8128;const Size GL_FIXED_ONLY = 0x891D;const Size GL_OP_MAX_EXT = 0x878A;const Size GL_RGBA32I_EXT = 0x8D82;const Size GL_NONE = 0;const Size GL_POLYGON_MODE = 0x0B40;const Size GL_HALF_FLOAT = 0x140B;const Size GL_RGBA_SNORM = 0x8F93;const Size GL_V2F = 0x2A20;const Size GL_LIGHTING_BIT = 0x00000040;const Size GL_SCISSOR_BOX = 0x0C10;const Size GL_UNIFORM_BLOCK_DATA_SIZE = 0x8A40;const Size GLX_TEXTURE_FORMAT_EXT = 0x20D5;const Size GL_INVERTED_SCREEN_W_REND = 0x8491;const Size GL_UNIFORM_IS_ROW_MAJOR = 0x8A3E;const Size GL_MAX_UNIFORM_BLOCK_SIZE = 0x8A30;const Size GL_INDEX_ARRAY = 0x8077;const Size GL_CONVOLUTION_1D_EXT = 0x8010;const Size GL_SLUMINANCE_ALPHA_EXT = 0x8C44;const Size GL_LIST_BASE = 0x0B32;const Size GL_RGB10 = 0x8052;const Size GL_MIN_FRAGMENT_INTERPOLATION_OFFSET = 0x8E5B;const Size GL_COLOR_WRITEMASK = 0x0C23;const Size GL_EXT_texture_edge_clamp = 1;const Size GL_MODELVIEW0_STACK_DEPTH_EXT = 0x0BA3;const Size GL_FRAMEBUFFER_SRGB_CAPABLE_EXT = 0x8DBA;const Size GL_LIGHT_ENV_MODE_EXT = 0x8407;const Size GL_TEXTURE_WRAP_R = 0x8072;const Size GL_TEXTURE_WRAP_S = 0x2802;const Size GL_TEXTURE_WRAP_T = 0x2803;const Size GL_DST_ALPHA = 0x0304;const Size GL_INT_SAMPLER_3D_EXT = 0x8DCB;const Size GL_TEXTURE_2D_ARRAY_EXT = 0x8C1A;const Size GL_EVAL_BIT = 0x00010000;const Size GL_INT_SAMPLER_2D_ARRAY = 0x8DCF;const Size GLX_TEXTURE_TARGET_EXT = 0x20D6;const Size GL_COMPRESSED_RGB = 0x84ED;const Size GL_SCISSOR_TEST = 0x0C11;const Size GL_COLOR_ARRAY_STRIDE_EXT = 0x8083;const Size GL_CULL_VERTEX_OBJECT_POSITION_EXT = 0x81AC;const Size GL_GLEXT_VERSION = 64;const Size GL_BLUE_BITS = 0x0D54;const Size GL_OUTPUT_COLOR1_EXT = 0x879C;const Size GL_ALPHA_MIN_CLAMP_INGR = 0x8563;const Size GL_PACK_SWAP_BYTES = 0x0D00;const Size GL_EQUAL = 0x0202;const Size GL_TEXTURE_BINDING_1D_ARRAY = 0x8C1C;const Size GL_SECONDARY_COLOR_ARRAY_SIZE = 0x845A;const Size GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT = 0x906C;const Size GL_EXT_pixel_transform = 1;const Size GL_POINT_FADE_THRESHOLD_SIZE = 0x8128;const Size GL_INT_SAMPLER_BUFFER = 0x8DD0;const Size GL_INT_SAMPLER_1D_EXT = 0x8DC9;const Size GL_EXT_rescale_normal = 1;const Size GL_TEXTURE_COORD_ARRAY_EXT = 0x8078;const Size GL_LINE_STRIP = 0x0003;const Size GL_PACK_ROW_LENGTH = 0x0D02;const Size GLX_TEXTURE_FORMAT_NONE_EXT = 0x20D8;const Size GL_COLOR_MATERIAL = 0x0B57;const Size GL_COLOR = 0x1800;const Size GL_HISTOGRAM_ALPHA_SIZE = 0x802B;const Size GL_RED_MAX_CLAMP_INGR = 0x8564;const Size GL_BITMAP = 0x1A00;const Size GL_DYNAMIC_READ = 0x88E9;const Size GL_COMPRESSED_LUMINANCE = 0x84EA;const Size GL_VERTEX_WEIGHT_ARRAY_STRIDE_EXT = 0x850F;const Size GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT = 0x8CD3;const Size GL_LUMINANCE6_ALPHA2_EXT = 0x8044;const Size GL_DEPTH_STENCIL = 0x84F9;const Size GL_CONSTANT_EXT = 0x8576;const Size GL_EXT_direct_state_access = 1;const Size GL_UNIFORM_BUFFER_BINDING_EXT = 0x8DEF;const Size GL_TEXTURE_INTENSITY_SIZE = 0x8061;const Size GL_OUTPUT_TEXTURE_COORD7_EXT = 0x87A4;const Size GL_SYNC_CONDITION = 0x9113;const Size GL_TEXTURE_2D = 0x0DE1;const Size GL_HISTOGRAM_SINK = 0x802D;const Size GL_MAP_INVALIDATE_RANGE_BIT = 0x0004;const Size GL_TEXTURE23 = 0x84D7;const Size GL_TEXTURE22 = 0x84D6;const Size GL_TEXTURE21 = 0x84D5;const Size GL_TEXTURE20 = 0x84D4;const Size GL_TEXTURE27 = 0x84DB;const Size GL_TEXTURE26 = 0x84DA;const Size GL_TEXTURE25 = 0x84D9;const Size GL_TEXTURE24 = 0x84D8;const Size GL_R8_SNORM = 0x8F94;const Size GL_TEXTURE29 = 0x84DD;const Size GL_TEXTURE28 = 0x84DC;const Size GL_ELEMENT_ARRAY_BUFFER_BINDING = 0x8895;const Size GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER = 0x8CDC;const Size GL_TRIANGLES_ADJACENCY = 0x000C;const Size GL_PIXEL_MODE_BIT = 0x00000020;const Size GL_ALPHA_SCALE = 0x0D1C;const Size GL_READ_BUFFER = 0x0C02;const Size GL_PACK_SKIP_PIXELS = 0x0D04;const Size GL_BLEND_EQUATION_EXT = 0x8009;const Size GL_INVARIANT_VALUE_EXT = 0x87EA;const Size GLX_STATIC_GRAY_EXT = 0x8007;const Size GL_GEQUAL = 0x0206;const Size GL_FRAMEBUFFER_SRGB_EXT = 0x8DB9;const Size GL_MAX_CONVOLUTION_HEIGHT_EXT = 0x801B;const Size GL_RGBA8UI = 0x8D7C;const Size GL_INTENSITY32UI_EXT = 0x8D73;const Size GL_STRICT_SCISSOR_HINT_PGI = 107032;const Size GL_VARIANT_EXT = 0x87C1;const Size GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION_EXT = 0x8E4C;const Size GL_SUBTRACT = 0x84E7;const Size GL_EDGE_FLAG_ARRAY_EXT = 0x8079;const Size GL_COMPRESSED_RED_RGTC1 = 0x8DBB;const Size GL_READ_WRITE = 0x88BA;const Size GL_BINORMAL_ARRAY_STRIDE_EXT = 0x8441;const Size GLX_BACK_RIGHT_EXT = 0x20E1;const Size GLX_ACCUM_BUFFER_BIT = 0x00000080;const Size GL_ARRAY_BUFFER_BINDING = 0x8894;const Size GL_INDEX_WRITEMASK = 0x0C21;const Size GL_INTERPOLATE = 0x8575;const Size GL_DYNAMIC_DRAW = 0x88E8;const Size GL_4D_COLOR_TEXTURE = 0x0604;const Size GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS = 0x8DE1;const Size GL_TEXTURE_INTENSITY_SIZE_EXT = 0x8061;const Size GL_UNPACK_ROW_LENGTH = 0x0CF2;const Size GL_CURRENT_PROGRAM = 0x8B8D;const Size GL_BUFFER_MAPPED = 0x88BC;const Size GL_EYE_LINEAR = 0x2400;const Size GLX_TRANSPARENT_ALPHA_VALUE = 0x28;const Size GL_INTENSITY8I_EXT = 0x8D91;const Size GL_STREAM_DRAW = 0x88E0;const Size GL_ALPHA4_EXT = 0x803B;const Size GL_MAX_UNIFORM_BUFFER_BINDINGS = 0x8A2F;const Size GL_EDGE_FLAG_ARRAY_POINTER_EXT = 0x8093;const Size GL_COMPRESSED_LUMINANCE_LATC1_EXT = 0x8C70;const Size GL_SIGNALED = 0x9119;const Size GL_FRAMEBUFFER = 0x8D40;const Size GL_SPECULAR = 0x1202;const Size GLX_VENDOR = 0x1;const Size GL_RGB32I_EXT = 0x8D83;const Size GL_TEXTURE_SWIZZLE_A_EXT = 0x8E45;const Size GLX_DRAWABLE_TYPE = 0x8010;const Size GL_GENERATE_MIPMAP = 0x8191;const Size GL_OP_INDEX_EXT = 0x8782;const Size GL_COLOR_ARRAY_SIZE = 0x8081;const Size GLX_PBUFFER_WIDTH = 0x8041;const Size GL_STENCIL_BACK_FAIL = 0x8801;const Size GL_POLYGON_OFFSET_FACTOR = 0x8038;const Size GL_COMPRESSED_RGBA_S3TC_DXT3_EXT = 0x83F2;const Size GL_EXT_texture_compression_latc = 1;const Size GL_SYNC_FLUSH_COMMANDS_BIT = 0x00000001;const Size GLX_EXT_visual_info = 1;const Size GLX_RGBA_TYPE = 0x8014;const Size GL_EDGE_FLAG = 0x0B43;const Size GL_TRANSFORM_FEEDBACK_BARRIER_BIT_EXT = 0x00000800;const Size GL_POST_CONVOLUTION_ALPHA_BIAS = 0x8023;const Size GL_PACK_LSB_FIRST = 0x0D01;const Size GL_MULTISAMPLE_3DFX = 0x86B2;const Size GL_BINORMAL_ARRAY_TYPE_EXT = 0x8440;const Size GL_RGBA16I_EXT = 0x8D88;const Size GL_TEXTURE_BIT = 0x00040000;const Size GL_UNIFORM_MATRIX_STRIDE = 0x8A3D;const Size GL_CONVOLUTION_FORMAT_EXT = 0x8017;const Size GL_MAX_DEPTH_TEXTURE_SAMPLES = 0x910F;const Size GL_QUERY_BY_REGION_WAIT = 0x8E15;const Size GL_TEXTURE_RESIDENT = 0x8067;const Size GL_EXT_abgr = 1;const Size GL_OP_MOV_EXT = 0x8799;const Size GL_FOG = 0x0B60;const Size GL_POST_CONVOLUTION_RED_SCALE_EXT = 0x801C;const Size GL_PACK_CMYK_HINT_EXT = 0x800E;const Size GLX_NON_CONFORMANT_VISUAL_EXT = 0x800D;const Size GL_POSITION = 0x1203;const Size GL_UNPACK_SKIP_IMAGES_EXT = 0x806D;const Size GL_CONVOLUTION_BORDER_MODE = 0x8013;const Size GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_EXT = 0x851A;const Size GLX_BAD_CONTEXT = 5;const Size GL_LINE_STIPPLE_PATTERN = 0x0B25;const Size GL_INVALID_FRAMEBUFFER_OPERATION_EXT = 0x0506;const Size GL_VARIANT_ARRAY_EXT = 0x87E8;const Size GL_MAP1_TEXTURE_COORD_2 = 0x0D94;const Size GL_LAST_VERTEX_CONVENTION_EXT = 0x8E4E;const Size GL_STENCIL_INDEX4_EXT = 0x8D47;const Size GL_ONE_MINUS_CONSTANT_ALPHA_EXT = 0x8004;const Size GL_INDEX_ARRAY_STRIDE_EXT = 0x8086;const Size GL_COLOR_INDEX8_EXT = 0x80E5;const Size GL_ENABLE_BIT = 0x00002000;const Size GL_RGB8_EXT = 0x8051;const Size GL_SAMPLER_1D_ARRAY_SHADOW_EXT = 0x8DC3;const Size GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS = 0x8A32;const Size GL_MAP_COLOR = 0x0D10;const Size GL_OUTPUT_TEXTURE_COORD8_EXT = 0x87A5;const Size GL_MAX_VERTEX_ATTRIBS = 0x8869;const Size GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS = 0x8E83;const Size GL_CONSTANT = 0x8576;const Size GL_LINE_WIDTH_RANGE = 0x0B22;const Size GL_XOR = 0x1506;const Size GLX_AUX9_EXT = 0x20EB;const Size GL_PROJECTION = 0x1701;const Size GL_EXT_draw_instanced = 1;const Size GL_LESS = 0x0201;const Size GL_MAX_OPTIMIZED_VERTEX_SHADER_INSTRUCTIONS_EXT = 0x87CA;const Size GL_VERSION_3_2 = 1;const Size GL_FRAMEBUFFER_UNDEFINED = 0x8219;const Size GL_COMBINE_EXT = 0x8570;const Size GL_TEXTURE_STENCIL_SIZE = 0x88F1;const Size GL_EXT_depth_bounds_test = 1;const Size GL_EMISSION = 0x1600;const Size GL_OUTPUT_TEXTURE_COORD0_EXT = 0x879D;const Size GL_COMPRESSED_LUMINANCE_ALPHA = 0x84EB;const Size GL_INT_SAMPLER_1D = 0x8DC9;const Size GL_OP_CROSS_PRODUCT_EXT = 0x8797;const Size GL_STENCIL_INDEX8 = 0x8D48;const Size GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT_EXT = 0x00000001;const Size GL_ADD_SIGNED_EXT = 0x8574;const Size GL_STENCIL_INDEX16_EXT = 0x8D49;const Size GL_ENV_COPY_EXT = 0;const Size GL_REPEAT = 0x2901;const Size GL_T2F_C4F_N3F_V3F = 0x2A2C;const Size GL_TEXTURE_INTENSITY_TYPE = 0x8C15;const Size GL_INTENSITY16 = 0x804D;const Size GL_VERTEX_SHADER_EXT = 0x8780;const Size GL_CLIENT_ALL_ATTRIB_BITS = 0xffffffff;const Size GL_VALIDATE_STATUS = 0x8B83;const Size GLX_STATIC_GRAY = 0x8007;const Size GL_RG16 = 0x822C;const Size GL_EXT_Cg_shader = 1;const Size GLX_FRONT_LEFT_BUFFER_BIT = 0x00000001;const Size GL_UNPACK_SKIP_IMAGES = 0x806D;const Size GL_UNSIGNED_INT_IMAGE_2D_RECT_EXT = 0x9065;const Size GL_TEXTURE_2D_MULTISAMPLE = 0x9100;const Size GLX_GRAY_SCALE_EXT = 0x8006;const Size GL_SAMPLER_1D_ARRAY_SHADOW = 0x8DC3;const Size GL_UNSIGNED_INT_SAMPLER_1D_EXT = 0x8DD1;const Size GL_ATOMIC_COUNTER_BARRIER_BIT_EXT = 0x00001000;const Size GLX_TEXTURE_RECTANGLE_BIT_EXT = 0x00000004;const Size GL_RGB16UI_EXT = 0x8D77;const Size GL_COLOR_TABLE_BLUE_SIZE_EXT = 0x80DC;const Size GL_BLEND_EQUATION_ALPHA = 0x883D;const Size GL_COLOR_ATTACHMENT5_EXT = 0x8CE5;const Size GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS = 0x8DA8;const Size GL_ONE_MINUS_CONSTANT_COLOR_EXT = 0x8002;const Size GL_NORMAL_ARRAY_POINTER_EXT = 0x808F;const Size GL_CONVOLUTION_WIDTH_EXT = 0x8018;const Size GL_READ_FRAMEBUFFER_BINDING_EXT = 0x8CAA;const Size GL_LOCAL_EXT = 0x87C4;const Size GL_ATTACHED_SHADERS = 0x8B85;const Size GL_UNSIGNED_INT_SAMPLER_3D_EXT = 0x8DD3;const Size GL_QUERY_BY_REGION_NO_WAIT = 0x8E16;const Size GLX_COLOR_INDEX_TYPE = 0x8015;const Size GL_VIEWPORT_INDEX_PROVOKING_VERTEX = 0x825F;const Size GL_SAMPLE_COVERAGE_INVERT = 0x80AB;const Size GL_LINES = 0x0001;const Size GL_TEXTURE18 = 0x84D2;const Size GL_TEXTURE19 = 0x84D3;const Size GL_TEXTURE16 = 0x84D0;const Size GL_TEXTURE17 = 0x84D1;const Size GL_TEXTURE14 = 0x84CE;const Size GL_TEXTURE15 = 0x84CF;const Size GL_TEXTURE12 = 0x84CC;const Size GL_TEXTURE13 = 0x84CD;const Size GL_TEXTURE10 = 0x84CA;const Size GL_TEXTURE11 = 0x84CB;const Size GL_NEGATIVE_W_EXT = 0x87DC;const Size GL_3DFX_multisample = 1;const Size GL_RGB = 0x1907;const Size GL_POST_CONVOLUTION_ALPHA_BIAS_EXT = 0x8023;const Size GL_OUTPUT_COLOR0_EXT = 0x879B;const Size GL_TRANSFORM_FEEDBACK_BUFFER_START = 0x8C84;const Size GL_MAX_PROGRAM_TEXEL_OFFSET = 0x8905;const Size GL_STACK_OVERFLOW = 0x0503;const Size GL_MAP1_VERTEX_4 = 0x0D98;const Size GL_SAMPLE_MASK_VALUE_EXT = 0x80AA;const Size GL_RGBA32F = 0x8814;const Size GL_RGBA32I = 0x8D82;const Size GL_TRANSFORM_FEEDBACK_BUFFER_EXT = 0x8C8E;const Size GL_VERTEX_ATTRIB_ARRAY_TYPE = 0x8625;const Size GL_COLOR_TABLE_BLUE_SIZE = 0x80DC;const Size GLX_X_VISUAL_TYPE_EXT = 0x22;const Size GL_STENCIL_WRITEMASK = 0x0B98;const Size GL_RG8 = 0x822B;const Size GL_STENCIL_INDEX8_EXT = 0x8D48;const Size GL_RED_INTEGER_EXT = 0x8D94;const Size GL_VARIANT_VALUE_EXT = 0x87E4;const Size GLX_TEXTURE_FORMAT_RGBA_EXT = 0x20DA;const Size GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE = 0x8CD3;const Size GLX_TEXTURE_2D_BIT_EXT = 0x00000002;const Size GL_MAP_UNSYNCHRONIZED_BIT = 0x0020;const Size GL_EXT_vertex_weighting = 1;const Size GL_PRIMITIVE_RESTART = 0x8F9D;const Size GLX_DONT_CARE = 0xFFFFFFFF;const Size GL_Y_EXT = 0x87D6;const Size GL_EXT_cull_vertex = 1;const Size GL_OP_MULTIPLY_MATRIX_EXT = 0x8798;const Size GL_SRC_ALPHA = 0x0302;const Size GL_TEXTURE_3D = 0x806F;const Size GL_INDEX_ARRAY_POINTER = 0x8091;const Size GL_BLEND_SRC_RGB_EXT = 0x80C9;const Size GL_TANGENT_ARRAY_POINTER_EXT = 0x8442;const Size GL_MIN_EXT = 0x8007;const Size GL_SECONDARY_COLOR_ARRAY_STRIDE = 0x845C;const Size GL_RG32UI = 0x823C;const Size GL_NORMALIZE = 0x0BA1;const Size GL_MAX_CONVOLUTION_WIDTH_EXT = 0x801A;const Size GL_BLUE_SCALE = 0x0D1A;const Size GL_TEXTURE_INTERNAL_FORMAT = 0x1003;const Size GL_POST_COLOR_MATRIX_ALPHA_SCALE = 0x80B7;const Size GL_FRAMEBUFFER_COMPLETE = 0x8CD5;const Size GL_COPY_READ_BUFFER = 0x8F36;const Size GL_ENV_BLEND_EXT = 0;const Size GL_FOG_COORDINATE_ARRAY_TYPE_EXT = 0x8454;const Size GL_SUBPIXEL_BITS = 0x0D50;const Size GL_NORMAL_ARRAY = 0x8075;const Size GL_PIXEL_UNPACK_BUFFER_EXT = 0x88EC;const Size GL_NICEST = 0x1102;const Size GLX_TRANSPARENT_INDEX_VALUE = 0x24;const Size GL_MODELVIEW = 0x1700;const Size GL_OBJECT_TYPE = 0x9112;const Size GL_C4UB_V3F = 0x2A23;const Size GL_COLOR4_BIT_PGI = 0x00020000;const Size GL_PACK_SKIP_IMAGES = 0x806B;const Size GL_PIXEL_MAP_I_TO_B_SIZE = 0x0CB4;const Size GL_DEPTH_ATTACHMENT_EXT = 0x8D00;const Size GL_FLOAT_MAT2x3 = 0x8B65;const Size GL_COMBINE = 0x8570;const Size GL_FLOAT_MAT2x4 = 0x8B66;const Size GLX_PIXMAP_BIT = 0x00000002;const Size GLX_AUX0_EXT = 0x20E2;const Size GL_INDEX_LOGIC_OP = 0x0BF1;const Size GL_PRIMITIVES_GENERATED = 0x8C87;const Size GL_TEXTURE_CUBE_MAP_NEGATIVE_X_EXT = 0x8516;const Size GL_RED_SNORM = 0x8F90;const Size GL_INVALID_INDEX = 0xFFFFFFFF;const Size GLX_FRONT_LEFT_EXT = 0x20DE;const Size GL_CURRENT_RASTER_SECONDARY_COLOR = 0x845F;const Size GL_COLOR_ARRAY_EXT = 0x8076;const Size GL_EXT_multisample = 1;const Size GL_TEXTURE_CUBE_MAP_EXT = 0x8513;const Size GL_TRANSPOSE_PROJECTION_MATRIX = 0x84E4;const Size GL_TEXTURE_MAX_ANISOTROPY_EXT = 0x84FE;const Size GL_INTENSITY16UI_EXT = 0x8D79;const Size GL_FRAGMENT_LIGHT7_EXT = 0x8413;const Size GLX_TRANSPARENT_BLUE_VALUE_EXT = 0x27;const Size GL_CLIP_VOLUME_CLIPPING_HINT_EXT = 0x80F0;const Size GL_NORMALIZED_RANGE_EXT = 0x87E0;const Size GL_CLIENT_VERTEX_ARRAY_BIT = 0x00000002;const Size GL_TEXTURE_ENV_SHIFT_EXT = 0;const Size GLX_DIRECT_COLOR_EXT = 0x8003;const Size GL_BGR_EXT = 0x80E0;const Size GL_INDEX_ARRAY_BUFFER_BINDING = 0x8899;const Size GL_SLUMINANCE_EXT = 0x8C46;const Size GL_EXT_draw_range_elements = 1;const Size GL_TEXTURE_LOD_BIAS = 0x8501;const Size GL_INDEX_ARRAY_POINTER_EXT = 0x8091;const Size GL_VERSION_1_3_DEPRECATED = 1;const Size GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_EXT = 0x8C29;const Size GL_TEXCOORD2_BIT_PGI = 0x20000000;const Size GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER = 0x8CDB;const Size GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE = 0x8214;const Size GLX_EXT_import_context = 1;const Size GL_EXT_blend_subtract = 1;const Size GL_SINGLE_COLOR_EXT = 0x81F9;const Size GL_CONTEXT_PROFILE_MASK = 0x9126;const Size GL_TEXTURE_CUBE_MAP_POSITIVE_Y_EXT = 0x8517;const Size GL_TEXTURE_1D_ARRAY_EXT = 0x8C18;const Size GL_MAX_OPTIMIZED_VERTEX_SHADER_INVARIANTS_EXT = 0x87CC;const Size GL_QUERY_RESULT = 0x8866;const Size GL_R16_SNORM = 0x8F98;const Size GL_TEXTURE_BLUE_SIZE_EXT = 0x805E;const Size GL_VERTEX_SHADER_OPTIMIZED_EXT = 0x87D4;const Size GL_FLOAT = 0x1406;const Size GL_EXT_shadow_funcs = 1;const Size GL_VERTEX_SHADER_VARIANTS_EXT = 0x87D0;const Size GL_OP_SUB_EXT = 0x8796;const Size GLX_NON_CONFORMANT_CONFIG = 0x800D;const Size GL_COLOR_ATTACHMENT1_EXT = 0x8CE1;const Size GL_COLOR_SUM = 0x8458;const Size GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT = 0x8CD9;const Size GL_RGB16_SNORM = 0x8F9A;const Size GL_MAX_VERTEX_UNIFORM_BLOCKS = 0x8A2B;const Size GL_OUTPUT_TEXTURE_COORD30_EXT = 0x87BB;const Size GL_COLOR_TABLE_FORMAT = 0x80D8;const Size GL_OUTPUT_TEXTURE_COORD1_EXT = 0x879E;const Size GL_EXT_index_func = 1;const Size GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY_EXT = 0x906A;const Size GL_EDGE_FLAG_ARRAY_POINTER = 0x8093;const Size GL_WIDE_LINE_HINT_PGI = 107042;const Size GL_ALPHA_MAX_CLAMP_INGR = 0x8567;const Size GL_MINMAX_EXT = 0x802E;const Size GL_MAX_LIST_NESTING = 0x0B31;const Size GL_POINT_SIZE_MIN_EXT = 0x8126;const Size GL_OUTPUT_TEXTURE_COORD15_EXT = 0x87AC;const Size GL_LUMINANCE16_ALPHA16_EXT = 0x8048;const Size GLX_EXT_scene_marker = 1;const Size GL_EXT_color_subtable = 1;const Size GL_TEXTURE_STENCIL_SIZE_EXT = 0x88F1;const Size GL_COLOR_ARRAY = 0x8076;const Size GL_CONVOLUTION_2D = 0x8011;const Size GL_ZOOM_Y = 0x0D17;const Size GL_ZOOM_X = 0x0D16;const Size GL_ATTENUATION_EXT = 0x834D;const Size GL_RENDERBUFFER_SAMPLES = 0x8CAB;const Size GLX_EXT_framebuffer_sRGB = 1;const Size GL_FIRST_VERTEX_CONVENTION_EXT = 0x8E4D;const Size GL_HINT_BIT = 0x00008000;const Size GLX_LEVEL = 3;const Size GL_OP_ROUND_EXT = 0x8790;const Size GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS = 0x8E1F;const Size GL_OUTPUT_TEXTURE_COORD23_EXT = 0x87B4;const Size GL_POST_CONVOLUTION_BLUE_SCALE = 0x801E;const Size GL_GREEN_INTEGER = 0x8D95;const Size GL_COLOR_ARRAY_POINTER = 0x8090;const Size GL_TEXTURE_DEPTH_SIZE = 0x884A;const Size GL_FLOAT_MAT3x2 = 0x8B67;const Size GL_RESAMPLE_DECIMATE_OML = 0x8989;const Size GL_FLOAT_MAT3x4 = 0x8B68;const Size GL_TEXTURE_UPDATE_BARRIER_BIT_EXT = 0x00000100;const Size GL_OP_FLOOR_EXT = 0x878F;const Size GLX_DOUBLEBUFFER = 5;const Size GL_COMPRESSED_RGBA = 0x84EE;const Size GL_CLIENT_ATTRIB_STACK_DEPTH = 0x0BB1;const Size GL_COLOR_ARRAY_COUNT_EXT = 0x8084;const Size GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_EXT = 0x8C85;const Size GL_UNSIGNED_SHORT_5_5_5_1 = 0x8034;const Size GL_EXT_paletted_texture = 1;const Size GL_QUERY_NO_WAIT = 0x8E14;const Size GL_GEOMETRY_SHADER_EXT = 0x8DD9;const Size GL_UNPACK_SWAP_BYTES = 0x0CF0;const Size GL_COLOR_ARRAY_SIZE_EXT = 0x8081;const Size GL_FOG_COORDINATE_ARRAY_EXT = 0x8457;const Size GL_EDGE_FLAG_ARRAY_COUNT_EXT = 0x808D;const Size GL_UNSIGNED_SHORT_5_5_5_1_EXT = 0x8034;const Size GL_TRANSFORM_FEEDBACK_BUFFER_MODE = 0x8C7F;const Size GL_BITMAP_TOKEN = 0x0704;const Size GL_FEEDBACK_BUFFER_POINTER = 0x0DF0;const Size GL_COMPRESSED_SIGNED_LUMINANCE_ALPHA_LATC2_EXT = 0x8C73;const Size GL_PROXY_TEXTURE_CUBE_MAP = 0x851B;const Size GL_LINE_TOKEN = 0x0702;const Size GL_PRIMARY_COLOR_EXT = 0x8577;const Size GL_CURRENT_FOG_COORDINATE = 0x8453;const Size GL_REND_screen_coordinates = 1;const Size GL_FLOAT_VEC3 = 0x8B51;const Size GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET = 0x8E5F;const Size GL_RGB_INTEGER = 0x8D98;const Size GLX_BAD_VISUAL = 4;const Size GL_MULT = 0x0103;const Size GL_STENCIL_CLEAR_VALUE = 0x0B91;const Size GLX_VERSION = 0x2;const Size GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_EXT = 0x8D56;const Size GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_EXT = 0x8C8A;const Size GL_PIXEL_MAP_R_TO_R_SIZE = 0x0CB6;const Size GL_PROGRAM_MATRIX_STACK_DEPTH_EXT = 0x8E2F;const Size GL_FRAGMENT_SHADER = 0x8B30;const Size GL_UNSIGNED_INT_2_10_10_10_REV = 0x8368;const Size GLX_3DFX_multisample = 1;const Size GL_ALPHA8_EXT = 0x803C;const Size GLX_SAVED = 0x8021;const Size GL_VIEWPORT = 0x0BA2;const Size GL_MAX_FRAGMENT_INTERPOLATION_OFFSET = 0x8E5C;const Size GL_RGB8I = 0x8D8F;const Size GL_MAX_VERTEX_SHADER_LOCAL_CONSTANTS_EXT = 0x87C8;const Size GL_COLOR_TABLE_LUMINANCE_SIZE = 0x80DE;const Size GL_VERTEX_ARRAY_COUNT_EXT = 0x807D;const Size GL_BLEND_SRC = 0x0BE1;const Size GL_COPY_PIXEL_TOKEN = 0x0706;const Size GL_INT_SAMPLER_2D_RECT = 0x8DCD;const Size GL_TEXTURE_MATERIAL_FACE_EXT = 0x8351;const Size GL_ONE_EXT = 0x87DE;const Size GL_DEPTH24_STENCIL8 = 0x88F0;const Size GL_UNSIGNED_INT_SAMPLER_1D_ARRAY_EXT = 0x8DD6;const Size GL_MAX_TEXTURE_LOD_BIAS_EXT = 0x84FD;const Size GL_FUNC_ADD_EXT = 0x8006;const Size GL_COLOR_INDEX = 0x1900;const Size GL_MAP2_NORMAL = 0x0DB2;const Size GL_NORMAL_ARRAY_POINTER = 0x808F;const Size GL_MAX_EVAL_ORDER = 0x0D30;const Size GL_TEXTURE_COMPARE_MODE = 0x884C;const Size GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE = 0x8215;const Size GLX_BUFFER_SIZE = 2;const Size GL_FUNC_REVERSE_SUBTRACT_EXT = 0x800B;const Size GL_MAP_WRITE_BIT = 0x0002;const Size GL_SHADE_MODEL = 0x0B54;const Size GL_COMPRESSED_SLUMINANCE = 0x8C4A;const Size GL_RGBA_DXT5_S3TC = 0x83A4;const Size GL_EXT_stencil_clear_tag = 1;const Size GL_HISTOGRAM_SINK_EXT = 0x802D;const Size GL_MAT_AMBIENT_AND_DIFFUSE_BIT_PGI = 0x00200000;const Size GL_INDEX_SHIFT = 0x0D12;const Size GL_COLOR_SUM_EXT = 0x8458;const Size GL_TRIANGLES_ADJACENCY_EXT = 0xC;const Size GL_BGRA_INTEGER_EXT = 0x8D9B;const Size GL_STREAM_READ = 0x88E1;const Size GL_LINEAR = 0x2601;const Size GL_MINMAX_SINK = 0x8030;const Size GL_VERTEX_ARRAY = 0x8074;const Size GL_RGBA4_S3TC = 0x83A3;const Size GL_STRICT_DEPTHFUNC_HINT_PGI = 107030;const Size GL_STENCIL_INDEX = 0x1901;const Size GL_TEXTURE_GREEN_SIZE_EXT = 0x805D;const Size GL_GREATER = 0x0204;const Size GL_MAX_GEOMETRY_UNIFORM_COMPONENTS = 0x8DDF;const Size GL_VERTEX_ATTRIB_ARRAY_ENABLED = 0x8622;const Size GL_GREEN_MAX_CLAMP_INGR = 0x8565;const Size GL_MAX_TEXTURE_IMAGE_UNITS = 0x8872;const Size GL_FRONT_FACE = 0x0B46;const Size GL_REPLACE = 0x1E01;const Size GL_VERTEX_ATTRIB_ARRAY_STRIDE = 0x8624;const Size GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE = 0x8212;const Size GL_COMPRESSED_LUMINANCE_ALPHA_LATC2_EXT = 0x8C72;const Size GL_CONVOLUTION_BORDER_MODE_EXT = 0x8013;const Size GL_REDUCE_EXT = 0x8016;const Size GL_INTENSITY8_EXT = 0x804B;const Size GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT = 0x8CD6;const Size GL_EXT_vertex_array = 1;const Size GL_TANGENT_ARRAY_TYPE_EXT = 0x843E;const Size GL_UNSIGNED_INT_SAMPLER_2D = 0x8DD2;const Size GL_ACCUM_CLEAR_VALUE = 0x0B80;const Size GL_PROXY_TEXTURE_1D_ARRAY_EXT = 0x8C19;const Size GL_COMPRESSED_SIGNED_LUMINANCE_LATC1_EXT = 0x8C71;const Size GL_RENDERBUFFER_BINDING = 0x8CA7;const Size GL_TEXTURE_STACK_DEPTH = 0x0BA5;const Size GL_RGB5_EXT = 0x8050;const Size GLX_SHARE_CONTEXT_EXT = 0x800A;const Size GL_VERTEX_CONSISTENT_HINT_PGI = 107051;const Size GL_R16UI = 0x8234;const Size GL_CONVOLUTION_1D = 0x8010;const Size GL_BLEND = 0x0BE2;const Size GL_FEEDBACK_BUFFER_TYPE = 0x0DF2;const Size GL_MAP1_TEXTURE_COORD_3 = 0x0D95;const Size GL_COLOR_TABLE_GREEN_SIZE = 0x80DB;const Size GL_MAP1_TEXTURE_COORD_1 = 0x0D93;const Size GL_UNSIGNED_SHORT = 0x1403;const Size GL_INTENSITY_SNORM = 0x9013;const Size GL_POLYGON_OFFSET_EXT = 0x8037;const Size GL_MIN = 0x8007;const Size GL_MAP1_TEXTURE_COORD_4 = 0x0D96;const Size GLX_ACCUM_GREEN_SIZE = 15;const Size GL_COMPRESSED_SRGB_ALPHA = 0x8C49;const Size GL_MAT_DIFFUSE_BIT_PGI = 0x00400000;const Size GL_ONE_MINUS_SRC_COLOR = 0x0301;const Size GL_MAX_VERTEX_SHADER_LOCALS_EXT = 0x87C9;const Size GL_INTENSITY12 = 0x804C;const Size GL_FUNC_SUBTRACT_EXT = 0x800A;const Size GLX_BAD_ATTRIBUTE = 2;const Size GL_C4UB_V2F = 0x2A22;const Size GL_MAP2_TANGENT_EXT = 0x8445;const Size GL_SAMPLE_MASK_EXT = 0x80A0;const Size GL_LIST_MODE = 0x0B30;const Size GL_POST_CONVOLUTION_RED_SCALE = 0x801C;const Size GL_VERTEX_PROGRAM_POINT_SIZE = 0x8642;const Size GL_OPERAND2_RGB = 0x8592;const Size GL_EXT_texture_env_dot3 = 1;const Size GL_SRGB_ALPHA = 0x8C42;const Size GL_TEXTURE_SWIZZLE_B_EXT = 0x8E44;const Size GL_DOUBLE_EXT = 0x140A;const Size GL_EXT_texture_shared_exponent = 1;const Size GL_PACK_SKIP_ROWS = 0x0D03;const Size GL_MAX_TEXTURE_UNITS = 0x84E2;const Size GL_SLUMINANCE8 = 0x8C47;const Size GL_MAP1_COLOR_4 = 0x0D90;const Size GL_GEOMETRY_SHADER = 0x8DD9;const Size GL_RGBA16F = 0x881A;const Size GL_LUMINANCE8_EXT = 0x8040;const Size GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS = 0x886D;const Size GL_TEXTURE_COORD_ARRAY_TYPE_EXT = 0x8089;const Size GL_BLEND_COLOR = 0x8005;const Size GL_ALPHA_BITS = 0x0D55;const Size GL_TEXTURE_COORD_ARRAY_STRIDE_EXT = 0x808A;const Size GL_LINE_STIPPLE = 0x0B24;const Size GL_SAMPLER_2D_ARRAY_SHADOW_EXT = 0x8DC4;const Size GL_ONE_MINUS_CONSTANT_ALPHA = 0x8004;const Size GL_NEAREST_MIPMAP_LINEAR = 0x2702;const Size GL_MULTISAMPLE_BIT_EXT = 0x20000000;const Size GL_OPERAND2_ALPHA = 0x859A;const Size GLX_SWAP_COPY_OML = 0x8062;const Size GL_FOG_END = 0x0B64;const Size GL_BLEND_SRC_ALPHA_EXT = 0x80CB;const Size GL_ZERO_EXT = 0x87DD;const Size GLX_GRAY_SCALE = 0x8006;const Size GL_ALLOW_DRAW_MEM_HINT_PGI = 107025;const Size GL_HISTOGRAM_WIDTH_EXT = 0x8026;const Size GL_TRANSFORM_FEEDBACK_BUFFER_START_EXT = 0x8C84;const Size GL_EXT_geometry_shader4 = 1;const Size GL_FOG_COORDINATE_ARRAY_TYPE = 0x8454;const Size GL_SAMPLES_PASSED = 0x8914;const Size GL_CG_VERTEX_SHADER_EXT = 0x890E;const Size GL_LUMINANCE16I_EXT = 0x8D8C;const Size GL_SEPARATE_ATTRIBS = 0x8C8D;const Size GL_DEPTH_BOUNDS_TEST_EXT = 0x8890;const Size GLX_TRANSPARENT_GREEN_VALUE = 0x26;const Size GL_CONVOLUTION_FORMAT = 0x8017;const Size GL_FRAGMENT_DEPTH_EXT = 0x8452;const Size GL_TEXTURE_HEIGHT = 0x1001;const Size GL_RGBA16I = 0x8D88;const Size GL_R8I = 0x8231;const Size GL_POST_CONVOLUTION_RED_BIAS = 0x8020;const Size GL_SAMPLER_1D = 0x8B5D;const Size GL_REPLACE_EXT = 0x8062;const Size GL_TEXTURE_FIXED_SAMPLE_LOCATIONS = 0x9107;const Size GLX_AUX4_EXT = 0x20E6;const Size GLX_ALPHA_SIZE = 11;const Size GL_INCR_WRAP_EXT = 0x8507;const Size GL_RED = 0x1903;const Size GL_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT = 0x8336;const Size GL_DEPTH_STENCIL_EXT = 0x84F9;const Size GL_POLYGON_OFFSET_LINE = 0x2A02;const Size GL_FUNC_REVERSE_SUBTRACT = 0x800B;const Size GLX_TRANSPARENT_INDEX_VALUE_EXT = 0x24;const Size GL_NEGATIVE_Y_EXT = 0x87DA;const Size GL_COLOR_TABLE_ALPHA_SIZE_EXT = 0x80DD;const Size GL_COMPRESSED_RGBA_S3TC_DXT1_EXT = 0x83F1;const Size GL_GREEN = 0x1904;const Size GL_RGB4_S3TC = 0x83A1;const Size GL_STENCIL_BACK_PASS_DEPTH_PASS = 0x8803;const Size GL_OPERAND1_ALPHA_EXT = 0x8599;const Size GL_MAP2_TEXTURE_COORD_1 = 0x0DB3;const Size GL_MAP2_TEXTURE_COORD_2 = 0x0DB4;const Size GL_MAP2_TEXTURE_COORD_3 = 0x0DB5;const Size GL_MAP2_TEXTURE_COORD_4 = 0x0DB6;const Size GL_VERTEX_DATA_HINT_PGI = 107050;const Size GL_4_BYTES = 0x1409;const Size GL_MAX_MODELVIEW_STACK_DEPTH = 0x0D36;const Size GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS = 0x8A42;const Size GL_CONVOLUTION_WIDTH = 0x8018;const Size GL_SAMPLER_2D_ARRAY_EXT = 0x8DC1;const Size GL_UNSIGNED_INT_8_8_8_8_REV = 0x8367;const Size GL_VERTEX_WEIGHT_ARRAY_POINTER_EXT = 0x8510;const Size GL_TEXTURE_BINDING_RECTANGLE_EXT = 0x84F6;const Size GL_LUMINANCE_SNORM = 0x9011;const Size GL_MAX_COMBINED_UNIFORM_BLOCKS = 0x8A2E;const Size GL_TEXTURE_ENV_MODE = 0x2200;const Size GL_UNSIGNED_SHORT_4_4_4_4_EXT = 0x8033;const Size GL_DST_COLOR = 0x0306;const Size GL_MAX_SAMPLES_EXT = 0x8D57;const Size GL_UNSIGNED_INT = 0x1405;const Size GL_V3F = 0x2A21;const Size GL_S3_s3tc = 1;const Size GL_DOT3_RGB = 0x86AE;const Size GL_REFLECTION_MAP_EXT = 0x8512;const Size GL_INT_SAMPLER_2D_RECT_EXT = 0x8DCD;const Size GL_LUMINANCE16 = 0x8042;const Size GL_VERTEX4_BIT_PGI = 0x00000008;const Size GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES = 0x8A43;const Size GL_POST_CONVOLUTION_ALPHA_SCALE = 0x801F;const Size GL_LUMINANCE12 = 0x8041;const Size GLX_STEREO = 6;const Size GL_RG16_SNORM = 0x8F99;const Size GL_EXT_index_material = 1;const Size GL_FRAMEBUFFER_ATTACHMENT_LAYERED_EXT = 0x8DA7;const Size GL_CURRENT_RASTER_COLOR = 0x0B04;const Size GL_QUERY_COUNTER_BITS = 0x8864;const Size GL_MODULATE = 0x2100;const Size GL_RG_INTEGER = 0x8228;const Size GL_SOURCE0_ALPHA_EXT = 0x8588;const Size GL_RENDERBUFFER_HEIGHT = 0x8D43;const Size GL_DISTANCE_ATTENUATION_EXT = 0x8129;const Size GL_INTERLEAVED_ATTRIBS = 0x8C8C;const Size GL_TEXTURE_ALPHA_TYPE = 0x8C13;const Size GLX_HEIGHT = 0x801E;const Size GL_BLUE = 0x1905;const Size GL_RGBA4_EXT = 0x8056;const Size GL_COLOR_ATTACHMENT2_EXT = 0x8CE2;const Size GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS = 0x8C80;const Size GL_SRGB_EXT = 0x8C40;const Size GL_COLOR_ATTACHMENT7_EXT = 0x8CE7;const Size GL_TEXTURE_BLUE_TYPE = 0x8C12;const Size GL_C4F_N3F_V3F = 0x2A26;const Size GL_CURRENT_BINORMAL_EXT = 0x843C;const Size GL_T4F_V4F = 0x2A28;const Size GL_STREAM_COPY = 0x88E2;const Size GL_SOURCE0_RGB = 0x8580;const Size GL_EYE_PLANE = 0x2502;const Size GL_EXT_index_array_formats = 1;const Size GL_SAMPLER_BUFFER_EXT = 0x8DC2;const Size GL_TEXTURE_2D_MULTISAMPLE_ARRAY = 0x9102;const Size GL_DRAW_FRAMEBUFFER_EXT = 0x8CA9;const Size GL_POINT_SMOOTH_HINT = 0x0C51;const Size GL_EXT_histogram = 1;const Size GLX_TRANSPARENT_RED_VALUE = 0x25;const Size GL_RGB8UI_EXT = 0x8D7D;const Size GL_CLIP_FAR_HINT_PGI = 107041;const Size GL_TRANSFORM_FEEDBACK_BUFFER_MODE_EXT = 0x8C7F;const Size GL_TEXTURE_LUMINANCE_SIZE_EXT = 0x8060;const Size GL_ORDER = 0x0A01;const Size GL_SAMPLER_CUBE_SHADOW_EXT = 0x8DC5;const Size GLX_SAMPLES_3DFX = 0x8051;const Size GLX_FRONT_RIGHT_BUFFER_BIT = 0x00000002;const Size GL_VERTEX23_BIT_PGI = 0x00000004;const Size GL_INT_SAMPLER_2D_ARRAY_EXT = 0x8DCF;const Size GLX_DAMAGED = 0x8020;const Size GL_FASTEST = 0x1101;const Size GL_EXT_vertex_shader = 1;const Size GL_LUMINANCE8 = 0x8040;const Size GL_LUMINANCE4 = 0x803F;const Size GL_TEXTURE_COORD_ARRAY_TYPE = 0x8089;const Size GL_EXT_texture_env = 1;const Size GL_ALPHA16_SNORM = 0x9018;const Size GL_INDEX_BIT_PGI = 0x00080000;const Size GL_CLIENT_PIXEL_STORE_BIT = 0x00000001;const Size GL_TEXTURE_CUBE_MAP_NEGATIVE_Y = 0x8518;const Size GL_TEXTURE_CUBE_MAP_NEGATIVE_X = 0x8516;const Size GL_TEXTURE_CUBE_MAP_NEGATIVE_Z = 0x851A;const Size GL_POLYGON_BIT = 0x00000008;const Size GL_EXT_fog_coord = 1;const Size GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS = 0x8DE8;const Size GL_INDEX_BITS = 0x0D51;const Size GL_POST_CONVOLUTION_ALPHA_SCALE_EXT = 0x801F;const Size GL_CURRENT_NORMAL = 0x0B02;const Size GL_COMPRESSED_SIGNED_RED_RGTC1 = 0x8DBC;const Size GL_FRAGMENT_DEPTH = 0x8452;const Size GL_NATIVE_GRAPHICS_END_HINT_PGI = 107012;const Size GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT = 0x8A34;const Size GLX_SWAP_UNDEFINED_OML = 0x8063;const Size GL_TEXTURE_WIDTH = 0x1000;const Size GL_UNIFORM_SIZE = 0x8A38;const Size GL_POINT_SPRITE = 0x8861;const Size GL_FLOAT_MAT4x2 = 0x8B69;const Size GL_SHADER_SOURCE_LENGTH = 0x8B88;const Size GL_DOT3_RGBA = 0x86AF;const Size GL_COMPRESSED_RG = 0x8226;const Size GL_TEXTURE_NORMAL_EXT = 0x85AF;const Size GL_POLYGON_OFFSET_UNITS = 0x2A00;const Size GL_MAX_COLOR_TEXTURE_SAMPLES = 0x910E;const Size GL_SAMPLE_MASK_INVERT_EXT = 0x80AB;const Size GL_OUT_OF_MEMORY = 0x0505;const Size GL_EXT_texture_env_add = 1;const Size GL_EXT_texture_mirror_clamp = 1;const Size GL_NORMAL_ARRAY_STRIDE = 0x807F;const Size GL_VERTEX_SHADER_INSTRUCTIONS_EXT = 0x87CF;const Size GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS = 0x8C8A;const Size GL_LUMINANCE12_ALPHA12_EXT = 0x8047;const Size GL_GEOMETRY_OUTPUT_TYPE = 0x8918;const Size GL_RASTERIZER_DISCARD = 0x8C89;const Size GL_TEXTURE_RESIDENT_EXT = 0x8067;const Size GL_COLOR_INDEX1_EXT = 0x80E2;const Size GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING = 0x889A;const Size GL_RENDERBUFFER_SAMPLES_EXT = 0x8CAB;const Size GL_TEXTURE_BUFFER_EXT = 0x8C2A;const Size GL_LINES_ADJACENCY_EXT = 0xA;const Size GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER = 0x8A44;const Size GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE = 0x910A;const Size GL_TRANSFORM_FEEDBACK_VARYINGS_EXT = 0x8C83;const Size GL_EDGE_FLAG_ARRAY = 0x8079;const Size GL_INT_SAMPLER_2D_MULTISAMPLE = 0x9109;const Size GL_RETURN = 0x0102;const Size GL_STENCIL_TEST = 0x0B90;const Size GL_ALPHA32UI_EXT = 0x8D72;const Size GL_R11F_G11F_B10F = 0x8C3A;const Size GL_W_EXT = 0x87D8;const Size GL_INVERT = 0x150A;const Size GL_PROXY_TEXTURE_1D = 0x8063;const Size GL_UNIFORM_BUFFER_EXT = 0x8DEE;const Size GLX_RGBA_FLOAT_BIT = 0x00000004;const Size GL_DEPTH_COMPONENT32F = 0x8CAC;const Size GL_TRIANGLE_FAN = 0x0006;const Size GL_VIEWPORT_BIT = 0x00000800;const Size GL_NORMAL_BIT_PGI = 0x08000000;const Size GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS = 0x8E86;const Size GL_FRAGMENT_LIGHT0_EXT = 0x840C;const Size GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS = 0x8E80;const Size GLX_NO_EXTENSION = 3;const Size GL_SAMPLE_ALPHA_TO_MASK_EXT = 0x809E;const Size GL_PREVIOUS_EXT = 0x8578;const Size GL_UNIFORM_BUFFER_SIZE = 0x8A2A;const Size GL_VERSION_1_4_DEPRECATED = 1;const Size GL_RED_BITS = 0x0D52;const Size GL_TEXTURE_BUFFER_FORMAT = 0x8C2E;const Size GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS = 0x8E82;const Size GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT = 0x8CD0;const Size GL_RGBA2_EXT = 0x8055;const Size GL_DOT3_RGBA_EXT = 0x8741;const Size GL_VERTEX_ARRAY_TYPE_EXT = 0x807B;const Size GL_VARIANT_DATATYPE_EXT = 0x87E5;const Size GL_ACTIVE_UNIFORM_BLOCKS = 0x8A36;const Size GLX_AUX8_EXT = 0x20EA;const Size GL_422_REV_EXT = 0x80CD;const Size GL_EXT_422_pixels = 1;const Size GL_RGB16I = 0x8D89;const Size GLX_TRANSPARENT_INDEX = 0x8009;const Size GL_RGB16F = 0x881B;const Size GL_SMOOTH_LINE_WIDTH_RANGE = 0x0B22;const Size GL_FOG_BIT = 0x00000080;const Size GL_LAST_VERTEX_CONVENTION = 0x8E4E;const Size GL_COLOR_ATTACHMENT4_EXT = 0x8CE4;const Size GL_SAMPLE_MASK = 0x8E51;const Size GL_FOG_COORDINATE_ARRAY_STRIDE_EXT = 0x8455;const Size GL_ALL_ATTRIB_BITS = 0x000fffff;const Size GL_CONDITION_SATISFIED = 0x911C;const Size GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT = 0x0001;const Size GL_SECONDARY_COLOR_ARRAY_POINTER = 0x845D;const Size GL_BGR_INTEGER_EXT = 0x8D9A;const Size GL_CLIP_NEAR_HINT_PGI = 107040;const Size GL_INTERLACE_READ_OML = 0x8981;const Size GL_OUTPUT_TEXTURE_COORD18_EXT = 0x87AF;const Size GL_TEXTURE_1D_ARRAY = 0x8C18;const Size GL_EXT_point_parameters = 1;const Size GL_READ_FRAMEBUFFER_BINDING = 0x8CAA;const Size GL_FRAMEBUFFER_ATTACHMENT_LAYERED = 0x8DA7;const Size GL_PIXEL_PACK_BUFFER_EXT = 0x88EB;const Size GL_COORD_REPLACE = 0x8862;const Size GL_SAMPLE_BUFFERS_3DFX = 0x86B3;const Size GL_IMAGE_2D_MULTISAMPLE_ARRAY_EXT = 0x9056;const Size GL_RGBA2 = 0x8055;const Size GL_RGBA4 = 0x8056;const Size GL_MULTISAMPLE_BIT = 0x20000000;const Size GLX_BACK_RIGHT_BUFFER_BIT = 0x00000008;const Size GL_RGBA8 = 0x8058;const Size GL_INFO_LOG_LENGTH = 0x8B84;const Size GL_COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT = 0x8DBE;const Size GL_EXT_framebuffer_sRGB = 1;const Size GL_SRGB8 = 0x8C41;const Size GL_RENDERBUFFER_STENCIL_SIZE = 0x8D55;const Size GL_SRGB_ALPHA_EXT = 0x8C42;const Size GL_RGB16I_EXT = 0x8D89;const Size GL_RESCALE_NORMAL = 0x803A;const Size GL_ALWAYS_SOFT_HINT_PGI = 107021;const Size GL_POINT_SIZE_GRANULARITY = 0x0B13;const Size GL_LOCAL_CONSTANT_EXT = 0x87C3;const Size GL_PERSPECTIVE_CORRECTION_HINT = 0x0C50;const Size GL_VERSION_2_0 = 1;const Size GL_VERSION_2_1 = 1;const Size GLX_PBUFFER_CLOBBER_MASK = 0x08000000;const Size GL_MAP_READ_BIT = 0x0001;const Size GL_SPOT_DIRECTION = 0x1204;const Size GL_ACTIVE_ATTRIBUTES = 0x8B89;const Size GL_STRICT_LIGHTING_HINT_PGI = 107031;const Size GL_LINE_BIT = 0x00000004;const Size GL_OP_NEGATE_EXT = 0x8783;const Size GL_T2F_N3F_V3F = 0x2A2B;const Size GL_TRANSFORM_BIT = 0x00001000;const Size GL_INTENSITY16I_EXT = 0x8D8B;const Size GL_TEXTURE_RED_SIZE_EXT = 0x805C;const Size GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT = 0x8C4D;const Size GLX_TEXTURE_1D_EXT = 0x20DB;const Size GL_EXT_gpu_shader4 = 1;const Size GL_3D_COLOR = 0x0602;const Size GL_TEXTURE_GEN_T = 0x0C61;const Size GL_STENCIL_PASS_DEPTH_PASS = 0x0B96;const Size GL_TEXTURE_GEN_R = 0x0C62;const Size GL_TEXTURE_GEN_Q = 0x0C63;const Size GL_ALPHA12 = 0x803D;const Size GL_ALPHA16 = 0x803E;const Size GLX_NONE_EXT = 0x8000;const Size GL_POLYGON_SMOOTH = 0x0B41;const Size GL_TRANSPOSE_MODELVIEW_MATRIX = 0x84E3;const Size GL_FRAMEBUFFER_UNSUPPORTED_EXT = 0x8CDD;const Size GL_POINT_SIZE_MIN = 0x8126;const Size GL_RGBA12 = 0x805A;const Size GL_GENERATE_MIPMAP_HINT = 0x8192;const Size GL_RGBA16 = 0x805B;const Size GL_MAP1_NORMAL = 0x0D92;const Size GL_COLOR_ARRAY_TYPE = 0x8082;const Size GL_COMPRESSED_RGB_FXT1_3DFX = 0x86B0;const Size GL_LUMINANCE32I_EXT = 0x8D86;const Size GL_RGB5_A1 = 0x8057;const Size GL_DEPTH_ATTACHMENT = 0x8D00;const Size GL_TEXTURE_ALPHA_SIZE = 0x805F;const Size GL_SOURCE1_ALPHA_EXT = 0x8589;const Size GL_FOG_HINT = 0x0C54;const Size GLX_TRANSPARENT_BLUE_VALUE = 0x27;const Size GL_FRAMEBUFFER_COMPLETE_EXT = 0x8CD5;const Size GL_LINEAR_MIPMAP_NEAREST = 0x2701;const Size GL_RGB10_A2 = 0x8059;const Size GLX_AUX2_EXT = 0x20E4;const Size GL_READ_FRAMEBUFFER_EXT = 0x8CA8;const Size GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS = 0x8E8A;const Size GL_RESAMPLE_REPLICATE_OML = 0x8986;const Size GL_OUTPUT_TEXTURE_COORD14_EXT = 0x87AB;const Size GLX_AUX7_EXT = 0x20E9;const Size GL_PIXEL_MAP_I_TO_A_SIZE = 0x0CB5;const Size GL_UNSIGNED_NORMALIZED = 0x8C17;const Size GL_SMOOTH_POINT_SIZE_GRANULARITY = 0x0B13;const Size GL_CLAMP_VERTEX_COLOR = 0x891A;const Size GL_INVARIANT_DATATYPE_EXT = 0x87EB;const Size GL_MAP2_INDEX = 0x0DB1;const Size GL_PIXEL_UNPACK_BUFFER_BINDING_EXT = 0x88EF;const Size GLX_TRANSPARENT_GREEN_VALUE_EXT = 0x26;const Size GLX_COLOR_INDEX_BIT = 0x00000002;const Size GL_NOTEQUAL = 0x0205;const Size GL_TEXTURE_COORD_ARRAY = 0x8078;const Size GL_TEXTURE_SWIZZLE_RGBA_EXT = 0x8E46;const Size GL_FLOAT_32_UNSIGNED_INT_24_8_REV = 0x8DAD;const Size GL_MAP2_GRID_DOMAIN = 0x0DD2;const Size GL_INT_SAMPLER_1D_ARRAY = 0x8DCE;const Size GL_SEPARATE_SPECULAR_COLOR_EXT = 0x81FA;const Size GL_TEXTURE_RED_SIZE = 0x805C;const Size GL_OBJECT_LINEAR = 0x2401;const Size GL_OUTPUT_TEXTURE_COORD3_EXT = 0x87A0;const Size GL_COLOR_ATTACHMENT14_EXT = 0x8CEE;const Size GL_NORMAL_ARRAY_TYPE_EXT = 0x807E;const Size GL_RGBA12_EXT = 0x805A;const Size GL_FRAGMENT_INTERPOLATION_OFFSET_BITS = 0x8E5D;const Size GL_TEXTURE_BINDING_CUBE_MAP_ARRAY = 0x900A;const Size GL_OPERAND2_ALPHA_EXT = 0x859A;const Size GL_CONVOLUTION_BORDER_COLOR = 0x8154;const Size GL_OUTPUT_TEXTURE_COORD11_EXT = 0x87A8;const Size GL_TEXTURE_SHARED_SIZE = 0x8C3F;const Size GL_OUTPUT_TEXTURE_COORD28_EXT = 0x87B9;const Size GL_LUMINANCE8_ALPHA8 = 0x8045;const Size GL_RENDERBUFFER_DEPTH_SIZE = 0x8D54;const Size GL_SLUMINANCE_ALPHA = 0x8C44;const Size GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS = 0x8B4C;const Size GL_SPOT_EXPONENT = 0x1205;const Size GL_SHORT = 0x1402;const Size GLX_EXT_visual_rating = 1;const Size GL_CURRENT_SECONDARY_COLOR_EXT = 0x8459;const Size GL_CW = 0x0900;const Size GL_MAX_VERTEX_UNIFORM_COMPONENTS = 0x8B4A;const Size GL_VERTEX_ARRAY_EXT = 0x8074;const Size GL_DEPTH_TEXTURE_MODE = 0x884B;const Size GL_TEXTURE_ENV0_EXT = 0;const Size GL_UNSIGNED_INT_10F_11F_11F_REV = 0x8C3B;const Size GLX_CONFIG_CAVEAT = 0x20;const Size GL_LUMINANCE16_SNORM = 0x9019;const Size GL_KTX_STENCIL_REGION = 0x3;const Size GL_STATIC_DRAW = 0x88E4;const Size GL_RENDERBUFFER = 0x8D41;const Size GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE = 0x8213;const Size GLX_MAX_SWAP_INTERVAL_EXT = 0x20F2;const Size GL_INTENSITY16_EXT = 0x804D;const Size GL_INDEX_ARRAY_TYPE_EXT = 0x8085;const Size GL_VERTEX_SHADER_LOCAL_CONSTANTS_EXT = 0x87D2;const Size GL_SAMPLER_3D = 0x8B5F;const Size GLX_EXT_fbconfig_packed_float = 1;const Size GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET = 0x8E5E;const Size GL_OR_INVERTED = 0x150D;const Size GL_TEXTURE_GREEN_SIZE = 0x805D;const Size GL_COLOR_TABLE_INTENSITY_SIZE_EXT = 0x80DF;const Size GL_PIXEL_MAG_FILTER_EXT = 0x8331;const Size GL_CURRENT_RASTER_NORMAL_EXT = 0x8406;const Size GL_FULL_STIPPLE_HINT_PGI = 107033;const Size GL_INTENSITY4 = 0x804A;const Size GL_TEXTURE_MATERIAL_PARAMETER_EXT = 0x8352;const Size GL_INTENSITY8 = 0x804B;const Size GLX_TRANSPARENT_TYPE = 0x23;const Size GL_INTENSITY_EXT = 0x8049;const Size GL_PIXEL_MAP_I_TO_I_SIZE = 0x0CB0;const Size GL_DECAL = 0x2101;const Size GL_2D = 0x0600;const Size GL_SELECTION_BUFFER_POINTER = 0x0DF3;const Size GL_COLOR_TABLE_RED_SIZE_EXT = 0x80DA;const Size GL_SAMPLES = 0x80A9;const Size GL_FRAMEBUFFER_BINDING_EXT = 0x8CA6;const Size GL_MAX_FRAGMENT_LIGHTS_EXT = 0x8404;const Size GL_UNSIGNED_INT_VEC2 = 0x8DC6;const Size GL_UNSIGNED_INT_VEC3 = 0x8DC7;const Size GL_UNSIGNED_INT_VEC4 = 0x8DC8;const Size GL_UNSIGNED_SHORT_5_6_5 = 0x8363;const Size GL_RGBA16UI_EXT = 0x8D76;const Size GL_MAX_VARYING_COMPONENTS_EXT = 0x8B4B;const Size GL_LUMINANCE_INTEGER_EXT = 0x8D9C;const Size GL_HISTOGRAM_RED_SIZE_EXT = 0x8028;const Size GL_RGBA_MODE = 0x0C31;const Size GL_NEGATIVE_Z_EXT = 0x87DB;const Size GL_4PASS_0_EXT = 0x80A4;const Size GL_RGB32UI = 0x8D71;const Size GL_EXT_index_texture = 1;const Size GL_GREEN_INTEGER_EXT = 0x8D95;const Size GL_PROXY_TEXTURE_RECTANGLE = 0x84F7;const Size GL_POST_COLOR_MATRIX_ALPHA_BIAS = 0x80BB;const Size GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT = 0x8CD4;const Size GL_EXT_texture_cube_map = 1;const Size GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS = 0x8C8B;const Size GL_TEXTURE_COMPRESSION_HINT = 0x84EF;const Size GL_RG8UI = 0x8238;const Size GL_TEXTURE8 = 0x84C8;const Size GL_TEXTURE9 = 0x84C9;const Size GL_TEXTURE4 = 0x84C4;const Size GL_TEXTURE5 = 0x84C5;const Size GL_TEXTURE6 = 0x84C6;const Size GL_TEXTURE7 = 0x84C7;const Size GL_TEXTURE0 = 0x84C0;const Size GL_LINEAR_MIPMAP_LINEAR = 0x2703;const Size GL_TEXTURE2 = 0x84C2;const Size GL_TEXTURE3 = 0x84C3;const Size GL_BOOL_VEC4 = 0x8B59;const Size GL_RENDERBUFFER_BINDING_EXT = 0x8CA7;const Size GL_BOOL_VEC3 = 0x8B58;const Size GL_BOOL_VEC2 = 0x8B57;const Size GL_PREFER_DOUBLEBUFFER_HINT_PGI = 107000;const Size GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS = 0x8E85;const Size GL_COLOR_MATERIAL_PARAMETER = 0x0B56;const Size GL_EXT_multi_draw_arrays = 1;const Size GL_ONE = 1;const Size GL_EXT_misc_attribute = 1;const Size GL_OP_MADD_EXT = 0x8788;const Size GLX_AUX1_EXT = 0x20E3;const Size GL_COLOR_ARRAY_POINTER_EXT = 0x8090;const Size GL_VECTOR_EXT = 0x87BF;const Size GLX_SAMPLE_BUFFERS_3DFX = 0x8050;const Size GL_UNPACK_IMAGE_HEIGHT = 0x806E;const Size GL_OUTPUT_VERTEX_EXT = 0x879A;const Size GL_TRIANGLE_STRIP = 0x0005;const Size GL_N3F_V3F = 0x2A25;const Size GL_PROGRAM_BINARY_RETRIEVABLE_HINT = 0x8257;const Size GL_FRONT_LEFT = 0x0400;const Size GL_CLAMP = 0x2900;const Size GL_RESCALE_NORMAL_EXT = 0x803A;const Size GL_INDEX_OFFSET = 0x0D13;const Size GL_INTENSITY = 0x8049;const Size GL_EXT_convolution = 1;const Size GL_LUMINANCE_ALPHA_SNORM = 0x9012;const Size GL_VERTEX_ARRAY_BINDING = 0x85B5;const Size GL_TIMEOUT_EXPIRED = 0x911B;const Size GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY = 0x910C;const Size GL_STENCIL_FUNC = 0x0B92;const Size GL_TEXTURE_ENV = 0x2300;const Size GL_COLOR_ATTACHMENT15_EXT = 0x8CEF;const Size GLX_STENCIL_SIZE = 13;const Size GLX_RGBA_UNSIGNED_FLOAT_TYPE_EXT = 0x20B1;const Size GL_DECR = 0x1E03;const Size GL_BACK = 0x0405;const Size GL_TABLE_TOO_LARGE = 0x8031;const Size GL_PROXY_TEXTURE_CUBE_MAP_EXT = 0x851B;const Size GL_LUMINANCE8UI_EXT = 0x8D80;const Size GL_INT = 0x1404;const Size GL_ENV_MODULATE_EXT = 0;const Size GL_ALLOW_DRAW_OBJ_HINT_PGI = 107022;const Size GL_MINOR_VERSION = 0x821C;const Size GL_PIXEL_MAP_G_TO_G_SIZE = 0x0CB7;const Size GL_COMPRESSED_RGBA_S3TC_DXT5_EXT = 0x83F3;const Size GL_FRONT_AND_BACK = 0x0408;const Size GL_COMPRESSED_RG_RGTC2 = 0x8DBD;const Size GL_TEXTURE_COORD_ARRAY_SIZE_EXT = 0x8088;const Size GL_SYNC_FENCE = 0x9116;const Size GL_MODELVIEW0_EXT = 0x1700;const Size GL_EXT_texture_array = 1;const Size GL_VERTEX_WEIGHT_ARRAY_TYPE_EXT = 0x850E;const Size GL_RGB8_SNORM = 0x8F96;const Size GL_UNPACK_SKIP_PIXELS = 0x0CF4;const Size GL_UNSIGNED_SHORT_4_4_4_4 = 0x8033;const Size GL_NO_ERROR = 0;const Size GL_PIXEL_CUBIC_WEIGHT_EXT = 0x8333;const Size GL_CURRENT_SECONDARY_COLOR = 0x8459;const Size GL_RGBA16UI = 0x8D76;const Size GL_OUTPUT_TEXTURE_COORD5_EXT = 0x87A2;const Size GL_MAX_OPTIMIZED_VERTEX_SHADER_VARIANTS_EXT = 0x87CB;const Size GL_EXT_secondary_color = 1;const Size GL_TEXTURE_BINDING_2D_ARRAY = 0x8C1D;const Size GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT = 0x8CD7;const Size GL_MAX_DRAW_BUFFERS = 0x8824;const Size GL_RENDERBUFFER_RED_SIZE_EXT = 0x8D50;const Size GLX_BAD_SCREEN = 1;const Size GL_R32UI = 0x8236;const Size GL_SECONDARY_COLOR_ARRAY = 0x845E;const Size GL_RGBA8_EXT = 0x8058;const Size GL_CURRENT_INDEX = 0x0B01;const Size GL_ENV_SUBTRACT_EXT = 0;const Size GLX_DEPTH_SIZE = 12;const Size GL_BLEND_EQUATION_ALPHA_EXT = 0x883D;const Size GL_COLOR_TABLE_ALPHA_SIZE = 0x80DD;const Size GL_COLOR_ATTACHMENT9_EXT = 0x8CE9;const Size GL_MAJOR_VERSION = 0x821B;const Size GL_REFLECTION_MAP = 0x8512;const Size GL_LUMINANCE32UI_EXT = 0x8D74;const Size GL_BGR_INTEGER = 0x8D9A;const Size GL_CONVOLUTION_HEIGHT_EXT = 0x8019;const Size GL_PROXY_TEXTURE_3D = 0x8070;const Size GL_UNIFORM_BUFFER_BINDING = 0x8A28;const Size GL_UNIFORM_TYPE = 0x8A37;const Size GL_DELETE_STATUS = 0x8B80;const Size GL_EXT_pixel_transform_color_table = 1;const Size GLX_SLOW_CONFIG = 0x8001;const Size GL_POINT_BIT = 0x00000002;const Size GL_LUMINANCE8_ALPHA8_SNORM = 0x9016;const Size GL_COLOR_ATTACHMENT13_EXT = 0x8CED;const Size GL_EXT_gpu_program_parameters = 1;const Size GLX_OML_swap_method = 1;const Size GL_3D = 0x0601;const Size GL_MAP_INVALIDATE_BUFFER_BIT = 0x0008;const Size GL_UNSIGNED_INT_5_9_9_9_REV = 0x8C3E;const Size GL_DEPTH_TEST = 0x0B71;const Size GL_VERTEX_ATTRIB_ARRAY_POINTER = 0x8645;const Size GL_MULTISAMPLE = 0x809D;const Size GL_COLOR_TABLE_WIDTH = 0x80D9;const Size GL_TEXTURE_RED_TYPE = 0x8C10;const Size GL_SECONDARY_COLOR_ARRAY_POINTER_EXT = 0x845D;const Size GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN = 0x8C88;const Size GL_CONSTANT_ALPHA_EXT = 0x8003;const Size GL_FUNC_SUBTRACT = 0x800A;const Size GL_VERTEX_PROGRAM_TWO_SIDE = 0x8643;const Size GL_SAMPLER_BUFFER = 0x8DC2;const Size GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING = 0x8210;const Size GL_CLAMP_TO_BORDER = 0x812D;const Size GL_COLOR_ATTACHMENT15 = 0x8CEF;const Size GL_COLOR_ATTACHMENT14 = 0x8CEE;const Size GL_DEPTH_RANGE = 0x0B70;const Size GL_COLOR_ATTACHMENT11 = 0x8CEB;const Size GL_CLAMP_TO_EDGE = 0x812F;const Size GL_COLOR_ATTACHMENT13 = 0x8CED;const Size GL_COLOR_ATTACHMENT12 = 0x8CEC;const Size GL_NEAREST = 0x2600;const Size GL_MAX_RENDERBUFFER_SIZE_EXT = 0x84E8;const Size GL_RENDERBUFFER_GREEN_SIZE = 0x8D51;const Size GL_PIXEL_MAP_S_TO_S_SIZE = 0x0CB1;const Size GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT = 0x8CD6;const Size GL_FRONT_RIGHT = 0x0401;const Size GL_POLYGON = 0x0009;const Size GL_RENDERBUFFER_EXT = 0x8D41;const Size GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS = 0x8E1E;const Size GL_POINT_SMOOTH = 0x0B10;const Size GL_DEPTH_CLEAR_VALUE = 0x0B73;const Size GL_UNSIGNED_INT_SAMPLER_BUFFER_EXT = 0x8DD8;const Size GL_GEOMETRY_INPUT_TYPE = 0x8917;const Size GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED = 0x8E23;const Size GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE = 0x8CD0;const Size GLX_VERSION_1_4 = 1;const Size GL_CURRENT_BIT = 0x00000001;const Size GLX_VERSION_1_0 = 1;const Size GLX_VERSION_1_2 = 1;const Size GLX_VERSION_1_3 = 1;const Size GL_BLEND_COLOR_EXT = 0x8005;const Size GL_MIRRORED_REPEAT = 0x8370;const Size GL_PRIMITIVE_RESTART_INDEX = 0x8F9E;const Size GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_EXT = 0x8518;const Size GL_ONE_MINUS_DST_COLOR = 0x0307;const Size GL_KTX_BACK_REGION = 0x1;const Size GL_ACCUM_ALPHA_BITS = 0x0D5B;const Size GLX_AUX_BUFFERS_BIT = 0x00000010;const Size GL_POINT_SIZE_MAX_EXT = 0x8127;const Size GL_COLOR_BUFFER_BIT = 0x00004000;const Size GL_SPOT_CUTOFF = 0x1206;const Size GL_LUMINANCE12_ALPHA4_EXT = 0x8046;const Size GL_SAMPLER_2D = 0x8B5E;const Size GL_INVALID_VALUE = 0x0501;const Size GL_COLOR_TABLE_FORMAT_EXT = 0x80D8;const Size GL_NEAREST_MIPMAP_NEAREST = 0x2700;const Size GL_COMPRESSED_SLUMINANCE_EXT = 0x8C4A;const Size GL_SLUMINANCE8_EXT = 0x8C47;const Size GL_NORMAL_ARRAY_EXT = 0x8075;const Size GL_CONTEXT_COMPATIBILITY_PROFILE_BIT = 0x00000002;const Size GL_SINGLE_COLOR = 0x81F9;const Size GLX_TRUE_COLOR_EXT = 0x8002;const Size GLX_RENDER_TYPE = 0x8011;const Size GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY = 0x9105;const Size GLX_BIND_TO_MIPMAP_TEXTURE_EXT = 0x20D2;const Size GL_COLOR_TABLE_WIDTH_EXT = 0x80D9;const Size GL_RGBA8I_EXT = 0x8D8E;const Size GLX_TRANSPARENT_RGB = 0x8008;const Size GL_FRAGMENT_LIGHT_MODEL_LOCAL_VIEWER_EXT = 0x8408;const Size GL_MAT_SHININESS_BIT_PGI = 0x02000000;const Size GL_EXT_scene_marker = 1;const Size GLX_VISUAL_ID = 0x800B;const Size GL_AND_INVERTED = 0x1504;const Size GL_ACCUM_BLUE_BITS = 0x0D5A;const Size GL_CULL_FACE = 0x0B44;const Size GL_FRAMEBUFFER_SRGB = 0x8DB9;const Size GL_SECONDARY_COLOR_ARRAY_TYPE = 0x845B;const Size GL_EXT_timer_query = 1;const Size GL_POLYGON_OFFSET_POINT = 0x2A01;const Size GL_LUMINANCE12_EXT = 0x8041;const Size GL_COMBINE_ALPHA = 0x8572;const Size GL_RIGHT = 0x0407;const Size GL_OUTPUT_TEXTURE_COORD31_EXT = 0x87BC;const Size GL_UNSIGNED_INT_SAMPLER_2D_ARRAY = 0x8DD7;const Size GL_2PASS_0_EXT = 0x80A2;const Size GL_ALPHA8UI_EXT = 0x8D7E;const Size GL_DEPTH_COMPONENT16 = 0x81A5;const Size GL_EXT_bindable_uniform = 1;const Size GL_MAX_SAMPLE_MASK_WORDS = 0x8E59;const Size GL_UNSIGNALED = 0x9118;const Size GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT = 0x84FF;const Size GL_RGB32I = 0x8D83;const Size GL_OUTPUT_TEXTURE_COORD26_EXT = 0x87B7;const Size GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH = 0x8A35;const Size GL_BGRA_INTEGER = 0x8D9B;const Size GL_ALPHA12_EXT = 0x803D;const Size GL_RGB32F = 0x8815;const Size GL_ONE_MINUS_SRC_ALPHA = 0x0303;const Size GL_COMPRESSED_SLUMINANCE_ALPHA_EXT = 0x8C4B;const Size GL_SOURCE2_RGB_EXT = 0x8582;const Size GL_MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT = 0x8DE4;const Size GL_PIXEL_MAP_I_TO_G_SIZE = 0x0CB3;const Size GL_MAP2_GRID_SEGMENTS = 0x0DD3;const Size GL_PROGRAM_POINT_SIZE = 0x8642;const Size GL_EXT_texture_perturb_normal = 1;const Size GL_POST_CONVOLUTION_BLUE_SCALE_EXT = 0x801E;const Size GL_UNSIGNED_INT_VEC2_EXT = 0x8DC6;const Size GL_RGB4_EXT = 0x804F;const Size GLX_BLUE_SIZE = 10;const Size GL_ALPHA16_EXT = 0x803E;const Size GL_MAP1_GRID_SEGMENTS = 0x0DD1;const Size GL_ATTRIB_STACK_DEPTH = 0x0BB0;const Size GL_MAP2_BINORMAL_EXT = 0x8447;const Size GL_TEXTURE_LUMINANCE_SIZE = 0x8060;const Size GL_BLUE_BIAS = 0x0D1B;const Size GL_COLOR_ATTACHMENT0_EXT = 0x8CE0;const Size GL_MAX_FRAGMENT_UNIFORM_COMPONENTS = 0x8B49;const Size GL_UNIFORM_BLOCK_NAME_LENGTH = 0x8A41;const Size GL_FRAMEBUFFER_DEFAULT = 0x8218;const Size GL_EXT_pixel_buffer_object = 1;const Size GL_TEXTURE_BINDING_RECTANGLE = 0x84F6;const Size GL_LINE_SMOOTH_HINT = 0x0C52;const Size GL_COLOR_ATTACHMENT10 = 0x8CEA;const Size GL_FRONT = 0x0404;const Size GL_UNSIGNED_INT_5_9_9_9_REV_EXT = 0x8C3E;const Size GL_SELECT = 0x1C02;const Size GL_AMBIENT = 0x1200;const Size GLX_PBUFFER_BIT = 0x00000004;const Size GL_EXT_blend_minmax = 1;const Size GL_NUM_EXTENSIONS = 0x821D;const Size GL_FRAMEBUFFER_BINDING = 0x8CA6;const Size GL_NORMAL_ARRAY_BUFFER_BINDING = 0x8897;const Size GL_SET = 0x150F;const Size GLX_PSEUDO_COLOR = 0x8004;const Size GL_RED_MIN_CLAMP_INGR = 0x8560;const Size GL_POST_CONVOLUTION_RED_BIAS_EXT = 0x8020;const Size GL_MAT_AMBIENT_BIT_PGI = 0x00100000;const Size GL_DEPTH_FUNC = 0x0B74;const Size GL_FRAGMENT_LIGHT_MODEL_TWO_SIDE_EXT = 0x8409;const Size GL_INVALID_ENUM = 0x0500;const Size GL_PIXEL_TRANSFORM_2D_EXT = 0x8330;const Size GL_STENCIL_BACK_VALUE_MASK = 0x8CA4;const Size GL_COLOR_MATRIX_STACK_DEPTH = 0x80B2;const Size GL_DEPTH_COMPONENT = 0x1902;const Size GL_FOG_START = 0x0B63;const Size GL_WAIT_FAILED = 0x911D;const Size GL_DECR_WRAP_EXT = 0x8508;const Size GL_ARRAY_ELEMENT_LOCK_FIRST_EXT = 0x81A8;const Size GL_LUMINANCE4_ALPHA4_EXT = 0x8043;const Size GL_PROJECTION_STACK_DEPTH = 0x0BA4;const Size GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE = 0x8211;const Size GL_TRUE = 1;const Size GL_TEXTURE_MIN_FILTER = 0x2801;const Size GL_TEXTURE_BINDING_1D_ARRAY_EXT = 0x8C1C;const Size GL_STACK_UNDERFLOW = 0x0504;const Size GL_SECONDARY_COLOR_ARRAY_TYPE_EXT = 0x845B;const Size GL_CONVOLUTION_FILTER_BIAS_EXT = 0x8015;const Size GL_MULTISAMPLE_BIT_3DFX = 0x20000000;const Size GL_AUX0 = 0x0409;const Size GL_AUX3 = 0x040C;const Size GL_AUX2 = 0x040B;const Size GL_MAP1_TANGENT_EXT = 0x8444;const Size GL_COLOR_ATTACHMENT6_EXT = 0x8CE6;const Size GL_DEPTH_STENCIL_ATTACHMENT = 0x821A;const Size GL_ADD = 0x0104;const Size GL_VERSION_1_2_DEPRECATED = 1;const Size GL_MODELVIEW_STACK_DEPTH = 0x0BA3;const Size GL_INTERLACE_READ_INGR = 0x8568;const Size GL_CONSERVE_MEMORY_HINT_PGI = 107005;const Size GL_FLOAT_MAT4x3 = 0x8B6A;const Size GL_OP_MIN_EXT = 0x878B;const Size GL_UNPACK_ALIGNMENT = 0x0CF5;const Size GL_PROXY_POST_CONVOLUTION_COLOR_TABLE = 0x80D4;const Size GLX_ACCUM_RED_SIZE = 14;const Size GL_EXT_stencil_wrap = 1;const Size GL_RG8_SNORM = 0x8F95;const Size GL_FRAGMENT_LIGHT_MODEL_NORMAL_INTERPOLATION_EXT = 0x840B;const Size GL_POST_CONVOLUTION_GREEN_BIAS = 0x8021;const Size GL_POLYGON_STIPPLE = 0x0B42;const Size GL_MATERIAL_SIDE_HINT_PGI = 107052;const Size GL_OP_DOT3_EXT = 0x8784;const Size GL_LUMINANCE12_ALPHA12 = 0x8047;const Size GL_LUMINANCE16UI_EXT = 0x8D7A;const Size GL_BINORMAL_ARRAY_POINTER_EXT = 0x8443;const Size GL_GEOMETRY_INPUT_TYPE_EXT = 0x8DDB;const Size GL_MAX_VERTEX_OUTPUT_COMPONENTS = 0x9122;const Size GL_KEEP = 0x1E00;const Size GL_UNSIGNED_INT_24_8_EXT = 0x84FA;const Size GL_PROXY_TEXTURE_2D = 0x8064;const Size GL_RESAMPLE_AVERAGE_OML = 0x8988;const Size GLX_RGBA_UNSIGNED_FLOAT_BIT_EXT = 0x00000008;const Size GL_OPERAND1_RGB_EXT = 0x8591;const Size GL_OPERAND2_RGB_EXT = 0x8592;const Size GL_OR = 0x1507;const Size GL_VERTEX_ARRAY_TYPE = 0x807B;const Size GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER = 0x8CD4;const Size GL_MAP2_VERTEX_3 = 0x0DB7;const Size GL_CONVOLUTION_HEIGHT = 0x8019;const Size GL_SAMPLER_1D_ARRAY = 0x8DC0;const Size GL_POST_CONVOLUTION_BLUE_BIAS = 0x8022;const Size GL_LINE_LOOP = 0x0002;const Size GL_COLOR_TABLE_SCALE = 0x80D6;const Size GLX_SCREEN = 0x800C;const Size GL_COLOR_INDEX2_EXT = 0x80E3;const Size GL_BACK_RIGHT = 0x0403;const Size GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS = 0x8A33;const Size GL_INT_SAMPLER_CUBE_EXT = 0x8DCC;const Size GL_EXT_blend_equation_separate = 1;const Size GL_TEXTURE_LOD_BIAS_EXT = 0x8501;const Size GL_R3_G3_B2 = 0x2A10;const Size GL_SLUMINANCE8_ALPHA8 = 0x8C45;const Size GL_LUMINANCE4_ALPHA4 = 0x8043;const Size GL_UNIFORM_OFFSET = 0x8A3B;const Size GL_TEXTURE1 = 0x84C1;const Size GL_VERTEX_SHADER_INVARIANTS_EXT = 0x87D1;const Size GL_OBJECT_PLANE = 0x2501;const Size GL_UNSIGNED_INT_SAMPLER_CUBE = 0x8DD4;const Size GLX_TRANSPARENT_ALPHA_VALUE_EXT = 0x28;const Size GL_HISTOGRAM_BLUE_SIZE = 0x802A;const Size GL_SAMPLES_3DFX = 0x86B4;const Size GL_FUNC_ADD = 0x8006;const Size GL_ABGR_EXT = 0x8000;const Size GL_BUFFER_ACCESS = 0x88BB;const Size GL_LINES_ADJACENCY = 0x000A;const Size GL_POLYGON_OFFSET_FACTOR_EXT = 0x8038;const Size GL_MVP_MATRIX_EXT = 0x87E3;const Size GL_NORMAL_ARRAY_COUNT_EXT = 0x8080;const Size GL_POST_COLOR_MATRIX_RED_SCALE = 0x80B4;const Size GL_VERTEX_ARRAY_STRIDE = 0x807C;const Size GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT = 0x8CD2;const Size GL_EXT_packed_depth_stencil = 1;const Size GL_LUMINANCE16_ALPHA16_SNORM = 0x901A;const Size GL_UNPACK_CMYK_HINT_EXT = 0x800F;const Size GL_422_AVERAGE_EXT = 0x80CE;const Size GL_OUTPUT_TEXTURE_COORD16_EXT = 0x87AD;const Size GL_HISTOGRAM_RED_SIZE = 0x8028;const Size GL_MODELVIEW1_STACK_DEPTH_EXT = 0x8502;const Size GL_STENCIL_BACK_FUNC = 0x8800;const Size GL_POLYGON_SMOOTH_HINT = 0x0C53;const Size GL_INDEX = 0x8222;const Size GLX_FBCONFIG_ID = 0x8013;const Size GL_VARIANT_ARRAY_STRIDE_EXT = 0x87E6;const Size GL_SEPARABLE_2D = 0x8012;const Size GL_TEXTURE_CUBE_MAP_POSITIVE_Z_EXT = 0x8519;const Size GL_RGB10_A2_EXT = 0x8059;const Size GL_DOMAIN = 0x0A02;const Size GL_TEXTURE_PRIORITY_EXT = 0x8066;const Size GL_EXT_compiled_vertex_array = 1;const Size GL_RGB10_EXT = 0x8052;const Size GLX_SWAP_EXCHANGE_OML = 0x8061;const Size GL_COLOR_TABLE_INTENSITY_SIZE = 0x80DF;const Size GL_DRAW_FRAMEBUFFER_BINDING = 0x8CA6;const Size GL_OUTPUT_TEXTURE_COORD13_EXT = 0x87AA;const Size GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_EXT = 0x8C80;const Size GL_PROGRAM_MATRIX_EXT = 0x8E2D;const Size GL_TRIANGLES = 0x0004;const Size GL_SAMPLER_2D_ARRAY_SHADOW = 0x8DC4;const Size GL_COLOR_ATTACHMENT12_EXT = 0x8CEC;const Size GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING = 0x889F;const Size GL_FRAGMENT_COLOR_MATERIAL_PARAMETER_EXT = 0x8403;const Size GL_NORMAL_ARRAY_STRIDE_EXT = 0x807F;const Size GL_SLUMINANCE = 0x8C46;const Size GL_SRGB8_ALPHA8 = 0x8C43;const Size GL_SAMPLER_2D_ARRAY = 0x8DC1;const Size GL_RENDERER = 0x1F01;const Size GL_MAX_VARYING_FLOATS = 0x8B4B;const Size GL_RENDERBUFFER_BLUE_SIZE_EXT = 0x8D52;const Size GL_SAMPLE_BUFFERS_EXT = 0x80A8;const Size GL_PIXEL_MAP_B_TO_B = 0x0C78;const Size GL_EXT_blend_logic_op = 1;const Size GL_COLOR_TABLE_RED_SIZE = 0x80DA;const Size GL_COLOR_LOGIC_OP = 0x0BF2;const Size GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH = 0x8C76;const Size GL_UNIFORM_BLOCK_INDEX = 0x8A3A;const Size GL_OUTPUT_TEXTURE_COORD27_EXT = 0x87B8;const Size GL_TEXTURE_BUFFER_FORMAT_EXT = 0x8C2E;const Size GL_EXT_copy_texture = 1;const Size GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCAL_CONSTANTS_EXT = 0x87CD;const Size GL_SPHERE_MAP = 0x2402;const Size GL_AVERAGE_EXT = 0x8335;const Size GL_INTERLACE_OML = 0x8980;const Size GL_X_EXT = 0x87D5;const Size GL_OPERAND0_ALPHA_EXT = 0x8598;const Size GL_RGB_SCALE = 0x8573;const Size GL_TEXTURE_COORD_ARRAY_POINTER_EXT = 0x8092;const Size GL_BINORMAL_ARRAY_EXT = 0x843A;const Size GL_OP_SET_GE_EXT = 0x878C;const Size GL_INTENSITY32I_EXT = 0x8D85;const Size GL_TEXTURE_BINDING_BUFFER_EXT = 0x8C2C;const Size GL_CURRENT_RASTER_INDEX = 0x0B05;const Size GLX_STATIC_COLOR = 0x8005;const Size GLX_EVENT_MASK = 0x801F;const Size GL_COMPRESSED_SRGB = 0x8C48;const Size GL_TEXTURE_DEPTH_TYPE = 0x8C16;const Size GL_COMPRESSED_SLUMINANCE_ALPHA = 0x8C4B;const Size GL_EQUIV = 0x1509;const Size GL_EXT_coordinate_frame = 1;const Size GL_RENDERBUFFER_GREEN_SIZE_EXT = 0x8D51;const Size GL_LUMINANCE = 0x1909;const Size GL_HISTOGRAM_FORMAT = 0x8027;const Size GL_QUAD_STRIP = 0x0008;const Size GL_ACCUM = 0x0100;const Size GL_FRAGMENT_LIGHT_MODEL_AMBIENT_EXT = 0x840A;const Size GL_SOURCE1_RGB_EXT = 0x8581;const Size GL_MINMAX_FORMAT_EXT = 0x802F;const Size GL_KTX_buffer_region = 1;const Size GL_TEXTURE_BINDING_2D_ARRAY_EXT = 0x8C1D;const Size GL_VERTEX_ARRAY_SIZE = 0x807A;const Size GL_TEXTURE_COORD_ARRAY_COUNT_EXT = 0x808B;const Size GL_MAX_ARRAY_TEXTURE_LAYERS_EXT = 0x88FF;const Size GL_POST_CONVOLUTION_GREEN_SCALE_EXT = 0x801D;const Size GL_STENCIL_BUFFER_BIT = 0x00000400;const Size GL_ALPHA16I_EXT = 0x8D8A;const Size GL_MIRROR_CLAMP_EXT = 0x8742;const Size GL_MAX_TEXTURE_BUFFER_SIZE_EXT = 0x8C2B;const Size GL_SEPARATE_ATTRIBS_EXT = 0x8C8D;const Size GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS = 0x8E89;const Size GLX_BAD_VALUE = 6;const Size GLX_AUX5_EXT = 0x20E7;const Size GL_DEPTH_SCALE = 0x0D1E;const Size GL_LIGHTING = 0x0B50;const Size GL_OP_ADD_EXT = 0x8787;const Size GL_RGB32UI_EXT = 0x8D71;const Size GL_CURRENT_RASTER_DISTANCE = 0x0B09;const Size GLX_TRUE_COLOR = 0x8002;const Size GL_VERTEX_ARRAY_POINTER = 0x808E;const Size GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY = 0x910D;const Size GL_MAX_FRAGMENT_INPUT_COMPONENTS = 0x9125;const Size GL_OUTPUT_TEXTURE_COORD10_EXT = 0x87A7;const Size GL_DRAW_PIXEL_TOKEN = 0x0705;const Size GL_VARIANT_ARRAY_POINTER_EXT = 0x87E9;const Size GL_INTENSITY4_EXT = 0x804A;const Size GL_POLYGON_STIPPLE_BIT = 0x00000010;const Size GL_MAX_FRAGMENT_UNIFORM_BLOCKS = 0x8A2D;const Size GL_RGB8I_EXT = 0x8D8F;const Size GL_FORMAT_SUBSAMPLE_244_244_OML = 0x8983;const Size GL_INTENSITY8_SNORM = 0x9017;const Size GL_VERTEX_ATTRIB_ARRAY_NORMALIZED = 0x886A;const Size GL_UNSIGNED_INT_IMAGE_1D_ARRAY_EXT = 0x9068;const Size GL_OP_POWER_EXT = 0x8793;const Size GL_CUBIC_EXT = 0x8334;const Size GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_EXT = 0x8DA9;const Size GL_FOG_COORDINATE = 0x8451;const Size GL_RGB16_EXT = 0x8054;const Size GL_CONSTANT_COLOR = 0x8001;const Size GL_TEXTURE_INDEX_SIZE_EXT = 0x80ED;const Size GL_ARRAY_ELEMENT_LOCK_COUNT_EXT = 0x81A9;const Size GL_COLOR_TABLE_GREEN_SIZE_EXT = 0x80DB;const Size GLX_AUX3_EXT = 0x20E5;const Size GL_VERTEX_SHADER_BINDING_EXT = 0x8781;const Size GL_POST_CONVOLUTION_GREEN_SCALE = 0x801D;const Size GL_COLOR_ARRAY_BUFFER_BINDING = 0x8898;const Size GL_TRANSPOSE_COLOR_MATRIX = 0x84E6;const Size GLX_MAX_PBUFFER_WIDTH = 0x8016;const Size GL_LUMINANCE8_ALPHA8_EXT = 0x8045;const Size GL_SCREEN_COORDINATES_REND = 0x8490;const Size GL_FOG_COORDINATE_ARRAY_POINTER = 0x8456;const Size GL_SAMPLES_EXT = 0x80A9;const Size GL_EXT_framebuffer_object = 1;const Size GL_OUTPUT_TEXTURE_COORD12_EXT = 0x87A9;const Size GL_VERSION = 0x1F02;const Size GL_NEGATIVE_ONE_EXT = 0x87DF;const Size GL_COLOR_ARRAY_STRIDE = 0x8083;const Size GL_MAX_ELEMENTS_INDICES = 0x80E9;const Size GL_SCALAR_EXT = 0x87BE;const Size GL_GEOMETRY_VERTICES_OUT = 0x8916;const Size GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS = 0x8E81;const Size GL_RGB8 = 0x8051;const Size GL_REDUCE = 0x8016;const Size GL_UNIFORM_ARRAY_STRIDE = 0x8A3C;const Size GL_TEXTURE_SAMPLES = 0x9106;const Size GL_RGB4 = 0x804F;const Size GL_RGB5 = 0x8050;const Size GL_3DFX_texture_compression_FXT1 = 1;const Size GL_POST_COLOR_MATRIX_GREEN_BIAS = 0x80B9;const Size GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH = 0x8E49;const Size GL_SAMPLE_COVERAGE_VALUE = 0x80AA;const Size GL_MAX_GEOMETRY_SHADER_INVOCATIONS = 0x8E5A;const Size GL_RENDERBUFFER_RED_SIZE = 0x8D50;const Size GL_COMPRESSED_SIGNED_RG_RGTC2 = 0x8DBE;const Size GL_COLOR_INDEXES = 0x1603;const Size GL_INGR_blend_func_separate = 1;const Size GL_TEXTURE_CUBE_MAP_POSITIVE_X_EXT = 0x8515;const Size GL_OPERAND1_ALPHA = 0x8599;const Size GL_NEVER = 0x0200;const Size GL_STENCIL_VALUE_MASK = 0x0B93;const Size GL_BLEND_DST = 0x0BE0;const Size GL_RENDERBUFFER_ALPHA_SIZE_EXT = 0x8D53;const Size GL_STENCIL_BACK_WRITEMASK = 0x8CA5;const Size GL_COLOR_INDEX12_EXT = 0x80E6;const Size GL_EXT_texture_lod_bias = 1;const Size GL_LOAD = 0x0101;const Size GL_INDEX_ARRAY_STRIDE = 0x8086;const Size GL_MATRIX_EXT = 0x87C0;const Size GL_WRAP_BORDER = 0x8152;const Size GL_MAP2_VERTEX_4 = 0x0DB8;const Size GL_DEPTH_COMPONENT32 = 0x81A7;const Size GL_RGBA = 0x1908;const Size GL_READ_FRAMEBUFFER = 0x8CA8;const Size GLX_RGBA = 4;const Size GL_EXT_texture_filter_anisotropic = 1;const Size GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH_EXT = 0x8C76;const Size GL_MIN_PROGRAM_TEXEL_OFFSET = 0x8904;const Size GL_FOG_COORDINATE_EXT = 0x8451;const Size GL_MAP2_COLOR_4 = 0x0DB0;const Size GL_VENDOR = 0x1F00;const Size GL_TEXTURE_2D_ARRAY = 0x8C1A;const Size GL_ACCUM_BUFFER_BIT = 0x00000200;const Size GL_OUTPUT_TEXTURE_COORD29_EXT = 0x87BA;const Size GL_TEXTURE_BINDING_2D = 0x8069;const Size GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_EXT = 0x8C8F;const Size GL_R8UI = 0x8232;const Size GL_LINK_STATUS = 0x8B82;const Size GL_COMPRESSED_SRGB_ALPHA_EXT = 0x8C49;const Size GL_SOURCE0_RGB_EXT = 0x8580;const Size GL_OUTPUT_TEXTURE_COORD9_EXT = 0x87A6;const Size GL_MAX_TRANSFORM_FEEDBACK_BUFFERS = 0x8E70;const Size GL_MAX = 0x8008;const Size GL_PROXY_TEXTURE_2D_ARRAY = 0x8C1B;const Size GL_SEPARABLE_2D_EXT = 0x8012;const Size GL_FULL_RANGE_EXT = 0x87E1;const Size GL_AUTO_NORMAL = 0x0D80;const Size GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS = 0x8C29;const Size GLX_EXT_texture_from_pixmap = 1;const Size GL_VERTEX_WEIGHTING_EXT = 0x8509;const Size GL_SAMPLER_1D_SHADOW = 0x8B61;const Size GL_EXT_texture3D = 1;const Size GL_SEPARATE_SPECULAR_COLOR = 0x81FA;const Size GL_SAMPLER_2D_SHADOW = 0x8B62;const Size GL_TEXTURE_MATRIX = 0x0BA8;const Size GL_RG16F = 0x822F;const Size GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL = 0x8CD2;const Size GL_RG16I = 0x8239;const Size GL_WRITE_ONLY = 0x88B9;const Size GL_ALPHA32I_EXT = 0x8D84;const Size GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE = 0x80D5;const Size GL_STENCIL_ATTACHMENT = 0x8D20;const Size GL_MAP1_BINORMAL_EXT = 0x8446;const Size GL_SAMPLE_COVERAGE = 0x80A0;const Size GL_TEXTURE_3D_BINDING_EXT = 0x806A;const Size GL_SHININESS = 0x1601;const Size GL_DRAW_FRAMEBUFFER = 0x8CA9;function glAccum( io Size op, io Scalar value ) = 'glAccum_wrapper';function glAlphaFunc( io Size func, io Scalar ref ) = 'glAlphaFunc_wrapper';function Boolean glAreTexturesResident( io Size n, io Size textures[], io Boolean residences[] ) = 'glAreTexturesResident_wrapper';function glArrayElement( io Integer i ) = 'glArrayElement_wrapper';function glBegin( io Size mode ) = 'glBegin_wrapper';function glBindTexture( io Size target, io Size texture ) = 'glBindTexture_wrapper';function glBitmap( io Size width, io Size height, io Scalar xorig, io Scalar yorig, io Scalar xmove, io Scalar ymove, io Size bitmap[] ) = 'glBitmap_wrapper';function glBlendFunc( io Size sfactor, io Size dfactor ) = 'glBlendFunc_wrapper';function glCallList( io Size list ) = 'glCallList_wrapper';function glCallLists( io Size n, io Size type, io Data lists ) = 'glCallLists_wrapper';function glClear( io Size mask ) = 'glClear_wrapper';function glClearAccum( io Scalar red, io Scalar green, io Scalar blue, io Scalar alpha ) = 'glClearAccum_wrapper';function glClearColor( io Scalar red, io Scalar green, io Scalar blue, io Scalar alpha ) = 'glClearColor_wrapper';function glClearDepth( io Scalar depth ) = 'glClearDepth_wrapper';function glClearIndex( io Scalar c ) = 'glClearIndex_wrapper';function glClearStencil( io Integer s ) = 'glClearStencil_wrapper';function glClipPlane( io Size plane, io Scalar equation[] ) = 'glClipPlane_wrapper';function glColor3b( io Byte red, io Byte green, io Byte blue ) = 'glColor3b_wrapper';function glColor3bv( io Byte v[3] ) = 'glColor3bv_wrapper';function glColor3d( io Scalar red, io Scalar green, io Scalar blue ) = 'glColor3d_wrapper';function glColor3dv( io Scalar v[3] ) = 'glColor3dv_wrapper';function glColor3f( io Scalar red, io Scalar green, io Scalar blue ) = 'glColor3f_wrapper';function glColor3fv( io Scalar v[3] ) = 'glColor3fv_wrapper';function glColor3i( io Integer red, io Integer green, io Integer blue ) = 'glColor3i_wrapper';function glColor3iv( io Integer v[3] ) = 'glColor3iv_wrapper';function glColor3s( io Integer red, io Integer green, io Integer blue ) = 'glColor3s_wrapper';function glColor3sv( io Integer v[3] ) = 'glColor3sv_wrapper';function glColor3ub( io Size red, io Size green, io Size blue ) = 'glColor3ub_wrapper';function glColor3ubv( io Size v[3] ) = 'glColor3ubv_wrapper';function glColor3ui( io Size red, io Size green, io Size blue ) = 'glColor3ui_wrapper';function glColor3uiv( io Size v[3] ) = 'glColor3uiv_wrapper';function glColor3us( io Integer red, io Integer green, io Integer blue ) = 'glColor3us_wrapper';function glColor3usv( io Integer v[3] ) = 'glColor3usv_wrapper';function glColor4b( io Byte red, io Byte green, io Byte blue, io Byte alpha ) = 'glColor4b_wrapper';function glColor4bv( io Byte v[4] ) = 'glColor4bv_wrapper';function glColor4d( io Scalar red, io Scalar green, io Scalar blue, io Scalar alpha ) = 'glColor4d_wrapper';function glColor4dv( io Scalar v[4] ) = 'glColor4dv_wrapper';function glColor4f( io Scalar red, io Scalar green, io Scalar blue, io Scalar alpha ) = 'glColor4f_wrapper';function glColor4fv( io Scalar v[4] ) = 'glColor4fv_wrapper';function glColor4i( io Integer red, io Integer green, io Integer blue, io Integer alpha ) = 'glColor4i_wrapper';function glColor4iv( io Integer v[4] ) = 'glColor4iv_wrapper';function glColor4s( io Integer red, io Integer green, io Integer blue, io Integer alpha ) = 'glColor4s_wrapper';function glColor4sv( io Integer v[4] ) = 'glColor4sv_wrapper';function glColor4ub( io Size red, io Size green, io Size blue, io Size alpha ) = 'glColor4ub_wrapper';function glColor4ubv( io Size v[4] ) = 'glColor4ubv_wrapper';function glColor4ui( io Size red, io Size green, io Size blue, io Size alpha ) = 'glColor4ui_wrapper';function glColor4uiv( io Size v[4] ) = 'glColor4uiv_wrapper';function glColor4us( io Integer red, io Integer green, io Integer blue, io Integer alpha ) = 'glColor4us_wrapper';function glColor4usv( io Integer v[4] ) = 'glColor4usv_wrapper';function glColorMask( io Boolean red, io Boolean green, io Boolean blue, io Boolean alpha ) = 'glColorMask_wrapper';function glColorMaterial( io Size face, io Size mode ) = 'glColorMaterial_wrapper';function glColorPointer( io Integer size, io Size type, io Size stride, io Data pointer ) = 'glColorPointer_wrapper';function glCopyPixels( io Integer x, io Integer y, io Size width, io Size height, io Size type ) = 'glCopyPixels_wrapper';function glCopyTexImage1D( io Size target, io Integer level, io Size internalFormat, io Integer x, io Integer y, io Size width, io Integer border ) = 'glCopyTexImage1D_wrapper';function glCopyTexImage2D( io Size target, io Integer level, io Size internalFormat, io Integer x, io Integer y, io Size width, io Size height, io Integer border ) = 'glCopyTexImage2D_wrapper';function glCopyTexSubImage1D( io Size target, io Integer level, io Integer xoffset, io Integer x, io Integer y, io Size width ) = 'glCopyTexSubImage1D_wrapper';function glCopyTexSubImage2D( io Size target, io Integer level, io Integer xoffset, io Integer yoffset, io Integer x, io Integer y, io Size width, io Size height ) = 'glCopyTexSubImage2D_wrapper';function glCullFace( io Size mode ) = 'glCullFace_wrapper';function glDeleteLists( io Size list, io Size range ) = 'glDeleteLists_wrapper';function glDeleteTextures( io Size n, io Size textures[] ) = 'glDeleteTextures_wrapper';function glDepthFunc( io Size func ) = 'glDepthFunc_wrapper';function glDepthMask( io Boolean flag ) = 'glDepthMask_wrapper';function glDepthRange( io Scalar zNear, io Scalar zFar ) = 'glDepthRange_wrapper';function glDisable( io Size cap ) = 'glDisable_wrapper';function glDisableClientState( io Size array ) = 'glDisableClientState_wrapper';function glDrawArrays( io Size mode, io Integer first, io Size count ) = 'glDrawArrays_wrapper';function glDrawBuffer( io Size mode ) = 'glDrawBuffer_wrapper';function glDrawElements( io Size mode, io Size count, io Size type, io Data indices ) = 'glDrawElements_wrapper';function glDrawPixels( io Size width, io Size height, io Size format, io Size type, io Data pixels ) = 'glDrawPixels_wrapper';function glEdgeFlag( io Boolean flag ) = 'glEdgeFlag_wrapper';function glEdgeFlagPointer( io Size stride, io Data pointer ) = 'glEdgeFlagPointer_wrapper';function glEdgeFlagv( io Boolean flag[] ) = 'glEdgeFlagv_wrapper';function glEnable( io Size cap ) = 'glEnable_wrapper';function glEnableClientState( io Size array ) = 'glEnableClientState_wrapper';function glEnd(  ) = 'glEnd_wrapper';function glEndList(  ) = 'glEndList_wrapper';function glEvalCoord1d( io Scalar u ) = 'glEvalCoord1d_wrapper';function glEvalCoord1dv( io Scalar u[1] ) = 'glEvalCoord1dv_wrapper';function glEvalCoord1f( io Scalar u ) = 'glEvalCoord1f_wrapper';function glEvalCoord1fv( io Scalar u[1] ) = 'glEvalCoord1fv_wrapper';function glEvalCoord2d( io Scalar u, io Scalar v ) = 'glEvalCoord2d_wrapper';function glEvalCoord2dv( io Scalar u[2] ) = 'glEvalCoord2dv_wrapper';function glEvalCoord2f( io Scalar u, io Scalar v ) = 'glEvalCoord2f_wrapper';function glEvalCoord2fv( io Scalar u[2] ) = 'glEvalCoord2fv_wrapper';function glEvalMesh1( io Size mode, io Integer i1, io Integer i2 ) = 'glEvalMesh1_wrapper';function glEvalMesh2( io Size mode, io Integer i1, io Integer i2, io Integer j1, io Integer j2 ) = 'glEvalMesh2_wrapper';function glEvalPoint1( io Integer i ) = 'glEvalPoint1_wrapper';function glEvalPoint2( io Integer i, io Integer j ) = 'glEvalPoint2_wrapper';function glFeedbackBuffer( io Size size, io Size type, io Scalar buffer[] ) = 'glFeedbackBuffer_wrapper';function glFinish(  ) = 'glFinish_wrapper';function glFlush(  ) = 'glFlush_wrapper';function glFogf( io Size pname, io Scalar param ) = 'glFogf_wrapper';function glFogfv( io Size pname, io Scalar params[] ) = 'glFogfv_wrapper';function glFogi( io Size pname, io Integer param ) = 'glFogi_wrapper';function glFogiv( io Size pname, io Integer params[] ) = 'glFogiv_wrapper';function glFrontFace( io Size mode ) = 'glFrontFace_wrapper';function glFrustum( io Scalar left, io Scalar right, io Scalar bottom, io Scalar top, io Scalar zNear, io Scalar zFar ) = 'glFrustum_wrapper';function Size glGenLists( io Size range ) = 'glGenLists_wrapper';function glGenTextures( io Size n, io Size textures[] ) = 'glGenTextures_wrapper';function glGetBooleanv( io Size pname, io Boolean params[] ) = 'glGetBooleanv_wrapper';function glGetClipPlane( io Size plane, io Scalar equation[] ) = 'glGetClipPlane_wrapper';function glGetDoublev( io Size pname, io Scalar params[] ) = 'glGetDoublev_wrapper';function Size glGetError(  ) = 'glGetError_wrapper';function glGetFloatv( io Size pname, io Scalar params[] ) = 'glGetFloatv_wrapper';function glGetIntegerv( io Size pname, io Integer params[] ) = 'glGetIntegerv_wrapper';function glGetLightfv( io Size light, io Size pname, io Scalar params[] ) = 'glGetLightfv_wrapper';function glGetLightiv( io Size light, io Size pname, io Integer params[] ) = 'glGetLightiv_wrapper';function glGetMapdv( io Size target, io Size query, io Scalar v[] ) = 'glGetMapdv_wrapper';function glGetMapfv( io Size target, io Size query, io Scalar v[] ) = 'glGetMapfv_wrapper';function glGetMapiv( io Size target, io Size query, io Integer v[] ) = 'glGetMapiv_wrapper';function glGetMaterialfv( io Size face, io Size pname, io Scalar params[] ) = 'glGetMaterialfv_wrapper';function glGetMaterialiv( io Size face, io Size pname, io Integer params[] ) = 'glGetMaterialiv_wrapper';function glGetPixelMapfv( io Size map, io Scalar values[] ) = 'glGetPixelMapfv_wrapper';function glGetPixelMapuiv( io Size map, io Size values[] ) = 'glGetPixelMapuiv_wrapper';function glGetPixelMapusv( io Size map, io Integer values[] ) = 'glGetPixelMapusv_wrapper';function glGetPolygonStipple( io Size mask[] ) = 'glGetPolygonStipple_wrapper';function String glGetString( io Size name ) = 'glGetString_wrapper';function glGetTexEnvfv( io Size target, io Size pname, io Scalar params[] ) = 'glGetTexEnvfv_wrapper';function glGetTexEnviv( io Size target, io Size pname, io Integer params[] ) = 'glGetTexEnviv_wrapper';function glGetTexGendv( io Size coord, io Size pname, io Scalar params[] ) = 'glGetTexGendv_wrapper';function glGetTexGenfv( io Size coord, io Size pname, io Scalar params[] ) = 'glGetTexGenfv_wrapper';function glGetTexGeniv( io Size coord, io Size pname, io Integer params[] ) = 'glGetTexGeniv_wrapper';function glGetTexImage( io Size target, io Integer level, io Size format, io Size type, io Data pixels ) = 'glGetTexImage_wrapper';function glGetTexLevelParameterfv( io Size target, io Integer level, io Size pname, io Scalar params[] ) = 'glGetTexLevelParameterfv_wrapper';function glGetTexLevelParameteriv( io Size target, io Integer level, io Size pname, io Integer params[] ) = 'glGetTexLevelParameteriv_wrapper';function glGetTexParameterfv( io Size target, io Size pname, io Scalar params[] ) = 'glGetTexParameterfv_wrapper';function glGetTexParameteriv( io Size target, io Size pname, io Integer params[] ) = 'glGetTexParameteriv_wrapper';function glHint( io Size target, io Size mode ) = 'glHint_wrapper';function glIndexMask( io Size mask ) = 'glIndexMask_wrapper';function glIndexPointer( io Size type, io Size stride, io Data pointer ) = 'glIndexPointer_wrapper';function glIndexd( io Scalar c ) = 'glIndexd_wrapper';function glIndexdv( io Scalar c[] ) = 'glIndexdv_wrapper';function glIndexf( io Scalar c ) = 'glIndexf_wrapper';function glIndexfv( io Scalar c[] ) = 'glIndexfv_wrapper';function glIndexi( io Integer c ) = 'glIndexi_wrapper';function glIndexiv( io Integer c[] ) = 'glIndexiv_wrapper';function glIndexs( io Integer c ) = 'glIndexs_wrapper';function glIndexsv( io Integer c[] ) = 'glIndexsv_wrapper';function glIndexub( io Size c ) = 'glIndexub_wrapper';function glIndexubv( io Size c[] ) = 'glIndexubv_wrapper';function glInitNames(  ) = 'glInitNames_wrapper';function glInterleavedArrays( io Size format, io Size stride, io Data pointer ) = 'glInterleavedArrays_wrapper';function Boolean glIsEnabled( io Size cap ) = 'glIsEnabled_wrapper';function Boolean glIsList( io Size list ) = 'glIsList_wrapper';function Boolean glIsTexture( io Size texture ) = 'glIsTexture_wrapper';function glLightModelf( io Size pname, io Scalar param ) = 'glLightModelf_wrapper';function glLightModelfv( io Size pname, io Scalar params[] ) = 'glLightModelfv_wrapper';function glLightModeli( io Size pname, io Integer param ) = 'glLightModeli_wrapper';function glLightModeliv( io Size pname, io Integer params[] ) = 'glLightModeliv_wrapper';function glLightf( io Size light, io Size pname, io Scalar param ) = 'glLightf_wrapper';function glLightfv( io Size light, io Size pname, io Scalar params[] ) = 'glLightfv_wrapper';function glLighti( io Size light, io Size pname, io Integer param ) = 'glLighti_wrapper';function glLightiv( io Size light, io Size pname, io Integer params[] ) = 'glLightiv_wrapper';function glLineStipple( io Integer factor, io Integer pattern ) = 'glLineStipple_wrapper';function glLineWidth( io Scalar width ) = 'glLineWidth_wrapper';function glListBase( io Size base ) = 'glListBase_wrapper';function glLoadIdentity(  ) = 'glLoadIdentity_wrapper';function glLoadMatrixd( io Scalar m[] ) = 'glLoadMatrixd_wrapper';function glLoadMatrixf( io Scalar m[] ) = 'glLoadMatrixf_wrapper';function glLoadName( io Size name ) = 'glLoadName_wrapper';function glLogicOp( io Size opcode ) = 'glLogicOp_wrapper';function glMap1d( io Size target, io Scalar u1, io Scalar u2, io Integer stride, io Integer order, io Scalar points[1] ) = 'glMap1d_wrapper';function glMap1f( io Size target, io Scalar u1, io Scalar u2, io Integer stride, io Integer order, io Scalar points[1] ) = 'glMap1f_wrapper';function glMap2d( io Size target, io Scalar u1, io Scalar u2, io Integer ustride, io Integer uorder, io Scalar v1, io Scalar v2, io Integer vstride, io Integer vorder, io Scalar points[2] ) = 'glMap2d_wrapper';function glMap2f( io Size target, io Scalar u1, io Scalar u2, io Integer ustride, io Integer uorder, io Scalar v1, io Scalar v2, io Integer vstride, io Integer vorder, io Scalar points[2] ) = 'glMap2f_wrapper';function glMapGrid1d( io Integer un, io Scalar u1, io Scalar u2 ) = 'glMapGrid1d_wrapper';function glMapGrid1f( io Integer un, io Scalar u1, io Scalar u2 ) = 'glMapGrid1f_wrapper';function glMapGrid2d( io Integer un, io Scalar u1, io Scalar u2, io Integer vn, io Scalar v1, io Scalar v2 ) = 'glMapGrid2d_wrapper';function glMapGrid2f( io Integer un, io Scalar u1, io Scalar u2, io Integer vn, io Scalar v1, io Scalar v2 ) = 'glMapGrid2f_wrapper';function glMaterialf( io Size face, io Size pname, io Scalar param ) = 'glMaterialf_wrapper';function glMaterialfv( io Size face, io Size pname, io Scalar params[] ) = 'glMaterialfv_wrapper';function glMateriali( io Size face, io Size pname, io Integer param ) = 'glMateriali_wrapper';function glMaterialiv( io Size face, io Size pname, io Integer params[] ) = 'glMaterialiv_wrapper';function glMatrixMode( io Size mode ) = 'glMatrixMode_wrapper';function glMultMatrixd( io Scalar m[] ) = 'glMultMatrixd_wrapper';function glMultMatrixf( io Scalar m[] ) = 'glMultMatrixf_wrapper';function glNewList( io Size list, io Size mode ) = 'glNewList_wrapper';function glNormal3b( io Byte nx, io Byte ny, io Byte nz ) = 'glNormal3b_wrapper';function glNormal3bv( io Byte v[3] ) = 'glNormal3bv_wrapper';function glNormal3d( io Scalar nx, io Scalar ny, io Scalar nz ) = 'glNormal3d_wrapper';function glNormal3dv( io Scalar v[3] ) = 'glNormal3dv_wrapper';function glNormal3f( io Scalar nx, io Scalar ny, io Scalar nz ) = 'glNormal3f_wrapper';function glNormal3fv( io Scalar v[3] ) = 'glNormal3fv_wrapper';function glNormal3i( io Integer nx, io Integer ny, io Integer nz ) = 'glNormal3i_wrapper';function glNormal3iv( io Integer v[3] ) = 'glNormal3iv_wrapper';function glNormal3s( io Integer nx, io Integer ny, io Integer nz ) = 'glNormal3s_wrapper';function glNormal3sv( io Integer v[3] ) = 'glNormal3sv_wrapper';function glNormalPointer( io Size type, io Size stride, io Data pointer ) = 'glNormalPointer_wrapper';function glOrtho( io Scalar left, io Scalar right, io Scalar bottom, io Scalar top, io Scalar zNear, io Scalar zFar ) = 'glOrtho_wrapper';function glPassThrough( io Scalar token ) = 'glPassThrough_wrapper';function glPixelMapfv( io Size map, io Size mapsize, io Scalar values[] ) = 'glPixelMapfv_wrapper';function glPixelMapuiv( io Size map, io Size mapsize, io Size values[] ) = 'glPixelMapuiv_wrapper';function glPixelMapusv( io Size map, io Size mapsize, io Integer values[] ) = 'glPixelMapusv_wrapper';function glPixelStoref( io Size pname, io Scalar param ) = 'glPixelStoref_wrapper';function glPixelStorei( io Size pname, io Integer param ) = 'glPixelStorei_wrapper';function glPixelTransferf( io Size pname, io Scalar param ) = 'glPixelTransferf_wrapper';function glPixelTransferi( io Size pname, io Integer param ) = 'glPixelTransferi_wrapper';function glPixelZoom( io Scalar xfactor, io Scalar yfactor ) = 'glPixelZoom_wrapper';function glPointSize( io Scalar size ) = 'glPointSize_wrapper';function glPolygonMode( io Size face, io Size mode ) = 'glPolygonMode_wrapper';function glPolygonOffset( io Scalar factor, io Scalar units ) = 'glPolygonOffset_wrapper';function glPolygonStipple( io Size mask[] ) = 'glPolygonStipple_wrapper';function glPopAttrib(  ) = 'glPopAttrib_wrapper';function glPopClientAttrib(  ) = 'glPopClientAttrib_wrapper';function glPopMatrix(  ) = 'glPopMatrix_wrapper';function glPopName(  ) = 'glPopName_wrapper';function glPrioritizeTextures( io Size n, io Size textures[], io Scalar priorities[] ) = 'glPrioritizeTextures_wrapper';function glPushAttrib( io Size mask ) = 'glPushAttrib_wrapper';function glPushClientAttrib( io Size mask ) = 'glPushClientAttrib_wrapper';function glPushMatrix(  ) = 'glPushMatrix_wrapper';function glPushName( io Size name ) = 'glPushName_wrapper';function glRasterPos2d( io Scalar x, io Scalar y ) = 'glRasterPos2d_wrapper';function glRasterPos2dv( io Scalar v[2] ) = 'glRasterPos2dv_wrapper';function glRasterPos2f( io Scalar x, io Scalar y ) = 'glRasterPos2f_wrapper';function glRasterPos2fv( io Scalar v[2] ) = 'glRasterPos2fv_wrapper';function glRasterPos2i( io Integer x, io Integer y ) = 'glRasterPos2i_wrapper';function glRasterPos2iv( io Integer v[2] ) = 'glRasterPos2iv_wrapper';function glRasterPos2s( io Integer x, io Integer y ) = 'glRasterPos2s_wrapper';function glRasterPos2sv( io Integer v[2] ) = 'glRasterPos2sv_wrapper';function glRasterPos3d( io Scalar x, io Scalar y, io Scalar z ) = 'glRasterPos3d_wrapper';function glRasterPos3dv( io Scalar v[3] ) = 'glRasterPos3dv_wrapper';function glRasterPos3f( io Scalar x, io Scalar y, io Scalar z ) = 'glRasterPos3f_wrapper';function glRasterPos3fv( io Scalar v[3] ) = 'glRasterPos3fv_wrapper';function glRasterPos3i( io Integer x, io Integer y, io Integer z ) = 'glRasterPos3i_wrapper';function glRasterPos3iv( io Integer v[3] ) = 'glRasterPos3iv_wrapper';function glRasterPos3s( io Integer x, io Integer y, io Integer z ) = 'glRasterPos3s_wrapper';function glRasterPos3sv( io Integer v[3] ) = 'glRasterPos3sv_wrapper';function glRasterPos4d( io Scalar x, io Scalar y, io Scalar z, io Scalar w ) = 'glRasterPos4d_wrapper';function glRasterPos4dv( io Scalar v[4] ) = 'glRasterPos4dv_wrapper';function glRasterPos4f( io Scalar x, io Scalar y, io Scalar z, io Scalar w ) = 'glRasterPos4f_wrapper';function glRasterPos4fv( io Scalar v[4] ) = 'glRasterPos4fv_wrapper';function glRasterPos4i( io Integer x, io Integer y, io Integer z, io Integer w ) = 'glRasterPos4i_wrapper';function glRasterPos4iv( io Integer v[4] ) = 'glRasterPos4iv_wrapper';function glRasterPos4s( io Integer x, io Integer y, io Integer z, io Integer w ) = 'glRasterPos4s_wrapper';function glRasterPos4sv( io Integer v[4] ) = 'glRasterPos4sv_wrapper';function glReadBuffer( io Size mode ) = 'glReadBuffer_wrapper';function glReadPixels( io Integer x, io Integer y, io Size width, io Size height, io Size format, io Size type, io Data pixels ) = 'glReadPixels_wrapper';function glRectd( io Scalar x1, io Scalar y1, io Scalar x2, io Scalar y2 ) = 'glRectd_wrapper';function glRectdv( io Scalar v1[], io Scalar v2[] ) = 'glRectdv_wrapper';function glRectf( io Scalar x1, io Scalar y1, io Scalar x2, io Scalar y2 ) = 'glRectf_wrapper';function glRectfv( io Scalar v1[], io Scalar v2[] ) = 'glRectfv_wrapper';function glRecti( io Integer x1, io Integer y1, io Integer x2, io Integer y2 ) = 'glRecti_wrapper';function glRectiv( io Integer v1[], io Integer v2[] ) = 'glRectiv_wrapper';function glRects( io Integer x1, io Integer y1, io Integer x2, io Integer y2 ) = 'glRects_wrapper';function glRectsv( io Integer v1[], io Integer v2[] ) = 'glRectsv_wrapper';function Integer glRenderMode( io Size mode ) = 'glRenderMode_wrapper';function glRotated( io Scalar angle, io Scalar x, io Scalar y, io Scalar z ) = 'glRotated_wrapper';function glRotatef( io Scalar angle, io Scalar x, io Scalar y, io Scalar z ) = 'glRotatef_wrapper';function glScaled( io Scalar x, io Scalar y, io Scalar z ) = 'glScaled_wrapper';function glScalef( io Scalar x, io Scalar y, io Scalar z ) = 'glScalef_wrapper';function glScissor( io Integer x, io Integer y, io Size width, io Size height ) = 'glScissor_wrapper';function glSelectBuffer( io Size size, io Size buffer[] ) = 'glSelectBuffer_wrapper';function glShadeModel( io Size mode ) = 'glShadeModel_wrapper';function glStencilFunc( io Size func, io Integer ref, io Size mask ) = 'glStencilFunc_wrapper';function glStencilMask( io Size mask ) = 'glStencilMask_wrapper';function glStencilOp( io Size fail, io Size zfail, io Size zpass ) = 'glStencilOp_wrapper';function glTexCoord1d( io Scalar s ) = 'glTexCoord1d_wrapper';function glTexCoord1dv( io Scalar v[1] ) = 'glTexCoord1dv_wrapper';function glTexCoord1f( io Scalar s ) = 'glTexCoord1f_wrapper';function glTexCoord1fv( io Scalar v[1] ) = 'glTexCoord1fv_wrapper';function glTexCoord1i( io Integer s ) = 'glTexCoord1i_wrapper';function glTexCoord1iv( io Integer v[1] ) = 'glTexCoord1iv_wrapper';function glTexCoord1s( io Integer s ) = 'glTexCoord1s_wrapper';function glTexCoord1sv( io Integer v[1] ) = 'glTexCoord1sv_wrapper';function glTexCoord2d( io Scalar s, io Scalar t ) = 'glTexCoord2d_wrapper';function glTexCoord2dv( io Scalar v[2] ) = 'glTexCoord2dv_wrapper';function glTexCoord2f( io Scalar s, io Scalar t ) = 'glTexCoord2f_wrapper';function glTexCoord2fv( io Scalar v[2] ) = 'glTexCoord2fv_wrapper';function glTexCoord2i( io Integer s, io Integer t ) = 'glTexCoord2i_wrapper';function glTexCoord2iv( io Integer v[2] ) = 'glTexCoord2iv_wrapper';function glTexCoord2s( io Integer s, io Integer t ) = 'glTexCoord2s_wrapper';function glTexCoord2sv( io Integer v[2] ) = 'glTexCoord2sv_wrapper';function glTexCoord3d( io Scalar s, io Scalar t, io Scalar r ) = 'glTexCoord3d_wrapper';function glTexCoord3dv( io Scalar v[3] ) = 'glTexCoord3dv_wrapper';function glTexCoord3f( io Scalar s, io Scalar t, io Scalar r ) = 'glTexCoord3f_wrapper';function glTexCoord3fv( io Scalar v[3] ) = 'glTexCoord3fv_wrapper';function glTexCoord3i( io Integer s, io Integer t, io Integer r ) = 'glTexCoord3i_wrapper';function glTexCoord3iv( io Integer v[3] ) = 'glTexCoord3iv_wrapper';function glTexCoord3s( io Integer s, io Integer t, io Integer r ) = 'glTexCoord3s_wrapper';function glTexCoord3sv( io Integer v[3] ) = 'glTexCoord3sv_wrapper';function glTexCoord4d( io Scalar s, io Scalar t, io Scalar r, io Scalar q ) = 'glTexCoord4d_wrapper';function glTexCoord4dv( io Scalar v[4] ) = 'glTexCoord4dv_wrapper';function glTexCoord4f( io Scalar s, io Scalar t, io Scalar r, io Scalar q ) = 'glTexCoord4f_wrapper';function glTexCoord4fv( io Scalar v[4] ) = 'glTexCoord4fv_wrapper';function glTexCoord4i( io Integer s, io Integer t, io Integer r, io Integer q ) = 'glTexCoord4i_wrapper';function glTexCoord4iv( io Integer v[4] ) = 'glTexCoord4iv_wrapper';function glTexCoord4s( io Integer s, io Integer t, io Integer r, io Integer q ) = 'glTexCoord4s_wrapper';function glTexCoord4sv( io Integer v[4] ) = 'glTexCoord4sv_wrapper';function glTexCoordPointer( io Integer size, io Size type, io Size stride, io Data pointer ) = 'glTexCoordPointer_wrapper';function glTexEnvf( io Size target, io Size pname, io Scalar param ) = 'glTexEnvf_wrapper';function glTexEnvfv( io Size target, io Size pname, io Scalar params[] ) = 'glTexEnvfv_wrapper';function glTexEnvi( io Size target, io Size pname, io Integer param ) = 'glTexEnvi_wrapper';function glTexEnviv( io Size target, io Size pname, io Integer params[] ) = 'glTexEnviv_wrapper';function glTexGend( io Size coord, io Size pname, io Scalar param ) = 'glTexGend_wrapper';function glTexGendv( io Size coord, io Size pname, io Scalar params[] ) = 'glTexGendv_wrapper';function glTexGenf( io Size coord, io Size pname, io Scalar param ) = 'glTexGenf_wrapper';function glTexGenfv( io Size coord, io Size pname, io Scalar params[] ) = 'glTexGenfv_wrapper';function glTexGeni( io Size coord, io Size pname, io Integer param ) = 'glTexGeni_wrapper';function glTexGeniv( io Size coord, io Size pname, io Integer params[] ) = 'glTexGeniv_wrapper';function glTexImage1D( io Size target, io Integer level, io Integer internalformat, io Size width, io Integer border, io Size format, io Size type, io Data pixels ) = 'glTexImage1D_wrapper';function glTexImage2D( io Size target, io Integer level, io Integer internalformat, io Size width, io Size height, io Integer border, io Size format, io Size type, io Data pixels ) = 'glTexImage2D_wrapper';function glTexParameterf( io Size target, io Size pname, io Scalar param ) = 'glTexParameterf_wrapper';function glTexParameterfv( io Size target, io Size pname, io Scalar params[] ) = 'glTexParameterfv_wrapper';function glTexParameteri( io Size target, io Size pname, io Integer param ) = 'glTexParameteri_wrapper';function glTexParameteriv( io Size target, io Size pname, io Integer params[] ) = 'glTexParameteriv_wrapper';function glTexSubImage1D( io Size target, io Integer level, io Integer xoffset, io Size width, io Size format, io Size type, io Data pixels ) = 'glTexSubImage1D_wrapper';function glTexSubImage2D( io Size target, io Integer level, io Integer xoffset, io Integer yoffset, io Size width, io Size height, io Size format, io Size type, io Data pixels ) = 'glTexSubImage2D_wrapper';function glTranslated( io Scalar x, io Scalar y, io Scalar z ) = 'glTranslated_wrapper';function glTranslatef( io Scalar x, io Scalar y, io Scalar z ) = 'glTranslatef_wrapper';function glVertex2d( io Scalar x, io Scalar y ) = 'glVertex2d_wrapper';function glVertex2dv( io Scalar v[2] ) = 'glVertex2dv_wrapper';function glVertex2f( io Scalar x, io Scalar y ) = 'glVertex2f_wrapper';function glVertex2fv( io Scalar v[2] ) = 'glVertex2fv_wrapper';function glVertex2i( io Integer x, io Integer y ) = 'glVertex2i_wrapper';function glVertex2iv( io Integer v[2] ) = 'glVertex2iv_wrapper';function glVertex2s( io Integer x, io Integer y ) = 'glVertex2s_wrapper';function glVertex2sv( io Integer v[2] ) = 'glVertex2sv_wrapper';function glVertex3d( io Scalar x, io Scalar y, io Scalar z ) = 'glVertex3d_wrapper';function glVertex3dv( io Scalar v[3] ) = 'glVertex3dv_wrapper';function glVertex3f( io Scalar x, io Scalar y, io Scalar z ) = 'glVertex3f_wrapper';function glVertex3fv( io Scalar v[3] ) = 'glVertex3fv_wrapper';function glVertex3i( io Integer x, io Integer y, io Integer z ) = 'glVertex3i_wrapper';function glVertex3iv( io Integer v[3] ) = 'glVertex3iv_wrapper';function glVertex3s( io Integer x, io Integer y, io Integer z ) = 'glVertex3s_wrapper';function glVertex3sv( io Integer v[3] ) = 'glVertex3sv_wrapper';function glVertex4d( io Scalar x, io Scalar y, io Scalar z, io Scalar w ) = 'glVertex4d_wrapper';function glVertex4dv( io Scalar v[4] ) = 'glVertex4dv_wrapper';function glVertex4f( io Scalar x, io Scalar y, io Scalar z, io Scalar w ) = 'glVertex4f_wrapper';function glVertex4fv( io Scalar v[4] ) = 'glVertex4fv_wrapper';function glVertex4i( io Integer x, io Integer y, io Integer z, io Integer w ) = 'glVertex4i_wrapper';function glVertex4iv( io Integer v[4] ) = 'glVertex4iv_wrapper';function glVertex4s( io Integer x, io Integer y, io Integer z, io Integer w ) = 'glVertex4s_wrapper';function glVertex4sv( io Integer v[4] ) = 'glVertex4sv_wrapper';function glVertexPointer( io Integer size, io Size type, io Size stride, io Data pointer ) = 'glVertexPointer_wrapper';function glViewport( io Integer x, io Integer y, io Size width, io Size height ) = 'glViewport_wrapper';function glCopyTexSubImage3D( io Size target, io Integer level, io Integer xoffset, io Integer yoffset, io Integer zoffset, io Integer x, io Integer y, io Size width, io Size height ) = 'glCopyTexSubImage3D_wrapper';function glDrawRangeElements( io Size mode, io Size start, io Size end, io Size count, io Size type, io Data indices ) = 'glDrawRangeElements_wrapper';function glTexImage3D( io Size target, io Integer level, io Integer internalFormat, io Size width, io Size height, io Size depth, io Integer border, io Size format, io Size type, io Data pixels ) = 'glTexImage3D_wrapper';function glTexSubImage3D( io Size target, io Integer level, io Integer xoffset, io Integer yoffset, io Integer zoffset, io Size width, io Size height, io Size depth, io Size format, io Size type, io Data pixels ) = 'glTexSubImage3D_wrapper';function glActiveTexture( io Size texture ) = 'glActiveTexture_wrapper';function glClientActiveTexture( io Size texture ) = 'glClientActiveTexture_wrapper';function glCompressedTexImage1D( io Size target, io Integer level, io Size internalformat, io Size width, io Integer border, io Size imageSize, io Data data ) = 'glCompressedTexImage1D_wrapper';function glCompressedTexImage2D( io Size target, io Integer level, io Size internalformat, io Size width, io Size height, io Integer border, io Size imageSize, io Data data ) = 'glCompressedTexImage2D_wrapper';function glCompressedTexImage3D( io Size target, io Integer level, io Size internalformat, io Size width, io Size height, io Size depth, io Integer border, io Size imageSize, io Data data ) = 'glCompressedTexImage3D_wrapper';function glCompressedTexSubImage1D( io Size target, io Integer level, io Integer xoffset, io Size width, io Size format, io Size imageSize, io Data data ) = 'glCompressedTexSubImage1D_wrapper';function glCompressedTexSubImage2D( io Size target, io Integer level, io Integer xoffset, io Integer yoffset, io Size width, io Size height, io Size format, io Size imageSize, io Data data ) = 'glCompressedTexSubImage2D_wrapper';function glCompressedTexSubImage3D( io Size target, io Integer level, io Integer xoffset, io Integer yoffset, io Integer zoffset, io Size width, io Size height, io Size depth, io Size format, io Size imageSize, io Data data ) = 'glCompressedTexSubImage3D_wrapper';function glGetCompressedTexImage( io Size target, io Integer lod, io Data img ) = 'glGetCompressedTexImage_wrapper';function glMultiTexCoord1d( io Size target, io Scalar s ) = 'glMultiTexCoord1d_wrapper';function glMultiTexCoord1dv( io Size target, io Scalar v[1] ) = 'glMultiTexCoord1dv_wrapper';function glMultiTexCoord1f( io Size target, io Scalar s ) = 'glMultiTexCoord1f_wrapper';function glMultiTexCoord1fv( io Size target, io Scalar v[1] ) = 'glMultiTexCoord1fv_wrapper';function glMultiTexCoord1i( io Size target, io Integer s ) = 'glMultiTexCoord1i_wrapper';function glMultiTexCoord1iv( io Size target, io Integer v[1] ) = 'glMultiTexCoord1iv_wrapper';function glMultiTexCoord1s( io Size target, io Integer s ) = 'glMultiTexCoord1s_wrapper';function glMultiTexCoord1sv( io Size target, io Integer v[1] ) = 'glMultiTexCoord1sv_wrapper';function glMultiTexCoord2d( io Size target, io Scalar s, io Scalar t ) = 'glMultiTexCoord2d_wrapper';function glMultiTexCoord2dv( io Size target, io Scalar v[2] ) = 'glMultiTexCoord2dv_wrapper';function glMultiTexCoord2f( io Size target, io Scalar s, io Scalar t ) = 'glMultiTexCoord2f_wrapper';function glMultiTexCoord2fv( io Size target, io Scalar v[2] ) = 'glMultiTexCoord2fv_wrapper';function glMultiTexCoord2i( io Size target, io Integer s, io Integer t ) = 'glMultiTexCoord2i_wrapper';function glMultiTexCoord2iv( io Size target, io Integer v[2] ) = 'glMultiTexCoord2iv_wrapper';function glMultiTexCoord2s( io Size target, io Integer s, io Integer t ) = 'glMultiTexCoord2s_wrapper';function glMultiTexCoord2sv( io Size target, io Integer v[2] ) = 'glMultiTexCoord2sv_wrapper';function glMultiTexCoord3d( io Size target, io Scalar s, io Scalar t, io Scalar r ) = 'glMultiTexCoord3d_wrapper';function glMultiTexCoord3dv( io Size target, io Scalar v[3] ) = 'glMultiTexCoord3dv_wrapper';function glMultiTexCoord3f( io Size target, io Scalar s, io Scalar t, io Scalar r ) = 'glMultiTexCoord3f_wrapper';function glMultiTexCoord3fv( io Size target, io Scalar v[3] ) = 'glMultiTexCoord3fv_wrapper';function glMultiTexCoord3i( io Size target, io Integer s, io Integer t, io Integer r ) = 'glMultiTexCoord3i_wrapper';function glMultiTexCoord3iv( io Size target, io Integer v[3] ) = 'glMultiTexCoord3iv_wrapper';function glMultiTexCoord3s( io Size target, io Integer s, io Integer t, io Integer r ) = 'glMultiTexCoord3s_wrapper';function glMultiTexCoord3sv( io Size target, io Integer v[3] ) = 'glMultiTexCoord3sv_wrapper';function glMultiTexCoord4d( io Size target, io Scalar s, io Scalar t, io Scalar r, io Scalar q ) = 'glMultiTexCoord4d_wrapper';function glMultiTexCoord4dv( io Size target, io Scalar v[4] ) = 'glMultiTexCoord4dv_wrapper';function glMultiTexCoord4f( io Size target, io Scalar s, io Scalar t, io Scalar r, io Scalar q ) = 'glMultiTexCoord4f_wrapper';function glMultiTexCoord4fv( io Size target, io Scalar v[4] ) = 'glMultiTexCoord4fv_wrapper';function glMultiTexCoord4i( io Size target, io Integer s, io Integer t, io Integer r, io Integer q ) = 'glMultiTexCoord4i_wrapper';function glMultiTexCoord4iv( io Size target, io Integer v[4] ) = 'glMultiTexCoord4iv_wrapper';function glMultiTexCoord4s( io Size target, io Integer s, io Integer t, io Integer r, io Integer q ) = 'glMultiTexCoord4s_wrapper';function glMultiTexCoord4sv( io Size target, io Integer v[4] ) = 'glMultiTexCoord4sv_wrapper';function glSampleCoverage( io Scalar value, io Boolean invert ) = 'glSampleCoverage_wrapper';function glBlendColor( io Scalar red, io Scalar green, io Scalar blue, io Scalar alpha ) = 'glBlendColor_wrapper';function glBlendEquation( io Size mode ) = 'glBlendEquation_wrapper';function glBlendFuncSeparate( io Size sfactorRGB, io Size dfactorRGB, io Size sfactorAlpha, io Size dfactorAlpha ) = 'glBlendFuncSeparate_wrapper';function glFogCoordPointer( io Size type, io Size stride, io Data pointer ) = 'glFogCoordPointer_wrapper';function glFogCoordd( io Scalar coord ) = 'glFogCoordd_wrapper';function glFogCoorddv( io Scalar coord[] ) = 'glFogCoorddv_wrapper';function glFogCoordf( io Scalar coord ) = 'glFogCoordf_wrapper';function glFogCoordfv( io Scalar coord[] ) = 'glFogCoordfv_wrapper';function glMultiDrawArrays( io Size mode, io Integer first[], io Size count[], io Size primcount ) = 'glMultiDrawArrays_wrapper';function glPointParameterf( io Size pname, io Scalar param ) = 'glPointParameterf_wrapper';function glPointParameterfv( io Size pname, io Scalar params[] ) = 'glPointParameterfv_wrapper';function glPointParameteri( io Size pname, io Integer param ) = 'glPointParameteri_wrapper';function glPointParameteriv( io Size pname, io Integer params[] ) = 'glPointParameteriv_wrapper';function glSecondaryColor3b( io Byte red, io Byte green, io Byte blue ) = 'glSecondaryColor3b_wrapper';function glSecondaryColor3bv( io Byte v[3] ) = 'glSecondaryColor3bv_wrapper';function glSecondaryColor3d( io Scalar red, io Scalar green, io Scalar blue ) = 'glSecondaryColor3d_wrapper';function glSecondaryColor3dv( io Scalar v[3] ) = 'glSecondaryColor3dv_wrapper';function glSecondaryColor3f( io Scalar red, io Scalar green, io Scalar blue ) = 'glSecondaryColor3f_wrapper';function glSecondaryColor3fv( io Scalar v[3] ) = 'glSecondaryColor3fv_wrapper';function glSecondaryColor3i( io Integer red, io Integer green, io Integer blue ) = 'glSecondaryColor3i_wrapper';function glSecondaryColor3iv( io Integer v[3] ) = 'glSecondaryColor3iv_wrapper';function glSecondaryColor3s( io Integer red, io Integer green, io Integer blue ) = 'glSecondaryColor3s_wrapper';function glSecondaryColor3sv( io Integer v[3] ) = 'glSecondaryColor3sv_wrapper';function glSecondaryColor3ub( io Size red, io Size green, io Size blue ) = 'glSecondaryColor3ub_wrapper';function glSecondaryColor3ubv( io Size v[3] ) = 'glSecondaryColor3ubv_wrapper';function glSecondaryColor3ui( io Size red, io Size green, io Size blue ) = 'glSecondaryColor3ui_wrapper';function glSecondaryColor3uiv( io Size v[3] ) = 'glSecondaryColor3uiv_wrapper';function glSecondaryColor3us( io Integer red, io Integer green, io Integer blue ) = 'glSecondaryColor3us_wrapper';function glSecondaryColor3usv( io Integer v[3] ) = 'glSecondaryColor3usv_wrapper';function glSecondaryColorPointer( io Integer size, io Size type, io Size stride, io Data pointer ) = 'glSecondaryColorPointer_wrapper';function glWindowPos2d( io Scalar x, io Scalar y ) = 'glWindowPos2d_wrapper';function glWindowPos2dv( io Scalar p[2] ) = 'glWindowPos2dv_wrapper';function glWindowPos2f( io Scalar x, io Scalar y ) = 'glWindowPos2f_wrapper';function glWindowPos2fv( io Scalar p[2] ) = 'glWindowPos2fv_wrapper';function glWindowPos2i( io Integer x, io Integer y ) = 'glWindowPos2i_wrapper';function glWindowPos2iv( io Integer p[2] ) = 'glWindowPos2iv_wrapper';function glWindowPos2s( io Integer x, io Integer y ) = 'glWindowPos2s_wrapper';function glWindowPos2sv( io Integer p[2] ) = 'glWindowPos2sv_wrapper';function glWindowPos3d( io Scalar x, io Scalar y, io Scalar z ) = 'glWindowPos3d_wrapper';function glWindowPos3dv( io Scalar p[3] ) = 'glWindowPos3dv_wrapper';function glWindowPos3f( io Scalar x, io Scalar y, io Scalar z ) = 'glWindowPos3f_wrapper';function glWindowPos3fv( io Scalar p[3] ) = 'glWindowPos3fv_wrapper';function glWindowPos3i( io Integer x, io Integer y, io Integer z ) = 'glWindowPos3i_wrapper';function glWindowPos3iv( io Integer p[3] ) = 'glWindowPos3iv_wrapper';function glWindowPos3s( io Integer x, io Integer y, io Integer z ) = 'glWindowPos3s_wrapper';function glWindowPos3sv( io Integer p[3] ) = 'glWindowPos3sv_wrapper';function glBeginQuery( io Size target, io Size id ) = 'glBeginQuery_wrapper';function glBindBuffer( io Size target, io Size buffer ) = 'glBindBuffer_wrapper';function glBufferData( io Size target, io Size size, io Data data, io Size usage ) = 'glBufferData_wrapper';function glBufferSubData( io Size target, io Integer offset, io Size size, io Data data ) = 'glBufferSubData_wrapper';function glDeleteBuffers( io Size n, io Size buffers[] ) = 'glDeleteBuffers_wrapper';function glDeleteQueries( io Size n, io Size ids[] ) = 'glDeleteQueries_wrapper';function glEndQuery( io Size target ) = 'glEndQuery_wrapper';function glGenBuffers( io Size n, io Size buffers[] ) = 'glGenBuffers_wrapper';function glGenQueries( io Size n, io Size ids[] ) = 'glGenQueries_wrapper';function glGetBufferParameteriv( io Size target, io Size pname, io Integer params[] ) = 'glGetBufferParameteriv_wrapper';function glGetBufferSubData( io Size target, io Integer offset, io Size size, io Data data ) = 'glGetBufferSubData_wrapper';function glGetQueryObjectiv( io Size id, io Size pname, io Integer params[] ) = 'glGetQueryObjectiv_wrapper';function glGetQueryObjectuiv( io Size id, io Size pname, io Size params[] ) = 'glGetQueryObjectuiv_wrapper';function glGetQueryiv( io Size target, io Size pname, io Integer params[] ) = 'glGetQueryiv_wrapper';function Boolean glIsBuffer( io Size buffer ) = 'glIsBuffer_wrapper';function Boolean glIsQuery( io Size id ) = 'glIsQuery_wrapper';function glMapBuffer( io Size target, io Size access ) = 'glMapBuffer_wrapper';function Boolean glUnmapBuffer( io Size target ) = 'glUnmapBuffer_wrapper';function glAttachShader( io Size program, io Size shader ) = 'glAttachShader_wrapper';function glBindAttribLocation( io Size program, io Size index, io String name ) = 'glBindAttribLocation_wrapper';function glBlendEquationSeparate( io Size var0, io Size var1 ) = 'glBlendEquationSeparate_wrapper';function glCompileShader( io Size shader ) = 'glCompileShader_wrapper';function Size glCreateProgram(  ) = 'glCreateProgram_wrapper';function Size glCreateShader( io Size type ) = 'glCreateShader_wrapper';function glDeleteProgram( io Size program ) = 'glDeleteProgram_wrapper';function glDeleteShader( io Size shader ) = 'glDeleteShader_wrapper';function glDetachShader( io Size program, io Size shader ) = 'glDetachShader_wrapper';function glDisableVertexAttribArray( io Size var0 ) = 'glDisableVertexAttribArray_wrapper';function glDrawBuffers( io Size n, io Size bufs[] ) = 'glDrawBuffers_wrapper';function glEnableVertexAttribArray( io Size var0 ) = 'glEnableVertexAttribArray_wrapper';function glGetActiveAttrib( io Size program, io Size index, io Size maxLength, io Size length[], io Integer size[], io Size type[], io String name ) = 'glGetActiveAttrib_wrapper';function glGetActiveUniform( io Size program, io Size index, io Size maxLength, io Size length[], io Integer size[], io Size type[], io String name ) = 'glGetActiveUniform_wrapper';function glGetAttachedShaders( io Size program, io Size maxCount, io Size count[], io Size shaders[] ) = 'glGetAttachedShaders_wrapper';function Integer glGetAttribLocation( io Size program, io String name ) = 'glGetAttribLocation_wrapper';function glGetProgramInfoLog( io Size program, io Size bufSize, io Size length[], io String infoLog ) = 'glGetProgramInfoLog_wrapper';function glGetProgramiv( io Size program, io Size pname, io Integer param[] ) = 'glGetProgramiv_wrapper';function glGetShaderInfoLog( io Size shader, io Size bufSize, io Size length[], io String infoLog ) = 'glGetShaderInfoLog_wrapper';function glGetShaderSource( io Integer obj, io Size maxLength, io Size length[], io String source ) = 'glGetShaderSource_wrapper';function glGetShaderiv( io Size shader, io Size pname, io Integer param[] ) = 'glGetShaderiv_wrapper';function Integer glGetUniformLocation( io Size program, io String name ) = 'glGetUniformLocation_wrapper';function glGetUniformfv( io Size program, io Integer location, io Scalar params[] ) = 'glGetUniformfv_wrapper';function glGetUniformiv( io Size program, io Integer location, io Integer params[] ) = 'glGetUniformiv_wrapper';function glGetVertexAttribPointerv( io Size var0, io Size var1, io Data var2 ) = 'glGetVertexAttribPointerv_wrapper';function glGetVertexAttribdv( io Size var0, io Size var1, io Scalar var2[] ) = 'glGetVertexAttribdv_wrapper';function glGetVertexAttribfv( io Size var0, io Size var1, io Scalar var2[] ) = 'glGetVertexAttribfv_wrapper';function glGetVertexAttribiv( io Size var0, io Size var1, io Integer var2[] ) = 'glGetVertexAttribiv_wrapper';function Boolean glIsProgram( io Size program ) = 'glIsProgram_wrapper';function Boolean glIsShader( io Size shader ) = 'glIsShader_wrapper';function glLinkProgram( io Size program ) = 'glLinkProgram_wrapper';function glShaderSource( io Size shader, io Size count, io String strings[], io Integer lengths[] ) = 'glShaderSource_wrapper';function glStencilFuncSeparate( io Size frontfunc, io Size backfunc, io Integer ref, io Size mask ) = 'glStencilFuncSeparate_wrapper';function glStencilMaskSeparate( io Size var0, io Size var1 ) = 'glStencilMaskSeparate_wrapper';function glStencilOpSeparate( io Size face, io Size sfail, io Size dpfail, io Size dppass ) = 'glStencilOpSeparate_wrapper';function glUniform1f( io Integer location, io Scalar v0 ) = 'glUniform1f_wrapper';function glUniform1fv( io Integer location, io Size count, io Scalar value[1] ) = 'glUniform1fv_wrapper';function glUniform1i( io Integer location, io Integer v0 ) = 'glUniform1i_wrapper';function glUniform1iv( io Integer location, io Size count, io Integer value[1] ) = 'glUniform1iv_wrapper';function glUniform2f( io Integer location, io Scalar v0, io Scalar v1 ) = 'glUniform2f_wrapper';function glUniform2fv( io Integer location, io Size count, io Scalar value[2] ) = 'glUniform2fv_wrapper';function glUniform2i( io Integer location, io Integer v0, io Integer v1 ) = 'glUniform2i_wrapper';function glUniform2iv( io Integer location, io Size count, io Integer value[2] ) = 'glUniform2iv_wrapper';function glUniform3f( io Integer location, io Scalar v0, io Scalar v1, io Scalar v2 ) = 'glUniform3f_wrapper';function glUniform3fv( io Integer location, io Size count, io Scalar value[3] ) = 'glUniform3fv_wrapper';function glUniform3i( io Integer location, io Integer v0, io Integer v1, io Integer v2 ) = 'glUniform3i_wrapper';function glUniform3iv( io Integer location, io Size count, io Integer value[3] ) = 'glUniform3iv_wrapper';function glUniform4f( io Integer location, io Scalar v0, io Scalar v1, io Scalar v2, io Scalar v3 ) = 'glUniform4f_wrapper';function glUniform4fv( io Integer location, io Size count, io Scalar value[4] ) = 'glUniform4fv_wrapper';function glUniform4i( io Integer location, io Integer v0, io Integer v1, io Integer v2, io Integer v3 ) = 'glUniform4i_wrapper';function glUniform4iv( io Integer location, io Size count, io Integer value[4] ) = 'glUniform4iv_wrapper';function glUniformMatrix2fv( io Integer location, io Size count, io Boolean transpose, io Scalar value[2] ) = 'glUniformMatrix2fv_wrapper';function glUniformMatrix3fv( io Integer location, io Size count, io Boolean transpose, io Scalar value[3] ) = 'glUniformMatrix3fv_wrapper';function glUniformMatrix4fv( io Integer location, io Size count, io Boolean transpose, io Scalar value[4] ) = 'glUniformMatrix4fv_wrapper';function glUseProgram( io Size program ) = 'glUseProgram_wrapper';function glValidateProgram( io Size program ) = 'glValidateProgram_wrapper';function glVertexAttrib1d( io Size index, io Scalar x ) = 'glVertexAttrib1d_wrapper';function glVertexAttrib1dv( io Size index, io Scalar v[1] ) = 'glVertexAttrib1dv_wrapper';function glVertexAttrib1f( io Size index, io Scalar x ) = 'glVertexAttrib1f_wrapper';function glVertexAttrib1fv( io Size index, io Scalar v[1] ) = 'glVertexAttrib1fv_wrapper';function glVertexAttrib1s( io Size index, io Integer x ) = 'glVertexAttrib1s_wrapper';function glVertexAttrib1sv( io Size index, io Integer v[1] ) = 'glVertexAttrib1sv_wrapper';function glVertexAttrib2d( io Size index, io Scalar x, io Scalar y ) = 'glVertexAttrib2d_wrapper';function glVertexAttrib2dv( io Size index, io Scalar v[2] ) = 'glVertexAttrib2dv_wrapper';function glVertexAttrib2f( io Size index, io Scalar x, io Scalar y ) = 'glVertexAttrib2f_wrapper';function glVertexAttrib2fv( io Size index, io Scalar v[2] ) = 'glVertexAttrib2fv_wrapper';function glVertexAttrib2s( io Size index, io Integer x, io Integer y ) = 'glVertexAttrib2s_wrapper';function glVertexAttrib2sv( io Size index, io Integer v[2] ) = 'glVertexAttrib2sv_wrapper';function glVertexAttrib3d( io Size index, io Scalar x, io Scalar y, io Scalar z ) = 'glVertexAttrib3d_wrapper';function glVertexAttrib3dv( io Size index, io Scalar v[3] ) = 'glVertexAttrib3dv_wrapper';function glVertexAttrib3f( io Size index, io Scalar x, io Scalar y, io Scalar z ) = 'glVertexAttrib3f_wrapper';function glVertexAttrib3fv( io Size index, io Scalar v[3] ) = 'glVertexAttrib3fv_wrapper';function glVertexAttrib3s( io Size index, io Integer x, io Integer y, io Integer z ) = 'glVertexAttrib3s_wrapper';function glVertexAttrib3sv( io Size index, io Integer v[3] ) = 'glVertexAttrib3sv_wrapper';function glVertexAttrib4Nbv( io Size index, io Byte v[4] ) = 'glVertexAttrib4Nbv_wrapper';function glVertexAttrib4Niv( io Size index, io Integer v[4] ) = 'glVertexAttrib4Niv_wrapper';function glVertexAttrib4Nsv( io Size index, io Integer v[4] ) = 'glVertexAttrib4Nsv_wrapper';function glVertexAttrib4Nub( io Size index, io Size x, io Size y, io Size z, io Size w ) = 'glVertexAttrib4Nub_wrapper';function glVertexAttrib4Nubv( io Size index, io Size v[4] ) = 'glVertexAttrib4Nubv_wrapper';function glVertexAttrib4Nuiv( io Size index, io Size v[4] ) = 'glVertexAttrib4Nuiv_wrapper';function glVertexAttrib4Nusv( io Size index, io Integer v[4] ) = 'glVertexAttrib4Nusv_wrapper';function glVertexAttrib4bv( io Size index, io Byte v[4] ) = 'glVertexAttrib4bv_wrapper';function glVertexAttrib4d( io Size index, io Scalar x, io Scalar y, io Scalar z, io Scalar w ) = 'glVertexAttrib4d_wrapper';function glVertexAttrib4dv( io Size index, io Scalar v[4] ) = 'glVertexAttrib4dv_wrapper';function glVertexAttrib4f( io Size index, io Scalar x, io Scalar y, io Scalar z, io Scalar w ) = 'glVertexAttrib4f_wrapper';function glVertexAttrib4fv( io Size index, io Scalar v[4] ) = 'glVertexAttrib4fv_wrapper';function glVertexAttrib4iv( io Size index, io Integer v[4] ) = 'glVertexAttrib4iv_wrapper';function glVertexAttrib4s( io Size index, io Integer x, io Integer y, io Integer z, io Integer w ) = 'glVertexAttrib4s_wrapper';function glVertexAttrib4sv( io Size index, io Integer v[4] ) = 'glVertexAttrib4sv_wrapper';function glVertexAttrib4ubv( io Size index, io Size v[4] ) = 'glVertexAttrib4ubv_wrapper';function glVertexAttrib4uiv( io Size index, io Size v[4] ) = 'glVertexAttrib4uiv_wrapper';function glVertexAttrib4usv( io Size index, io Integer v[4] ) = 'glVertexAttrib4usv_wrapper';function glVertexAttribPointer( io Size index, io Integer size, io Size type, io Boolean normalized, io Size stride, io Data pointer ) = 'glVertexAttribPointer_wrapper';function glUniformMatrix2x3fv( io Integer location, io Size count, io Boolean transpose, io Scalar value[3] ) = 'glUniformMatrix2x3fv_wrapper';function glUniformMatrix2x4fv( io Integer location, io Size count, io Boolean transpose, io Scalar value[4] ) = 'glUniformMatrix2x4fv_wrapper';function glUniformMatrix3x2fv( io Integer location, io Size count, io Boolean transpose, io Scalar value[2] ) = 'glUniformMatrix3x2fv_wrapper';function glUniformMatrix3x4fv( io Integer location, io Size count, io Boolean transpose, io Scalar value[4] ) = 'glUniformMatrix3x4fv_wrapper';function glUniformMatrix4x2fv( io Integer location, io Size count, io Boolean transpose, io Scalar value[2] ) = 'glUniformMatrix4x2fv_wrapper';function glUniformMatrix4x3fv( io Integer location, io Size count, io Boolean transpose, io Scalar value[3] ) = 'glUniformMatrix4x3fv_wrapper';function glBeginConditionalRender( io Size var0, io Size var1 ) = 'glBeginConditionalRender_wrapper';function glBeginTransformFeedback( io Size var0 ) = 'glBeginTransformFeedback_wrapper';function glBindFragDataLocation( io Size var0, io Size var1, io String var2 ) = 'glBindFragDataLocation_wrapper';function glClampColor( io Size var0, io Size var1 ) = 'glClampColor_wrapper';function glClearBufferfi( io Size var0, io Integer var1, io Scalar var2, io Integer var3 ) = 'glClearBufferfi_wrapper';function glClearBufferfv( io Size var0, io Integer var1, io Scalar var2[] ) = 'glClearBufferfv_wrapper';function glClearBufferiv( io Size var0, io Integer var1, io Integer var2[] ) = 'glClearBufferiv_wrapper';function glClearBufferuiv( io Size var0, io Integer var1, io Size var2[] ) = 'glClearBufferuiv_wrapper';function glColorMaski( io Size var0, io Boolean var1, io Boolean var2, io Boolean var3, io Boolean var4 ) = 'glColorMaski_wrapper';function glDisablei( io Size var0, io Size var1 ) = 'glDisablei_wrapper';function glEnablei( io Size var0, io Size var1 ) = 'glEnablei_wrapper';function glEndConditionalRender(  ) = 'glEndConditionalRender_wrapper';function glEndTransformFeedback(  ) = 'glEndTransformFeedback_wrapper';function glGetBooleani_v( io Size var0, io Size var1, io Boolean var2[] ) = 'glGetBooleani_v_wrapper';function Integer glGetFragDataLocation( io Size var0, io String var1 ) = 'glGetFragDataLocation_wrapper';function glGetTexParameterIiv( io Size var0, io Size var1, io Integer var2[] ) = 'glGetTexParameterIiv_wrapper';function glGetTexParameterIuiv( io Size var0, io Size var1, io Size var2[] ) = 'glGetTexParameterIuiv_wrapper';function glGetTransformFeedbackVarying( io Size var0, io Size var1, io Integer var2[] ) = 'glGetTransformFeedbackVarying_wrapper';function glGetUniformuiv( io Size var0, io Integer var1, io Size var2[] ) = 'glGetUniformuiv_wrapper';function glGetVertexAttribIiv( io Size var0, io Size var1, io Integer var2[] ) = 'glGetVertexAttribIiv_wrapper';function glGetVertexAttribIuiv( io Size var0, io Size var1, io Size var2[] ) = 'glGetVertexAttribIuiv_wrapper';function Boolean glIsEnabledi( io Size var0, io Size var1 ) = 'glIsEnabledi_wrapper';function glTexParameterIiv( io Size var0, io Size var1, io Integer var2[] ) = 'glTexParameterIiv_wrapper';function glTexParameterIuiv( io Size var0, io Size var1, io Size var2[] ) = 'glTexParameterIuiv_wrapper';function glTransformFeedbackVaryings( io Size var0, io Size var1, io String var2[], io Size var3 ) = 'glTransformFeedbackVaryings_wrapper';function glUniform1ui( io Integer var0, io Size var1 ) = 'glUniform1ui_wrapper';function glUniform1uiv( io Integer var0, io Size var1, io Size var2[1] ) = 'glUniform1uiv_wrapper';function glUniform2ui( io Integer var0, io Size var1, io Size var2 ) = 'glUniform2ui_wrapper';function glUniform2uiv( io Integer var0, io Size var1, io Size var2[2] ) = 'glUniform2uiv_wrapper';function glUniform3ui( io Integer var0, io Size var1, io Size var2, io Size var3 ) = 'glUniform3ui_wrapper';function glUniform3uiv( io Integer var0, io Size var1, io Size var2[3] ) = 'glUniform3uiv_wrapper';function glUniform4ui( io Integer var0, io Size var1, io Size var2, io Size var3, io Size var4 ) = 'glUniform4ui_wrapper';function glUniform4uiv( io Integer var0, io Size var1, io Size var2[4] ) = 'glUniform4uiv_wrapper';function glVertexAttribI1i( io Size var0, io Integer var1 ) = 'glVertexAttribI1i_wrapper';function glVertexAttribI1iv( io Size var0, io Integer var1[1] ) = 'glVertexAttribI1iv_wrapper';function glVertexAttribI1ui( io Size var0, io Size var1 ) = 'glVertexAttribI1ui_wrapper';function glVertexAttribI1uiv( io Size var0, io Size var1[1] ) = 'glVertexAttribI1uiv_wrapper';function glVertexAttribI2i( io Size var0, io Integer var1, io Integer var2 ) = 'glVertexAttribI2i_wrapper';function glVertexAttribI2iv( io Size var0, io Integer var1[2] ) = 'glVertexAttribI2iv_wrapper';function glVertexAttribI2ui( io Size var0, io Size var1, io Size var2 ) = 'glVertexAttribI2ui_wrapper';function glVertexAttribI2uiv( io Size var0, io Size var1[2] ) = 'glVertexAttribI2uiv_wrapper';function glVertexAttribI3i( io Size var0, io Integer var1, io Integer var2, io Integer var3 ) = 'glVertexAttribI3i_wrapper';function glVertexAttribI3iv( io Size var0, io Integer var1[3] ) = 'glVertexAttribI3iv_wrapper';function glVertexAttribI3ui( io Size var0, io Size var1, io Size var2, io Size var3 ) = 'glVertexAttribI3ui_wrapper';function glVertexAttribI3uiv( io Size var0, io Size var1[3] ) = 'glVertexAttribI3uiv_wrapper';function glVertexAttribI4bv( io Size var0, io Byte var1[4] ) = 'glVertexAttribI4bv_wrapper';function glVertexAttribI4i( io Size var0, io Integer var1, io Integer var2, io Integer var3, io Integer var4 ) = 'glVertexAttribI4i_wrapper';function glVertexAttribI4iv( io Size var0, io Integer var1[4] ) = 'glVertexAttribI4iv_wrapper';function glVertexAttribI4sv( io Size var0, io Integer var1[4] ) = 'glVertexAttribI4sv_wrapper';function glVertexAttribI4ubv( io Size var0, io Size var1[4] ) = 'glVertexAttribI4ubv_wrapper';function glVertexAttribI4ui( io Size var0, io Size var1, io Size var2, io Size var3, io Size var4 ) = 'glVertexAttribI4ui_wrapper';function glVertexAttribI4uiv( io Size var0, io Size var1[4] ) = 'glVertexAttribI4uiv_wrapper';function glVertexAttribI4usv( io Size var0, io Integer var1[4] ) = 'glVertexAttribI4usv_wrapper';function glVertexAttribIPointer( io Size var0, io Integer var1, io Size var2, io Size var3, io Data var4 ) = 'glVertexAttribIPointer_wrapper';function glDrawArraysInstanced( io Size var0, io Integer var1, io Size var2, io Size var3 ) = 'glDrawArraysInstanced_wrapper';function glDrawElementsInstanced( io Size var0, io Size var1, io Size var2, io Data var3, io Size var4 ) = 'glDrawElementsInstanced_wrapper';function glPrimitiveRestartIndex( io Size var0 ) = 'glPrimitiveRestartIndex_wrapper';function glTexBuffer( io Size var0, io Size var1, io Size var2 ) = 'glTexBuffer_wrapper';function glFramebufferTexture( io Size var0, io Size var1, io Size var2, io Integer var3 ) = 'glFramebufferTexture_wrapper';function glTbufferMask3DFX( io Size mask ) = 'glTbufferMask3DFX_wrapper';function glCopyBufferSubData( io Size readtarget, io Size writetarget, io Integer readoffset, io Integer writeoffset, io Size size ) = 'glCopyBufferSubData_wrapper';function glDrawElementsBaseVertex( io Size mode, io Size count, io Size type, io Data indices, io Integer basevertex ) = 'glDrawElementsBaseVertex_wrapper';function glDrawElementsInstancedBaseVertex( io Size mode, io Size count, io Size type, io Data indices, io Size primcount, io Integer basevertex ) = 'glDrawElementsInstancedBaseVertex_wrapper';function glDrawRangeElementsBaseVertex( io Size mode, io Size start, io Size end, io Size count, io Size type, io Data indices, io Integer basevertex ) = 'glDrawRangeElementsBaseVertex_wrapper';function glBindFramebuffer( io Size target, io Size framebuffer ) = 'glBindFramebuffer_wrapper';function glBindRenderbuffer( io Size target, io Size renderbuffer ) = 'glBindRenderbuffer_wrapper';function glBlitFramebuffer( io Integer srcX0, io Integer srcY0, io Integer srcX1, io Integer srcY1, io Integer dstX0, io Integer dstY0, io Integer dstX1, io Integer dstY1, io Size mask, io Size filter ) = 'glBlitFramebuffer_wrapper';function Size glCheckFramebufferStatus( io Size target ) = 'glCheckFramebufferStatus_wrapper';function glDeleteFramebuffers( io Size n, io Size framebuffers[] ) = 'glDeleteFramebuffers_wrapper';function glDeleteRenderbuffers( io Size n, io Size renderbuffers[] ) = 'glDeleteRenderbuffers_wrapper';function glFramebufferRenderbuffer( io Size target, io Size attachment, io Size renderbuffertarget, io Size renderbuffer ) = 'glFramebufferRenderbuffer_wrapper';function glFramebufferTexture1D( io Size target, io Size attachment, io Size textarget, io Size texture, io Integer level ) = 'glFramebufferTexture1D_wrapper';function glFramebufferTexture2D( io Size target, io Size attachment, io Size textarget, io Size texture, io Integer level ) = 'glFramebufferTexture2D_wrapper';function glFramebufferTexture3D( io Size target, io Size attachment, io Size textarget, io Size texture, io Integer level, io Integer layer ) = 'glFramebufferTexture3D_wrapper';function glFramebufferTextureLayer( io Size target, io Size attachment, io Size texture, io Integer level, io Integer layer ) = 'glFramebufferTextureLayer_wrapper';function glGenFramebuffers( io Size n, io Size framebuffers[] ) = 'glGenFramebuffers_wrapper';function glGenRenderbuffers( io Size n, io Size renderbuffers[] ) = 'glGenRenderbuffers_wrapper';function glGenerateMipmap( io Size target ) = 'glGenerateMipmap_wrapper';function glGetFramebufferAttachmentParameteriv( io Size target, io Size attachment, io Size pname, io Integer params[] ) = 'glGetFramebufferAttachmentParameteriv_wrapper';function glGetRenderbufferParameteriv( io Size target, io Size pname, io Integer params[] ) = 'glGetRenderbufferParameteriv_wrapper';function Boolean glIsFramebuffer( io Size framebuffer ) = 'glIsFramebuffer_wrapper';function Boolean glIsRenderbuffer( io Size renderbuffer ) = 'glIsRenderbuffer_wrapper';function glRenderbufferStorage( io Size target, io Size internalformat, io Size width, io Size height ) = 'glRenderbufferStorage_wrapper';function glRenderbufferStorageMultisample( io Size target, io Size samples, io Size internalformat, io Size width, io Size height ) = 'glRenderbufferStorageMultisample_wrapper';function glColorSubTable( io Size target, io Size start, io Size count, io Size format, io Size type, io Data data ) = 'glColorSubTable_wrapper';function glColorTable( io Size target, io Size internalformat, io Size width, io Size format, io Size type, io Data table ) = 'glColorTable_wrapper';function glColorTableParameterfv( io Size target, io Size pname, io Scalar params[] ) = 'glColorTableParameterfv_wrapper';function glColorTableParameteriv( io Size target, io Size pname, io Integer params[] ) = 'glColorTableParameteriv_wrapper';function glConvolutionFilter1D( io Size target, io Size internalformat, io Size width, io Size format, io Size type, io Data image ) = 'glConvolutionFilter1D_wrapper';function glConvolutionFilter2D( io Size target, io Size internalformat, io Size width, io Size height, io Size format, io Size type, io Data image ) = 'glConvolutionFilter2D_wrapper';function glConvolutionParameterf( io Size target, io Size pname, io Scalar params ) = 'glConvolutionParameterf_wrapper';function glConvolutionParameterfv( io Size target, io Size pname, io Scalar params[] ) = 'glConvolutionParameterfv_wrapper';function glConvolutionParameteri( io Size target, io Size pname, io Integer params ) = 'glConvolutionParameteri_wrapper';function glConvolutionParameteriv( io Size target, io Size pname, io Integer params[] ) = 'glConvolutionParameteriv_wrapper';function glCopyColorSubTable( io Size target, io Size start, io Integer x, io Integer y, io Size width ) = 'glCopyColorSubTable_wrapper';function glCopyColorTable( io Size target, io Size internalformat, io Integer x, io Integer y, io Size width ) = 'glCopyColorTable_wrapper';function glCopyConvolutionFilter1D( io Size target, io Size internalformat, io Integer x, io Integer y, io Size width ) = 'glCopyConvolutionFilter1D_wrapper';function glCopyConvolutionFilter2D( io Size target, io Size internalformat, io Integer x, io Integer y, io Size width, io Size height ) = 'glCopyConvolutionFilter2D_wrapper';function glGetColorTable( io Size target, io Size format, io Size type, io Data table ) = 'glGetColorTable_wrapper';function glGetColorTableParameterfv( io Size target, io Size pname, io Scalar params[] ) = 'glGetColorTableParameterfv_wrapper';function glGetColorTableParameteriv( io Size target, io Size pname, io Integer params[] ) = 'glGetColorTableParameteriv_wrapper';function glGetConvolutionFilter( io Size target, io Size format, io Size type, io Data image ) = 'glGetConvolutionFilter_wrapper';function glGetConvolutionParameterfv( io Size target, io Size pname, io Scalar params[] ) = 'glGetConvolutionParameterfv_wrapper';function glGetConvolutionParameteriv( io Size target, io Size pname, io Integer params[] ) = 'glGetConvolutionParameteriv_wrapper';function glGetHistogram( io Size target, io Boolean reset, io Size format, io Size type, io Data values ) = 'glGetHistogram_wrapper';function glGetHistogramParameterfv( io Size target, io Size pname, io Scalar params[] ) = 'glGetHistogramParameterfv_wrapper';function glGetHistogramParameteriv( io Size target, io Size pname, io Integer params[] ) = 'glGetHistogramParameteriv_wrapper';function glGetMinmax( io Size target, io Boolean reset, io Size format, io Size types, io Data values ) = 'glGetMinmax_wrapper';function glGetMinmaxParameterfv( io Size target, io Size pname, io Scalar params[] ) = 'glGetMinmaxParameterfv_wrapper';function glGetMinmaxParameteriv( io Size target, io Size pname, io Integer params[] ) = 'glGetMinmaxParameteriv_wrapper';function glGetSeparableFilter( io Size target, io Size format, io Size type, io Data row, io Data column, io Data span ) = 'glGetSeparableFilter_wrapper';function glHistogram( io Size target, io Size width, io Size internalformat, io Boolean sink ) = 'glHistogram_wrapper';function glMinmax( io Size target, io Size internalformat, io Boolean sink ) = 'glMinmax_wrapper';function glResetHistogram( io Size target ) = 'glResetHistogram_wrapper';function glResetMinmax( io Size target ) = 'glResetMinmax_wrapper';function glSeparableFilter2D( io Size target, io Size internalformat, io Size width, io Size height, io Size format, io Size type, io Data row, io Data column ) = 'glSeparableFilter2D_wrapper';function glFlushMappedBufferRange( io Size target, io Integer offset, io Size length ) = 'glFlushMappedBufferRange_wrapper';function glMapBufferRange( io Size target, io Integer offset, io Size length, io Size access ) = 'glMapBufferRange_wrapper';function glProvokingVertex( io Size mode ) = 'glProvokingVertex_wrapper';function glGetMultisamplefv( io Size pname, io Size index, io Scalar val[] ) = 'glGetMultisamplefv_wrapper';function glSampleMaski( io Size index, io Size mask ) = 'glSampleMaski_wrapper';function glTexImage2DMultisample( io Size target, io Size samples, io Integer internalformat, io Size width, io Size height, io Boolean fixedsamplelocations ) = 'glTexImage2DMultisample_wrapper';function glTexImage3DMultisample( io Size target, io Size samples, io Integer internalformat, io Size width, io Size height, io Size depth, io Boolean fixedsamplelocations ) = 'glTexImage3DMultisample_wrapper';function glBindBufferBase( io Size target, io Size index, io Size buffer ) = 'glBindBufferBase_wrapper';function glBindBufferRange( io Size target, io Size index, io Size buffer, io Integer offset, io Size size ) = 'glBindBufferRange_wrapper';function glGetActiveUniformBlockName( io Size program, io Size uniformBlockIndex, io Size bufSize, io Size length[], io String uniformBlockName ) = 'glGetActiveUniformBlockName_wrapper';function glGetActiveUniformBlockiv( io Size program, io Size uniformBlockIndex, io Size pname, io Integer params[] ) = 'glGetActiveUniformBlockiv_wrapper';function glGetActiveUniformName( io Size program, io Size uniformIndex, io Size bufSize, io Size length[], io String uniformName ) = 'glGetActiveUniformName_wrapper';function glGetActiveUniformsiv( io Size program, io Size uniformCount, io Size uniformIndices[], io Size pname, io Integer params[] ) = 'glGetActiveUniformsiv_wrapper';function glGetIntegeri_v( io Size target, io Size index, io Integer data[] ) = 'glGetIntegeri_v_wrapper';function Size glGetUniformBlockIndex( io Size program, io String uniformBlockName ) = 'glGetUniformBlockIndex_wrapper';function glGetUniformIndices( io Size program, io Size uniformCount, io String uniformNames[], io Size uniformIndices[] ) = 'glGetUniformIndices_wrapper';function glUniformBlockBinding( io Size program, io Size uniformBlockIndex, io Size uniformBlockBinding ) = 'glUniformBlockBinding_wrapper';function glBindVertexArray( io Size array ) = 'glBindVertexArray_wrapper';function glDeleteVertexArrays( io Size n, io Size arrays[] ) = 'glDeleteVertexArrays_wrapper';function glGenVertexArrays( io Size n, io Size arrays[] ) = 'glGenVertexArrays_wrapper';function Boolean glIsVertexArray( io Size array ) = 'glIsVertexArray_wrapper';function Integer glGetUniformBufferSizeEXT( io Size program, io Integer location ) = 'glGetUniformBufferSizeEXT_wrapper';function Integer glGetUniformOffsetEXT( io Size program, io Integer location ) = 'glGetUniformOffsetEXT_wrapper';function glUniformBufferEXT( io Size program, io Integer location, io Size buffer ) = 'glUniformBufferEXT_wrapper';function glBlendColorEXT( io Scalar red, io Scalar green, io Scalar blue, io Scalar alpha ) = 'glBlendColorEXT_wrapper';function glBlendEquationSeparateEXT( io Size modeRGB, io Size modeAlpha ) = 'glBlendEquationSeparateEXT_wrapper';function glBlendFuncSeparateEXT( io Size sfactorRGB, io Size dfactorRGB, io Size sfactorAlpha, io Size dfactorAlpha ) = 'glBlendFuncSeparateEXT_wrapper';function glBlendEquationEXT( io Size mode ) = 'glBlendEquationEXT_wrapper';function glColorSubTableEXT( io Size target, io Size start, io Size count, io Size format, io Size type, io Data data ) = 'glColorSubTableEXT_wrapper';function glCopyColorSubTableEXT( io Size target, io Size start, io Integer x, io Integer y, io Size width ) = 'glCopyColorSubTableEXT_wrapper';function glLockArraysEXT( io Integer first, io Size count ) = 'glLockArraysEXT_wrapper';function glUnlockArraysEXT(  ) = 'glUnlockArraysEXT_wrapper';function glConvolutionFilter1DEXT( io Size target, io Size internalformat, io Size width, io Size format, io Size type, io Data image ) = 'glConvolutionFilter1DEXT_wrapper';function glConvolutionFilter2DEXT( io Size target, io Size internalformat, io Size width, io Size height, io Size format, io Size type, io Data image ) = 'glConvolutionFilter2DEXT_wrapper';function glConvolutionParameterfEXT( io Size target, io Size pname, io Scalar param ) = 'glConvolutionParameterfEXT_wrapper';function glConvolutionParameterfvEXT( io Size target, io Size pname, io Scalar params[] ) = 'glConvolutionParameterfvEXT_wrapper';function glConvolutionParameteriEXT( io Size target, io Size pname, io Integer param ) = 'glConvolutionParameteriEXT_wrapper';function glConvolutionParameterivEXT( io Size target, io Size pname, io Integer params[] ) = 'glConvolutionParameterivEXT_wrapper';function glCopyConvolutionFilter1DEXT( io Size target, io Size internalformat, io Integer x, io Integer y, io Size width ) = 'glCopyConvolutionFilter1DEXT_wrapper';function glCopyConvolutionFilter2DEXT( io Size target, io Size internalformat, io Integer x, io Integer y, io Size width, io Size height ) = 'glCopyConvolutionFilter2DEXT_wrapper';function glGetConvolutionFilterEXT( io Size target, io Size format, io Size type, io Data image ) = 'glGetConvolutionFilterEXT_wrapper';function glGetConvolutionParameterfvEXT( io Size target, io Size pname, io Scalar params[] ) = 'glGetConvolutionParameterfvEXT_wrapper';function glGetConvolutionParameterivEXT( io Size target, io Size pname, io Integer params[] ) = 'glGetConvolutionParameterivEXT_wrapper';function glGetSeparableFilterEXT( io Size target, io Size format, io Size type, io Data row, io Data column, io Data span ) = 'glGetSeparableFilterEXT_wrapper';function glSeparableFilter2DEXT( io Size target, io Size internalformat, io Size width, io Size height, io Size format, io Size type, io Data row, io Data column ) = 'glSeparableFilter2DEXT_wrapper';function glBinormalPointerEXT( io Size type, io Size stride, io Data pointer ) = 'glBinormalPointerEXT_wrapper';function glTangentPointerEXT( io Size type, io Size stride, io Data pointer ) = 'glTangentPointerEXT_wrapper';function glCopyTexImage1DEXT( io Size target, io Integer level, io Size internalformat, io Integer x, io Integer y, io Size width, io Integer border ) = 'glCopyTexImage1DEXT_wrapper';function glCopyTexImage2DEXT( io Size target, io Integer level, io Size internalformat, io Integer x, io Integer y, io Size width, io Size height, io Integer border ) = 'glCopyTexImage2DEXT_wrapper';function glCopyTexSubImage1DEXT( io Size target, io Integer level, io Integer xoffset, io Integer x, io Integer y, io Size width ) = 'glCopyTexSubImage1DEXT_wrapper';function glCopyTexSubImage2DEXT( io Size target, io Integer level, io Integer xoffset, io Integer yoffset, io Integer x, io Integer y, io Size width, io Size height ) = 'glCopyTexSubImage2DEXT_wrapper';function glCopyTexSubImage3DEXT( io Size target, io Integer level, io Integer xoffset, io Integer yoffset, io Integer zoffset, io Integer x, io Integer y, io Size width, io Size height ) = 'glCopyTexSubImage3DEXT_wrapper';function glCullParameterdvEXT( io Size pname, io Scalar params[] ) = 'glCullParameterdvEXT_wrapper';function glCullParameterfvEXT( io Size pname, io Scalar params[] ) = 'glCullParameterfvEXT_wrapper';function glDepthBoundsEXT( io Scalar zmin, io Scalar zmax ) = 'glDepthBoundsEXT_wrapper';function glBindMultiTextureEXT( io Size texunit, io Size target, io Size texture ) = 'glBindMultiTextureEXT_wrapper';function Size glCheckNamedFramebufferStatusEXT( io Size framebuffer, io Size target ) = 'glCheckNamedFramebufferStatusEXT_wrapper';function glClientAttribDefaultEXT( io Size mask ) = 'glClientAttribDefaultEXT_wrapper';function glCompressedMultiTexImage1DEXT( io Size texunit, io Size target, io Integer level, io Size internalformat, io Size width, io Integer border, io Size imageSize, io Data data ) = 'glCompressedMultiTexImage1DEXT_wrapper';function glCompressedMultiTexImage2DEXT( io Size texunit, io Size target, io Integer level, io Size internalformat, io Size width, io Size height, io Integer border, io Size imageSize, io Data data ) = 'glCompressedMultiTexImage2DEXT_wrapper';function glCompressedMultiTexImage3DEXT( io Size texunit, io Size target, io Integer level, io Size internalformat, io Size width, io Size height, io Size depth, io Integer border, io Size imageSize, io Data data ) = 'glCompressedMultiTexImage3DEXT_wrapper';function glCompressedMultiTexSubImage1DEXT( io Size texunit, io Size target, io Integer level, io Integer xoffset, io Size width, io Size format, io Size imageSize, io Data data ) = 'glCompressedMultiTexSubImage1DEXT_wrapper';function glCompressedMultiTexSubImage2DEXT( io Size texunit, io Size target, io Integer level, io Integer xoffset, io Integer yoffset, io Size width, io Size height, io Size format, io Size imageSize, io Data data ) = 'glCompressedMultiTexSubImage2DEXT_wrapper';function glCompressedMultiTexSubImage3DEXT( io Size texunit, io Size target, io Integer level, io Integer xoffset, io Integer yoffset, io Integer zoffset, io Size width, io Size height, io Size depth, io Size format, io Size imageSize, io Data data ) = 'glCompressedMultiTexSubImage3DEXT_wrapper';function glCompressedTextureImage1DEXT( io Size texture, io Size target, io Integer level, io Size internalformat, io Size width, io Integer border, io Size imageSize, io Data data ) = 'glCompressedTextureImage1DEXT_wrapper';function glCompressedTextureImage2DEXT( io Size texture, io Size target, io Integer level, io Size internalformat, io Size width, io Size height, io Integer border, io Size imageSize, io Data data ) = 'glCompressedTextureImage2DEXT_wrapper';function glCompressedTextureImage3DEXT( io Size texture, io Size target, io Integer level, io Size internalformat, io Size width, io Size height, io Size depth, io Integer border, io Size imageSize, io Data data ) = 'glCompressedTextureImage3DEXT_wrapper';function glCompressedTextureSubImage1DEXT( io Size texture, io Size target, io Integer level, io Integer xoffset, io Size width, io Size format, io Size imageSize, io Data data ) = 'glCompressedTextureSubImage1DEXT_wrapper';function glCompressedTextureSubImage2DEXT( io Size texture, io Size target, io Integer level, io Integer xoffset, io Integer yoffset, io Size width, io Size height, io Size format, io Size imageSize, io Data data ) = 'glCompressedTextureSubImage2DEXT_wrapper';function glCompressedTextureSubImage3DEXT( io Size texture, io Size target, io Integer level, io Integer xoffset, io Integer yoffset, io Integer zoffset, io Size width, io Size height, io Size depth, io Size format, io Size imageSize, io Data data ) = 'glCompressedTextureSubImage3DEXT_wrapper';function glCopyMultiTexImage1DEXT( io Size texunit, io Size target, io Integer level, io Size internalformat, io Integer x, io Integer y, io Size width, io Integer border ) = 'glCopyMultiTexImage1DEXT_wrapper';function glCopyMultiTexImage2DEXT( io Size texunit, io Size target, io Integer level, io Size internalformat, io Integer x, io Integer y, io Size width, io Size height, io Integer border ) = 'glCopyMultiTexImage2DEXT_wrapper';function glCopyMultiTexSubImage1DEXT( io Size texunit, io Size target, io Integer level, io Integer xoffset, io Integer x, io Integer y, io Size width ) = 'glCopyMultiTexSubImage1DEXT_wrapper';function glCopyMultiTexSubImage2DEXT( io Size texunit, io Size target, io Integer level, io Integer xoffset, io Integer yoffset, io Integer x, io Integer y, io Size width, io Size height ) = 'glCopyMultiTexSubImage2DEXT_wrapper';function glCopyMultiTexSubImage3DEXT( io Size texunit, io Size target, io Integer level, io Integer xoffset, io Integer yoffset, io Integer zoffset, io Integer x, io Integer y, io Size width, io Size height ) = 'glCopyMultiTexSubImage3DEXT_wrapper';function glCopyTextureImage1DEXT( io Size texture, io Size target, io Integer level, io Size internalformat, io Integer x, io Integer y, io Size width, io Integer border ) = 'glCopyTextureImage1DEXT_wrapper';function glCopyTextureImage2DEXT( io Size texture, io Size target, io Integer level, io Size internalformat, io Integer x, io Integer y, io Size width, io Size height, io Integer border ) = 'glCopyTextureImage2DEXT_wrapper';function glCopyTextureSubImage1DEXT( io Size texture, io Size target, io Integer level, io Integer xoffset, io Integer x, io Integer y, io Size width ) = 'glCopyTextureSubImage1DEXT_wrapper';function glCopyTextureSubImage2DEXT( io Size texture, io Size target, io Integer level, io Integer xoffset, io Integer yoffset, io Integer x, io Integer y, io Size width, io Size height ) = 'glCopyTextureSubImage2DEXT_wrapper';function glCopyTextureSubImage3DEXT( io Size texture, io Size target, io Integer level, io Integer xoffset, io Integer yoffset, io Integer zoffset, io Integer x, io Integer y, io Size width, io Size height ) = 'glCopyTextureSubImage3DEXT_wrapper';function glDisableClientStateIndexedEXT( io Size array, io Size index ) = 'glDisableClientStateIndexedEXT_wrapper';function glDisableClientStateiEXT( io Size array, io Size index ) = 'glDisableClientStateiEXT_wrapper';function glDisableVertexArrayAttribEXT( io Size vaobj, io Size index ) = 'glDisableVertexArrayAttribEXT_wrapper';function glDisableVertexArrayEXT( io Size vaobj, io Size array ) = 'glDisableVertexArrayEXT_wrapper';function glEnableClientStateIndexedEXT( io Size array, io Size index ) = 'glEnableClientStateIndexedEXT_wrapper';function glEnableClientStateiEXT( io Size array, io Size index ) = 'glEnableClientStateiEXT_wrapper';function glEnableVertexArrayAttribEXT( io Size vaobj, io Size index ) = 'glEnableVertexArrayAttribEXT_wrapper';function glEnableVertexArrayEXT( io Size vaobj, io Size array ) = 'glEnableVertexArrayEXT_wrapper';function glFlushMappedNamedBufferRangeEXT( io Size buffer, io Integer offset, io Size length ) = 'glFlushMappedNamedBufferRangeEXT_wrapper';function glFramebufferDrawBufferEXT( io Size framebuffer, io Size mode ) = 'glFramebufferDrawBufferEXT_wrapper';function glFramebufferDrawBuffersEXT( io Size framebuffer, io Size n, io Size bufs[] ) = 'glFramebufferDrawBuffersEXT_wrapper';function glFramebufferReadBufferEXT( io Size framebuffer, io Size mode ) = 'glFramebufferReadBufferEXT_wrapper';function glGenerateMultiTexMipmapEXT( io Size texunit, io Size target ) = 'glGenerateMultiTexMipmapEXT_wrapper';function glGenerateTextureMipmapEXT( io Size texture, io Size target ) = 'glGenerateTextureMipmapEXT_wrapper';function glGetCompressedMultiTexImageEXT( io Size texunit, io Size target, io Integer level, io Data img ) = 'glGetCompressedMultiTexImageEXT_wrapper';function glGetCompressedTextureImageEXT( io Size texture, io Size target, io Integer level, io Data img ) = 'glGetCompressedTextureImageEXT_wrapper';function glGetDoubleIndexedvEXT( io Size target, io Size index, io Scalar params[] ) = 'glGetDoubleIndexedvEXT_wrapper';function glGetDoublei_vEXT( io Size pname, io Size index, io Scalar params[] ) = 'glGetDoublei_vEXT_wrapper';function glGetFloatIndexedvEXT( io Size target, io Size index, io Scalar params[] ) = 'glGetFloatIndexedvEXT_wrapper';function glGetFloati_vEXT( io Size pname, io Size index, io Scalar params[] ) = 'glGetFloati_vEXT_wrapper';function glGetFramebufferParameterivEXT( io Size framebuffer, io Size pname, io Integer param[] ) = 'glGetFramebufferParameterivEXT_wrapper';function glGetMultiTexEnvfvEXT( io Size texunit, io Size target, io Size pname, io Scalar params[] ) = 'glGetMultiTexEnvfvEXT_wrapper';function glGetMultiTexEnvivEXT( io Size texunit, io Size target, io Size pname, io Integer params[] ) = 'glGetMultiTexEnvivEXT_wrapper';function glGetMultiTexGendvEXT( io Size texunit, io Size coord, io Size pname, io Scalar params[] ) = 'glGetMultiTexGendvEXT_wrapper';function glGetMultiTexGenfvEXT( io Size texunit, io Size coord, io Size pname, io Scalar params[] ) = 'glGetMultiTexGenfvEXT_wrapper';function glGetMultiTexGenivEXT( io Size texunit, io Size coord, io Size pname, io Integer params[] ) = 'glGetMultiTexGenivEXT_wrapper';function glGetMultiTexImageEXT( io Size texunit, io Size target, io Integer level, io Size format, io Size type, io Data pixels ) = 'glGetMultiTexImageEXT_wrapper';function glGetMultiTexLevelParameterfvEXT( io Size texunit, io Size target, io Integer level, io Size pname, io Scalar params[] ) = 'glGetMultiTexLevelParameterfvEXT_wrapper';function glGetMultiTexLevelParameterivEXT( io Size texunit, io Size target, io Integer level, io Size pname, io Integer params[] ) = 'glGetMultiTexLevelParameterivEXT_wrapper';function glGetMultiTexParameterIivEXT( io Size texunit, io Size target, io Size pname, io Integer params[] ) = 'glGetMultiTexParameterIivEXT_wrapper';function glGetMultiTexParameterIuivEXT( io Size texunit, io Size target, io Size pname, io Size params[] ) = 'glGetMultiTexParameterIuivEXT_wrapper';function glGetMultiTexParameterfvEXT( io Size texunit, io Size target, io Size pname, io Scalar params[] ) = 'glGetMultiTexParameterfvEXT_wrapper';function glGetMultiTexParameterivEXT( io Size texunit, io Size target, io Size pname, io Integer params[] ) = 'glGetMultiTexParameterivEXT_wrapper';function glGetNamedBufferParameterivEXT( io Size buffer, io Size pname, io Integer params[] ) = 'glGetNamedBufferParameterivEXT_wrapper';function glGetNamedBufferSubDataEXT( io Size buffer, io Integer offset, io Size size, io Data data ) = 'glGetNamedBufferSubDataEXT_wrapper';function glGetNamedFramebufferAttachmentParameterivEXT( io Size framebuffer, io Size attachment, io Size pname, io Integer params[] ) = 'glGetNamedFramebufferAttachmentParameterivEXT_wrapper';function glGetNamedProgramLocalParameterIivEXT( io Size program, io Size target, io Size index, io Integer params[] ) = 'glGetNamedProgramLocalParameterIivEXT_wrapper';function glGetNamedProgramLocalParameterIuivEXT( io Size program, io Size target, io Size index, io Size params[] ) = 'glGetNamedProgramLocalParameterIuivEXT_wrapper';function glGetNamedProgramLocalParameterdvEXT( io Size program, io Size target, io Size index, io Scalar params[] ) = 'glGetNamedProgramLocalParameterdvEXT_wrapper';function glGetNamedProgramLocalParameterfvEXT( io Size program, io Size target, io Size index, io Scalar params[] ) = 'glGetNamedProgramLocalParameterfvEXT_wrapper';function glGetNamedProgramStringEXT( io Size program, io Size target, io Size pname, io Data string ) = 'glGetNamedProgramStringEXT_wrapper';function glGetNamedProgramivEXT( io Size program, io Size target, io Size pname, io Integer params[] ) = 'glGetNamedProgramivEXT_wrapper';function glGetNamedRenderbufferParameterivEXT( io Size renderbuffer, io Size pname, io Integer params[] ) = 'glGetNamedRenderbufferParameterivEXT_wrapper';function glGetTextureImageEXT( io Size texture, io Size target, io Integer level, io Size format, io Size type, io Data pixels ) = 'glGetTextureImageEXT_wrapper';function glGetTextureLevelParameterfvEXT( io Size texture, io Size target, io Integer level, io Size pname, io Scalar params[] ) = 'glGetTextureLevelParameterfvEXT_wrapper';function glGetTextureLevelParameterivEXT( io Size texture, io Size target, io Integer level, io Size pname, io Integer params[] ) = 'glGetTextureLevelParameterivEXT_wrapper';function glGetTextureParameterIivEXT( io Size texture, io Size target, io Size pname, io Integer params[] ) = 'glGetTextureParameterIivEXT_wrapper';function glGetTextureParameterIuivEXT( io Size texture, io Size target, io Size pname, io Size params[] ) = 'glGetTextureParameterIuivEXT_wrapper';function glGetTextureParameterfvEXT( io Size texture, io Size target, io Size pname, io Scalar params[] ) = 'glGetTextureParameterfvEXT_wrapper';function glGetTextureParameterivEXT( io Size texture, io Size target, io Size pname, io Integer params[] ) = 'glGetTextureParameterivEXT_wrapper';function glGetVertexArrayIntegeri_vEXT( io Size vaobj, io Size index, io Size pname, io Integer param[] ) = 'glGetVertexArrayIntegeri_vEXT_wrapper';function glGetVertexArrayIntegervEXT( io Size vaobj, io Size pname, io Integer param[] ) = 'glGetVertexArrayIntegervEXT_wrapper';function glMapNamedBufferEXT( io Size buffer, io Size access ) = 'glMapNamedBufferEXT_wrapper';function glMapNamedBufferRangeEXT( io Size buffer, io Integer offset, io Size length, io Size access ) = 'glMapNamedBufferRangeEXT_wrapper';function glMatrixFrustumEXT( io Size matrixMode, io Scalar l, io Scalar r, io Scalar b, io Scalar t, io Scalar n, io Scalar f ) = 'glMatrixFrustumEXT_wrapper';function glMatrixLoadIdentityEXT( io Size matrixMode ) = 'glMatrixLoadIdentityEXT_wrapper';function glMatrixLoadTransposedEXT( io Size matrixMode, io Scalar m[] ) = 'glMatrixLoadTransposedEXT_wrapper';function glMatrixLoadTransposefEXT( io Size matrixMode, io Scalar m[] ) = 'glMatrixLoadTransposefEXT_wrapper';function glMatrixLoaddEXT( io Size matrixMode, io Scalar m[] ) = 'glMatrixLoaddEXT_wrapper';function glMatrixLoadfEXT( io Size matrixMode, io Scalar m[] ) = 'glMatrixLoadfEXT_wrapper';function glMatrixMultTransposedEXT( io Size matrixMode, io Scalar m[] ) = 'glMatrixMultTransposedEXT_wrapper';function glMatrixMultTransposefEXT( io Size matrixMode, io Scalar m[] ) = 'glMatrixMultTransposefEXT_wrapper';function glMatrixMultdEXT( io Size matrixMode, io Scalar m[] ) = 'glMatrixMultdEXT_wrapper';function glMatrixMultfEXT( io Size matrixMode, io Scalar m[] ) = 'glMatrixMultfEXT_wrapper';function glMatrixOrthoEXT( io Size matrixMode, io Scalar l, io Scalar r, io Scalar b, io Scalar t, io Scalar n, io Scalar f ) = 'glMatrixOrthoEXT_wrapper';function glMatrixPopEXT( io Size matrixMode ) = 'glMatrixPopEXT_wrapper';function glMatrixPushEXT( io Size matrixMode ) = 'glMatrixPushEXT_wrapper';function glMatrixRotatedEXT( io Size matrixMode, io Scalar angle, io Scalar x, io Scalar y, io Scalar z ) = 'glMatrixRotatedEXT_wrapper';function glMatrixRotatefEXT( io Size matrixMode, io Scalar angle, io Scalar x, io Scalar y, io Scalar z ) = 'glMatrixRotatefEXT_wrapper';function glMatrixScaledEXT( io Size matrixMode, io Scalar x, io Scalar y, io Scalar z ) = 'glMatrixScaledEXT_wrapper';function glMatrixScalefEXT( io Size matrixMode, io Scalar x, io Scalar y, io Scalar z ) = 'glMatrixScalefEXT_wrapper';function glMatrixTranslatedEXT( io Size matrixMode, io Scalar x, io Scalar y, io Scalar z ) = 'glMatrixTranslatedEXT_wrapper';function glMatrixTranslatefEXT( io Size matrixMode, io Scalar x, io Scalar y, io Scalar z ) = 'glMatrixTranslatefEXT_wrapper';function glMultiTexBufferEXT( io Size texunit, io Size target, io Size internalformat, io Size buffer ) = 'glMultiTexBufferEXT_wrapper';function glMultiTexCoordPointerEXT( io Size texunit, io Integer size, io Size type, io Size stride, io Data pointer ) = 'glMultiTexCoordPointerEXT_wrapper';function glMultiTexEnvfEXT( io Size texunit, io Size target, io Size pname, io Scalar param ) = 'glMultiTexEnvfEXT_wrapper';function glMultiTexEnvfvEXT( io Size texunit, io Size target, io Size pname, io Scalar params[] ) = 'glMultiTexEnvfvEXT_wrapper';function glMultiTexEnviEXT( io Size texunit, io Size target, io Size pname, io Integer param ) = 'glMultiTexEnviEXT_wrapper';function glMultiTexEnvivEXT( io Size texunit, io Size target, io Size pname, io Integer params[] ) = 'glMultiTexEnvivEXT_wrapper';function glMultiTexGendEXT( io Size texunit, io Size coord, io Size pname, io Scalar param ) = 'glMultiTexGendEXT_wrapper';function glMultiTexGendvEXT( io Size texunit, io Size coord, io Size pname, io Scalar params[] ) = 'glMultiTexGendvEXT_wrapper';function glMultiTexGenfEXT( io Size texunit, io Size coord, io Size pname, io Scalar param ) = 'glMultiTexGenfEXT_wrapper';function glMultiTexGenfvEXT( io Size texunit, io Size coord, io Size pname, io Scalar params[] ) = 'glMultiTexGenfvEXT_wrapper';function glMultiTexGeniEXT( io Size texunit, io Size coord, io Size pname, io Integer param ) = 'glMultiTexGeniEXT_wrapper';function glMultiTexGenivEXT( io Size texunit, io Size coord, io Size pname, io Integer params[] ) = 'glMultiTexGenivEXT_wrapper';function glMultiTexImage1DEXT( io Size texunit, io Size target, io Integer level, io Integer internalformat, io Size width, io Integer border, io Size format, io Size type, io Data pixels ) = 'glMultiTexImage1DEXT_wrapper';function glMultiTexImage2DEXT( io Size texunit, io Size target, io Integer level, io Integer internalformat, io Size width, io Size height, io Integer border, io Size format, io Size type, io Data pixels ) = 'glMultiTexImage2DEXT_wrapper';function glMultiTexImage3DEXT( io Size texunit, io Size target, io Integer level, io Integer internalformat, io Size width, io Size height, io Size depth, io Integer border, io Size format, io Size type, io Data pixels ) = 'glMultiTexImage3DEXT_wrapper';function glMultiTexParameterIivEXT( io Size texunit, io Size target, io Size pname, io Integer params[] ) = 'glMultiTexParameterIivEXT_wrapper';function glMultiTexParameterIuivEXT( io Size texunit, io Size target, io Size pname, io Size params[] ) = 'glMultiTexParameterIuivEXT_wrapper';function glMultiTexParameterfEXT( io Size texunit, io Size target, io Size pname, io Scalar param ) = 'glMultiTexParameterfEXT_wrapper';function glMultiTexParameterfvEXT( io Size texunit, io Size target, io Size pname, io Scalar param[] ) = 'glMultiTexParameterfvEXT_wrapper';function glMultiTexParameteriEXT( io Size texunit, io Size target, io Size pname, io Integer param ) = 'glMultiTexParameteriEXT_wrapper';function glMultiTexParameterivEXT( io Size texunit, io Size target, io Size pname, io Integer param[] ) = 'glMultiTexParameterivEXT_wrapper';function glMultiTexRenderbufferEXT( io Size texunit, io Size target, io Size renderbuffer ) = 'glMultiTexRenderbufferEXT_wrapper';function glMultiTexSubImage1DEXT( io Size texunit, io Size target, io Integer level, io Integer xoffset, io Size width, io Size format, io Size type, io Data pixels ) = 'glMultiTexSubImage1DEXT_wrapper';function glMultiTexSubImage2DEXT( io Size texunit, io Size target, io Integer level, io Integer xoffset, io Integer yoffset, io Size width, io Size height, io Size format, io Size type, io Data pixels ) = 'glMultiTexSubImage2DEXT_wrapper';function glMultiTexSubImage3DEXT( io Size texunit, io Size target, io Integer level, io Integer xoffset, io Integer yoffset, io Integer zoffset, io Size width, io Size height, io Size depth, io Size format, io Size type, io Data pixels ) = 'glMultiTexSubImage3DEXT_wrapper';function glNamedBufferDataEXT( io Size buffer, io Size size, io Data data, io Size usage ) = 'glNamedBufferDataEXT_wrapper';function glNamedBufferSubDataEXT( io Size buffer, io Integer offset, io Size size, io Data data ) = 'glNamedBufferSubDataEXT_wrapper';function glNamedCopyBufferSubDataEXT( io Size readBuffer, io Size writeBuffer, io Integer readOffset, io Integer writeOffset, io Size size ) = 'glNamedCopyBufferSubDataEXT_wrapper';function glNamedFramebufferRenderbufferEXT( io Size framebuffer, io Size attachment, io Size renderbuffertarget, io Size renderbuffer ) = 'glNamedFramebufferRenderbufferEXT_wrapper';function glNamedFramebufferTexture1DEXT( io Size framebuffer, io Size attachment, io Size textarget, io Size texture, io Integer level ) = 'glNamedFramebufferTexture1DEXT_wrapper';function glNamedFramebufferTexture2DEXT( io Size framebuffer, io Size attachment, io Size textarget, io Size texture, io Integer level ) = 'glNamedFramebufferTexture2DEXT_wrapper';function glNamedFramebufferTexture3DEXT( io Size framebuffer, io Size attachment, io Size textarget, io Size texture, io Integer level, io Integer zoffset ) = 'glNamedFramebufferTexture3DEXT_wrapper';function glNamedFramebufferTextureEXT( io Size framebuffer, io Size attachment, io Size texture, io Integer level ) = 'glNamedFramebufferTextureEXT_wrapper';function glNamedFramebufferTextureFaceEXT( io Size framebuffer, io Size attachment, io Size texture, io Integer level, io Size face ) = 'glNamedFramebufferTextureFaceEXT_wrapper';function glNamedFramebufferTextureLayerEXT( io Size framebuffer, io Size attachment, io Size texture, io Integer level, io Integer layer ) = 'glNamedFramebufferTextureLayerEXT_wrapper';function glNamedProgramLocalParameter4dEXT( io Size program, io Size target, io Size index, io Scalar x, io Scalar y, io Scalar z, io Scalar w ) = 'glNamedProgramLocalParameter4dEXT_wrapper';function glNamedProgramLocalParameter4dvEXT( io Size program, io Size target, io Size index, io Scalar params[4] ) = 'glNamedProgramLocalParameter4dvEXT_wrapper';function glNamedProgramLocalParameter4fEXT( io Size program, io Size target, io Size index, io Scalar x, io Scalar y, io Scalar z, io Scalar w ) = 'glNamedProgramLocalParameter4fEXT_wrapper';function glNamedProgramLocalParameter4fvEXT( io Size program, io Size target, io Size index, io Scalar params[4] ) = 'glNamedProgramLocalParameter4fvEXT_wrapper';function glNamedProgramLocalParameterI4iEXT( io Size program, io Size target, io Size index, io Integer x, io Integer y, io Integer z, io Integer w ) = 'glNamedProgramLocalParameterI4iEXT_wrapper';function glNamedProgramLocalParameterI4ivEXT( io Size program, io Size target, io Size index, io Integer params[4] ) = 'glNamedProgramLocalParameterI4ivEXT_wrapper';function glNamedProgramLocalParameterI4uiEXT( io Size program, io Size target, io Size index, io Size x, io Size y, io Size z, io Size w ) = 'glNamedProgramLocalParameterI4uiEXT_wrapper';function glNamedProgramLocalParameterI4uivEXT( io Size program, io Size target, io Size index, io Size params[4] ) = 'glNamedProgramLocalParameterI4uivEXT_wrapper';function glNamedProgramLocalParameters4fvEXT( io Size program, io Size target, io Size index, io Size count, io Scalar params[4] ) = 'glNamedProgramLocalParameters4fvEXT_wrapper';function glNamedProgramLocalParametersI4ivEXT( io Size program, io Size target, io Size index, io Size count, io Integer params[4] ) = 'glNamedProgramLocalParametersI4ivEXT_wrapper';function glNamedProgramLocalParametersI4uivEXT( io Size program, io Size target, io Size index, io Size count, io Size params[4] ) = 'glNamedProgramLocalParametersI4uivEXT_wrapper';function glNamedProgramStringEXT( io Size program, io Size target, io Size format, io Size len, io Data string ) = 'glNamedProgramStringEXT_wrapper';function glNamedRenderbufferStorageEXT( io Size renderbuffer, io Size internalformat, io Size width, io Size height ) = 'glNamedRenderbufferStorageEXT_wrapper';function glNamedRenderbufferStorageMultisampleCoverageEXT( io Size renderbuffer, io Size coverageSamples, io Size colorSamples, io Size internalformat, io Size width, io Size height ) = 'glNamedRenderbufferStorageMultisampleCoverageEXT_wrapper';function glNamedRenderbufferStorageMultisampleEXT( io Size renderbuffer, io Size samples, io Size internalformat, io Size width, io Size height ) = 'glNamedRenderbufferStorageMultisampleEXT_wrapper';function glProgramUniform1fEXT( io Size program, io Integer location, io Scalar v0 ) = 'glProgramUniform1fEXT_wrapper';function glProgramUniform1fvEXT( io Size program, io Integer location, io Size count, io Scalar value[1] ) = 'glProgramUniform1fvEXT_wrapper';function glProgramUniform1iEXT( io Size program, io Integer location, io Integer v0 ) = 'glProgramUniform1iEXT_wrapper';function glProgramUniform1ivEXT( io Size program, io Integer location, io Size count, io Integer value[1] ) = 'glProgramUniform1ivEXT_wrapper';function glProgramUniform1uiEXT( io Size program, io Integer location, io Size v0 ) = 'glProgramUniform1uiEXT_wrapper';function glProgramUniform1uivEXT( io Size program, io Integer location, io Size count, io Size value[1] ) = 'glProgramUniform1uivEXT_wrapper';function glProgramUniform2fEXT( io Size program, io Integer location, io Scalar v0, io Scalar v1 ) = 'glProgramUniform2fEXT_wrapper';function glProgramUniform2fvEXT( io Size program, io Integer location, io Size count, io Scalar value[2] ) = 'glProgramUniform2fvEXT_wrapper';function glProgramUniform2iEXT( io Size program, io Integer location, io Integer v0, io Integer v1 ) = 'glProgramUniform2iEXT_wrapper';function glProgramUniform2ivEXT( io Size program, io Integer location, io Size count, io Integer value[2] ) = 'glProgramUniform2ivEXT_wrapper';function glProgramUniform2uiEXT( io Size program, io Integer location, io Size v0, io Size v1 ) = 'glProgramUniform2uiEXT_wrapper';function glProgramUniform2uivEXT( io Size program, io Integer location, io Size count, io Size value[2] ) = 'glProgramUniform2uivEXT_wrapper';function glProgramUniform3fEXT( io Size program, io Integer location, io Scalar v0, io Scalar v1, io Scalar v2 ) = 'glProgramUniform3fEXT_wrapper';function glProgramUniform3fvEXT( io Size program, io Integer location, io Size count, io Scalar value[3] ) = 'glProgramUniform3fvEXT_wrapper';function glProgramUniform3iEXT( io Size program, io Integer location, io Integer v0, io Integer v1, io Integer v2 ) = 'glProgramUniform3iEXT_wrapper';function glProgramUniform3ivEXT( io Size program, io Integer location, io Size count, io Integer value[3] ) = 'glProgramUniform3ivEXT_wrapper';function glProgramUniform3uiEXT( io Size program, io Integer location, io Size v0, io Size v1, io Size v2 ) = 'glProgramUniform3uiEXT_wrapper';function glProgramUniform3uivEXT( io Size program, io Integer location, io Size count, io Size value[3] ) = 'glProgramUniform3uivEXT_wrapper';function glProgramUniform4fEXT( io Size program, io Integer location, io Scalar v0, io Scalar v1, io Scalar v2, io Scalar v3 ) = 'glProgramUniform4fEXT_wrapper';function glProgramUniform4fvEXT( io Size program, io Integer location, io Size count, io Scalar value[4] ) = 'glProgramUniform4fvEXT_wrapper';function glProgramUniform4iEXT( io Size program, io Integer location, io Integer v0, io Integer v1, io Integer v2, io Integer v3 ) = 'glProgramUniform4iEXT_wrapper';function glProgramUniform4ivEXT( io Size program, io Integer location, io Size count, io Integer value[4] ) = 'glProgramUniform4ivEXT_wrapper';function glProgramUniform4uiEXT( io Size program, io Integer location, io Size v0, io Size v1, io Size v2, io Size v3 ) = 'glProgramUniform4uiEXT_wrapper';function glProgramUniform4uivEXT( io Size program, io Integer location, io Size count, io Size value[4] ) = 'glProgramUniform4uivEXT_wrapper';function glProgramUniformMatrix2fvEXT( io Size program, io Integer location, io Size count, io Boolean transpose, io Scalar value[2] ) = 'glProgramUniformMatrix2fvEXT_wrapper';function glProgramUniformMatrix2x3fvEXT( io Size program, io Integer location, io Size count, io Boolean transpose, io Scalar value[3] ) = 'glProgramUniformMatrix2x3fvEXT_wrapper';function glProgramUniformMatrix2x4fvEXT( io Size program, io Integer location, io Size count, io Boolean transpose, io Scalar value[4] ) = 'glProgramUniformMatrix2x4fvEXT_wrapper';function glProgramUniformMatrix3fvEXT( io Size program, io Integer location, io Size count, io Boolean transpose, io Scalar value[3] ) = 'glProgramUniformMatrix3fvEXT_wrapper';function glProgramUniformMatrix3x2fvEXT( io Size program, io Integer location, io Size count, io Boolean transpose, io Scalar value[2] ) = 'glProgramUniformMatrix3x2fvEXT_wrapper';function glProgramUniformMatrix3x4fvEXT( io Size program, io Integer location, io Size count, io Boolean transpose, io Scalar value[4] ) = 'glProgramUniformMatrix3x4fvEXT_wrapper';function glProgramUniformMatrix4fvEXT( io Size program, io Integer location, io Size count, io Boolean transpose, io Scalar value[4] ) = 'glProgramUniformMatrix4fvEXT_wrapper';function glProgramUniformMatrix4x2fvEXT( io Size program, io Integer location, io Size count, io Boolean transpose, io Scalar value[2] ) = 'glProgramUniformMatrix4x2fvEXT_wrapper';function glProgramUniformMatrix4x3fvEXT( io Size program, io Integer location, io Size count, io Boolean transpose, io Scalar value[3] ) = 'glProgramUniformMatrix4x3fvEXT_wrapper';function glPushClientAttribDefaultEXT( io Size mask ) = 'glPushClientAttribDefaultEXT_wrapper';function glTextureBufferEXT( io Size texture, io Size target, io Size internalformat, io Size buffer ) = 'glTextureBufferEXT_wrapper';function glTextureImage1DEXT( io Size texture, io Size target, io Integer level, io Integer internalformat, io Size width, io Integer border, io Size format, io Size type, io Data pixels ) = 'glTextureImage1DEXT_wrapper';function glTextureImage2DEXT( io Size texture, io Size target, io Integer level, io Integer internalformat, io Size width, io Size height, io Integer border, io Size format, io Size type, io Data pixels ) = 'glTextureImage2DEXT_wrapper';function glTextureImage3DEXT( io Size texture, io Size target, io Integer level, io Integer internalformat, io Size width, io Size height, io Size depth, io Integer border, io Size format, io Size type, io Data pixels ) = 'glTextureImage3DEXT_wrapper';function glTextureParameterIivEXT( io Size texture, io Size target, io Size pname, io Integer params[] ) = 'glTextureParameterIivEXT_wrapper';function glTextureParameterIuivEXT( io Size texture, io Size target, io Size pname, io Size params[] ) = 'glTextureParameterIuivEXT_wrapper';function glTextureParameterfEXT( io Size texture, io Size target, io Size pname, io Scalar param ) = 'glTextureParameterfEXT_wrapper';function glTextureParameterfvEXT( io Size texture, io Size target, io Size pname, io Scalar param[] ) = 'glTextureParameterfvEXT_wrapper';function glTextureParameteriEXT( io Size texture, io Size target, io Size pname, io Integer param ) = 'glTextureParameteriEXT_wrapper';function glTextureParameterivEXT( io Size texture, io Size target, io Size pname, io Integer param[] ) = 'glTextureParameterivEXT_wrapper';function glTextureRenderbufferEXT( io Size texture, io Size target, io Size renderbuffer ) = 'glTextureRenderbufferEXT_wrapper';function glTextureSubImage1DEXT( io Size texture, io Size target, io Integer level, io Integer xoffset, io Size width, io Size format, io Size type, io Data pixels ) = 'glTextureSubImage1DEXT_wrapper';function glTextureSubImage2DEXT( io Size texture, io Size target, io Integer level, io Integer xoffset, io Integer yoffset, io Size width, io Size height, io Size format, io Size type, io Data pixels ) = 'glTextureSubImage2DEXT_wrapper';function glTextureSubImage3DEXT( io Size texture, io Size target, io Integer level, io Integer xoffset, io Integer yoffset, io Integer zoffset, io Size width, io Size height, io Size depth, io Size format, io Size type, io Data pixels ) = 'glTextureSubImage3DEXT_wrapper';function Boolean glUnmapNamedBufferEXT( io Size buffer ) = 'glUnmapNamedBufferEXT_wrapper';function glVertexArrayColorOffsetEXT( io Size vaobj, io Size buffer, io Integer size, io Size type, io Size stride, io Integer offset ) = 'glVertexArrayColorOffsetEXT_wrapper';function glVertexArrayEdgeFlagOffsetEXT( io Size vaobj, io Size buffer, io Size stride, io Integer offset ) = 'glVertexArrayEdgeFlagOffsetEXT_wrapper';function glVertexArrayFogCoordOffsetEXT( io Size vaobj, io Size buffer, io Size type, io Size stride, io Integer offset ) = 'glVertexArrayFogCoordOffsetEXT_wrapper';function glVertexArrayIndexOffsetEXT( io Size vaobj, io Size buffer, io Size type, io Size stride, io Integer offset ) = 'glVertexArrayIndexOffsetEXT_wrapper';function glVertexArrayMultiTexCoordOffsetEXT( io Size vaobj, io Size buffer, io Size texunit, io Integer size, io Size type, io Size stride, io Integer offset ) = 'glVertexArrayMultiTexCoordOffsetEXT_wrapper';function glVertexArrayNormalOffsetEXT( io Size vaobj, io Size buffer, io Size type, io Size stride, io Integer offset ) = 'glVertexArrayNormalOffsetEXT_wrapper';function glVertexArraySecondaryColorOffsetEXT( io Size vaobj, io Size buffer, io Integer size, io Size type, io Size stride, io Integer offset ) = 'glVertexArraySecondaryColorOffsetEXT_wrapper';function glVertexArrayTexCoordOffsetEXT( io Size vaobj, io Size buffer, io Integer size, io Size type, io Size stride, io Integer offset ) = 'glVertexArrayTexCoordOffsetEXT_wrapper';function glVertexArrayVertexAttribIOffsetEXT( io Size vaobj, io Size buffer, io Size index, io Integer size, io Size type, io Size stride, io Integer offset ) = 'glVertexArrayVertexAttribIOffsetEXT_wrapper';function glVertexArrayVertexAttribOffsetEXT( io Size vaobj, io Size buffer, io Size index, io Integer size, io Size type, io Boolean normalized, io Size stride, io Integer offset ) = 'glVertexArrayVertexAttribOffsetEXT_wrapper';function glVertexArrayVertexOffsetEXT( io Size vaobj, io Size buffer, io Integer size, io Size type, io Size stride, io Integer offset ) = 'glVertexArrayVertexOffsetEXT_wrapper';function glColorMaskIndexedEXT( io Size buf, io Boolean r, io Boolean g, io Boolean b, io Boolean a ) = 'glColorMaskIndexedEXT_wrapper';function glDisableIndexedEXT( io Size target, io Size index ) = 'glDisableIndexedEXT_wrapper';function glEnableIndexedEXT( io Size target, io Size index ) = 'glEnableIndexedEXT_wrapper';function glGetBooleanIndexedvEXT( io Size value, io Size index, io Boolean data[] ) = 'glGetBooleanIndexedvEXT_wrapper';function glGetIntegerIndexedvEXT( io Size value, io Size index, io Integer data[] ) = 'glGetIntegerIndexedvEXT_wrapper';function Boolean glIsEnabledIndexedEXT( io Size target, io Size index ) = 'glIsEnabledIndexedEXT_wrapper';function glDrawArraysInstancedEXT( io Size mode, io Integer start, io Size count, io Size primcount ) = 'glDrawArraysInstancedEXT_wrapper';function glDrawElementsInstancedEXT( io Size mode, io Size count, io Size type, io Data indices, io Size primcount ) = 'glDrawElementsInstancedEXT_wrapper';function glDrawRangeElementsEXT( io Size mode, io Size start, io Size end, io Size count, io Size type, io Data indices ) = 'glDrawRangeElementsEXT_wrapper';function glFogCoordPointerEXT( io Size type, io Size stride, io Data pointer ) = 'glFogCoordPointerEXT_wrapper';function glFogCoorddEXT( io Scalar coord ) = 'glFogCoorddEXT_wrapper';function glFogCoorddvEXT( io Scalar coord[] ) = 'glFogCoorddvEXT_wrapper';function glFogCoordfEXT( io Scalar coord ) = 'glFogCoordfEXT_wrapper';function glFogCoordfvEXT( io Scalar coord[] ) = 'glFogCoordfvEXT_wrapper';function glFragmentColorMaterialEXT( io Size face, io Size mode ) = 'glFragmentColorMaterialEXT_wrapper';function glFragmentLightModelfEXT( io Size pname, io Scalar param ) = 'glFragmentLightModelfEXT_wrapper';function glFragmentLightModelfvEXT( io Size pname, io Scalar params[] ) = 'glFragmentLightModelfvEXT_wrapper';function glFragmentLightModeliEXT( io Size pname, io Integer param ) = 'glFragmentLightModeliEXT_wrapper';function glFragmentLightModelivEXT( io Size pname, io Integer params[] ) = 'glFragmentLightModelivEXT_wrapper';function glFragmentLightfEXT( io Size light, io Size pname, io Scalar param ) = 'glFragmentLightfEXT_wrapper';function glFragmentLightfvEXT( io Size light, io Size pname, io Scalar params[] ) = 'glFragmentLightfvEXT_wrapper';function glFragmentLightiEXT( io Size light, io Size pname, io Integer param ) = 'glFragmentLightiEXT_wrapper';function glFragmentLightivEXT( io Size light, io Size pname, io Integer params[] ) = 'glFragmentLightivEXT_wrapper';function glFragmentMaterialfEXT( io Size face, io Size pname, io Scalar param ) = 'glFragmentMaterialfEXT_wrapper';function glFragmentMaterialfvEXT( io Size face, io Size pname, io Scalar params[] ) = 'glFragmentMaterialfvEXT_wrapper';function glFragmentMaterialiEXT( io Size face, io Size pname, io Integer param ) = 'glFragmentMaterialiEXT_wrapper';function glFragmentMaterialivEXT( io Size face, io Size pname, io Integer params[] ) = 'glFragmentMaterialivEXT_wrapper';function glGetFragmentLightfvEXT( io Size light, io Size pname, io Scalar params[] ) = 'glGetFragmentLightfvEXT_wrapper';function glGetFragmentLightivEXT( io Size light, io Size pname, io Integer params[] ) = 'glGetFragmentLightivEXT_wrapper';function glGetFragmentMaterialfvEXT( io Size face, io Size pname, io Scalar params[] ) = 'glGetFragmentMaterialfvEXT_wrapper';function glGetFragmentMaterialivEXT( io Size face, io Size pname, io Integer params[] ) = 'glGetFragmentMaterialivEXT_wrapper';function glLightEnviEXT( io Size pname, io Integer param ) = 'glLightEnviEXT_wrapper';function glBlitFramebufferEXT( io Integer srcX0, io Integer srcY0, io Integer srcX1, io Integer srcY1, io Integer dstX0, io Integer dstY0, io Integer dstX1, io Integer dstY1, io Size mask, io Size filter ) = 'glBlitFramebufferEXT_wrapper';function glRenderbufferStorageMultisampleEXT( io Size target, io Size samples, io Size internalformat, io Size width, io Size height ) = 'glRenderbufferStorageMultisampleEXT_wrapper';function glBindFramebufferEXT( io Size target, io Size framebuffer ) = 'glBindFramebufferEXT_wrapper';function glBindRenderbufferEXT( io Size target, io Size renderbuffer ) = 'glBindRenderbufferEXT_wrapper';function Size glCheckFramebufferStatusEXT( io Size target ) = 'glCheckFramebufferStatusEXT_wrapper';function glDeleteFramebuffersEXT( io Size n, io Size framebuffers[] ) = 'glDeleteFramebuffersEXT_wrapper';function glDeleteRenderbuffersEXT( io Size n, io Size renderbuffers[] ) = 'glDeleteRenderbuffersEXT_wrapper';function glFramebufferRenderbufferEXT( io Size target, io Size attachment, io Size renderbuffertarget, io Size renderbuffer ) = 'glFramebufferRenderbufferEXT_wrapper';function glFramebufferTexture1DEXT( io Size target, io Size attachment, io Size textarget, io Size texture, io Integer level ) = 'glFramebufferTexture1DEXT_wrapper';function glFramebufferTexture2DEXT( io Size target, io Size attachment, io Size textarget, io Size texture, io Integer level ) = 'glFramebufferTexture2DEXT_wrapper';function glFramebufferTexture3DEXT( io Size target, io Size attachment, io Size textarget, io Size texture, io Integer level, io Integer zoffset ) = 'glFramebufferTexture3DEXT_wrapper';function glGenFramebuffersEXT( io Size n, io Size framebuffers[] ) = 'glGenFramebuffersEXT_wrapper';function glGenRenderbuffersEXT( io Size n, io Size renderbuffers[] ) = 'glGenRenderbuffersEXT_wrapper';function glGenerateMipmapEXT( io Size target ) = 'glGenerateMipmapEXT_wrapper';function glGetFramebufferAttachmentParameterivEXT( io Size target, io Size attachment, io Size pname, io Integer params[] ) = 'glGetFramebufferAttachmentParameterivEXT_wrapper';function glGetRenderbufferParameterivEXT( io Size target, io Size pname, io Integer params[] ) = 'glGetRenderbufferParameterivEXT_wrapper';function Boolean glIsFramebufferEXT( io Size framebuffer ) = 'glIsFramebufferEXT_wrapper';function Boolean glIsRenderbufferEXT( io Size renderbuffer ) = 'glIsRenderbufferEXT_wrapper';function glRenderbufferStorageEXT( io Size target, io Size internalformat, io Size width, io Size height ) = 'glRenderbufferStorageEXT_wrapper';function glFramebufferTextureEXT( io Size target, io Size attachment, io Size texture, io Integer level ) = 'glFramebufferTextureEXT_wrapper';function glFramebufferTextureFaceEXT( io Size target, io Size attachment, io Size texture, io Integer level, io Size face ) = 'glFramebufferTextureFaceEXT_wrapper';function glFramebufferTextureLayerEXT( io Size target, io Size attachment, io Size texture, io Integer level, io Integer layer ) = 'glFramebufferTextureLayerEXT_wrapper';function glProgramParameteriEXT( io Size program, io Size pname, io Integer value ) = 'glProgramParameteriEXT_wrapper';function glProgramEnvParameters4fvEXT( io Size target, io Size index, io Size count, io Scalar params[4] ) = 'glProgramEnvParameters4fvEXT_wrapper';function glProgramLocalParameters4fvEXT( io Size target, io Size index, io Size count, io Scalar params[4] ) = 'glProgramLocalParameters4fvEXT_wrapper';function glBindFragDataLocationEXT( io Size program, io Size color, io String name ) = 'glBindFragDataLocationEXT_wrapper';function Integer glGetFragDataLocationEXT( io Size program, io String name ) = 'glGetFragDataLocationEXT_wrapper';function glGetUniformuivEXT( io Size program, io Integer location, io Size params[] ) = 'glGetUniformuivEXT_wrapper';function glGetVertexAttribIivEXT( io Size index, io Size pname, io Integer params[] ) = 'glGetVertexAttribIivEXT_wrapper';function glGetVertexAttribIuivEXT( io Size index, io Size pname, io Size params[] ) = 'glGetVertexAttribIuivEXT_wrapper';function glUniform1uiEXT( io Integer location, io Size v0 ) = 'glUniform1uiEXT_wrapper';function glUniform1uivEXT( io Integer location, io Size count, io Size value[1] ) = 'glUniform1uivEXT_wrapper';function glUniform2uiEXT( io Integer location, io Size v0, io Size v1 ) = 'glUniform2uiEXT_wrapper';function glUniform2uivEXT( io Integer location, io Size count, io Size value[2] ) = 'glUniform2uivEXT_wrapper';function glUniform3uiEXT( io Integer location, io Size v0, io Size v1, io Size v2 ) = 'glUniform3uiEXT_wrapper';function glUniform3uivEXT( io Integer location, io Size count, io Size value[3] ) = 'glUniform3uivEXT_wrapper';function glUniform4uiEXT( io Integer location, io Size v0, io Size v1, io Size v2, io Size v3 ) = 'glUniform4uiEXT_wrapper';function glUniform4uivEXT( io Integer location, io Size count, io Size value[4] ) = 'glUniform4uivEXT_wrapper';function glVertexAttribI1iEXT( io Size index, io Integer x ) = 'glVertexAttribI1iEXT_wrapper';function glVertexAttribI1ivEXT( io Size index, io Integer v[1] ) = 'glVertexAttribI1ivEXT_wrapper';function glVertexAttribI1uiEXT( io Size index, io Size x ) = 'glVertexAttribI1uiEXT_wrapper';function glVertexAttribI1uivEXT( io Size index, io Size v[1] ) = 'glVertexAttribI1uivEXT_wrapper';function glVertexAttribI2iEXT( io Size index, io Integer x, io Integer y ) = 'glVertexAttribI2iEXT_wrapper';function glVertexAttribI2ivEXT( io Size index, io Integer v[2] ) = 'glVertexAttribI2ivEXT_wrapper';function glVertexAttribI2uiEXT( io Size index, io Size x, io Size y ) = 'glVertexAttribI2uiEXT_wrapper';function glVertexAttribI2uivEXT( io Size index, io Size v[2] ) = 'glVertexAttribI2uivEXT_wrapper';function glVertexAttribI3iEXT( io Size index, io Integer x, io Integer y, io Integer z ) = 'glVertexAttribI3iEXT_wrapper';function glVertexAttribI3ivEXT( io Size index, io Integer v[3] ) = 'glVertexAttribI3ivEXT_wrapper';function glVertexAttribI3uiEXT( io Size index, io Size x, io Size y, io Size z ) = 'glVertexAttribI3uiEXT_wrapper';function glVertexAttribI3uivEXT( io Size index, io Size v[3] ) = 'glVertexAttribI3uivEXT_wrapper';function glVertexAttribI4bvEXT( io Size index, io Byte v[4] ) = 'glVertexAttribI4bvEXT_wrapper';function glVertexAttribI4iEXT( io Size index, io Integer x, io Integer y, io Integer z, io Integer w ) = 'glVertexAttribI4iEXT_wrapper';function glVertexAttribI4ivEXT( io Size index, io Integer v[4] ) = 'glVertexAttribI4ivEXT_wrapper';function glVertexAttribI4svEXT( io Size index, io Integer v[4] ) = 'glVertexAttribI4svEXT_wrapper';function glVertexAttribI4ubvEXT( io Size index, io Size v[4] ) = 'glVertexAttribI4ubvEXT_wrapper';function glVertexAttribI4uiEXT( io Size index, io Size x, io Size y, io Size z, io Size w ) = 'glVertexAttribI4uiEXT_wrapper';function glVertexAttribI4uivEXT( io Size index, io Size v[4] ) = 'glVertexAttribI4uivEXT_wrapper';function glVertexAttribI4usvEXT( io Size index, io Integer v[4] ) = 'glVertexAttribI4usvEXT_wrapper';function glVertexAttribIPointerEXT( io Size index, io Integer size, io Size type, io Size stride, io Data pointer ) = 'glVertexAttribIPointerEXT_wrapper';function glGetHistogramEXT( io Size target, io Boolean reset, io Size format, io Size type, io Data values ) = 'glGetHistogramEXT_wrapper';function glGetHistogramParameterfvEXT( io Size target, io Size pname, io Scalar params[] ) = 'glGetHistogramParameterfvEXT_wrapper';function glGetHistogramParameterivEXT( io Size target, io Size pname, io Integer params[] ) = 'glGetHistogramParameterivEXT_wrapper';function glGetMinmaxEXT( io Size target, io Boolean reset, io Size format, io Size type, io Data values ) = 'glGetMinmaxEXT_wrapper';function glGetMinmaxParameterfvEXT( io Size target, io Size pname, io Scalar params[] ) = 'glGetMinmaxParameterfvEXT_wrapper';function glGetMinmaxParameterivEXT( io Size target, io Size pname, io Integer params[] ) = 'glGetMinmaxParameterivEXT_wrapper';function glHistogramEXT( io Size target, io Size width, io Size internalformat, io Boolean sink ) = 'glHistogramEXT_wrapper';function glMinmaxEXT( io Size target, io Size internalformat, io Boolean sink ) = 'glMinmaxEXT_wrapper';function glResetHistogramEXT( io Size target ) = 'glResetHistogramEXT_wrapper';function glResetMinmaxEXT( io Size target ) = 'glResetMinmaxEXT_wrapper';function glIndexFuncEXT( io Size func, io Scalar ref ) = 'glIndexFuncEXT_wrapper';function glIndexMaterialEXT( io Size face, io Size mode ) = 'glIndexMaterialEXT_wrapper';function glApplyTextureEXT( io Size mode ) = 'glApplyTextureEXT_wrapper';function glTextureLightEXT( io Size pname ) = 'glTextureLightEXT_wrapper';function glTextureMaterialEXT( io Size face, io Size mode ) = 'glTextureMaterialEXT_wrapper';function glMultiDrawArraysEXT( io Size mode, io Integer first[], io Size count[], io Size primcount ) = 'glMultiDrawArraysEXT_wrapper';function glSampleMaskEXT( io Scalar value, io Boolean invert ) = 'glSampleMaskEXT_wrapper';function glSamplePatternEXT( io Size pattern ) = 'glSamplePatternEXT_wrapper';function glColorTableEXT( io Size target, io Size internalFormat, io Size width, io Size format, io Size type, io Data data ) = 'glColorTableEXT_wrapper';function glGetColorTableEXT( io Size target, io Size format, io Size type, io Data data ) = 'glGetColorTableEXT_wrapper';function glGetColorTableParameterfvEXT( io Size target, io Size pname, io Scalar params[] ) = 'glGetColorTableParameterfvEXT_wrapper';function glGetColorTableParameterivEXT( io Size target, io Size pname, io Integer params[] ) = 'glGetColorTableParameterivEXT_wrapper';function glGetPixelTransformParameterfvEXT( io Size target, io Size pname, io Scalar params[] ) = 'glGetPixelTransformParameterfvEXT_wrapper';function glGetPixelTransformParameterivEXT( io Size target, io Size pname, io Integer params[] ) = 'glGetPixelTransformParameterivEXT_wrapper';function glPixelTransformParameterfEXT( io Size target, io Size pname, io Scalar param ) = 'glPixelTransformParameterfEXT_wrapper';function glPixelTransformParameterfvEXT( io Size target, io Size pname, io Scalar params[] ) = 'glPixelTransformParameterfvEXT_wrapper';function glPixelTransformParameteriEXT( io Size target, io Size pname, io Integer param ) = 'glPixelTransformParameteriEXT_wrapper';function glPixelTransformParameterivEXT( io Size target, io Size pname, io Integer params[] ) = 'glPixelTransformParameterivEXT_wrapper';function glPointParameterfEXT( io Size pname, io Scalar param ) = 'glPointParameterfEXT_wrapper';function glPointParameterfvEXT( io Size pname, io Scalar params[] ) = 'glPointParameterfvEXT_wrapper';function glPolygonOffsetEXT( io Scalar factor, io Scalar bias ) = 'glPolygonOffsetEXT_wrapper';function glProvokingVertexEXT( io Size mode ) = 'glProvokingVertexEXT_wrapper';function glBeginSceneEXT(  ) = 'glBeginSceneEXT_wrapper';function glEndSceneEXT(  ) = 'glEndSceneEXT_wrapper';function glSecondaryColor3bEXT( io Byte red, io Byte green, io Byte blue ) = 'glSecondaryColor3bEXT_wrapper';function glSecondaryColor3bvEXT( io Byte v[3] ) = 'glSecondaryColor3bvEXT_wrapper';function glSecondaryColor3dEXT( io Scalar red, io Scalar green, io Scalar blue ) = 'glSecondaryColor3dEXT_wrapper';function glSecondaryColor3dvEXT( io Scalar v[3] ) = 'glSecondaryColor3dvEXT_wrapper';function glSecondaryColor3fEXT( io Scalar red, io Scalar green, io Scalar blue ) = 'glSecondaryColor3fEXT_wrapper';function glSecondaryColor3fvEXT( io Scalar v[3] ) = 'glSecondaryColor3fvEXT_wrapper';function glSecondaryColor3iEXT( io Integer red, io Integer green, io Integer blue ) = 'glSecondaryColor3iEXT_wrapper';function glSecondaryColor3ivEXT( io Integer v[3] ) = 'glSecondaryColor3ivEXT_wrapper';function glSecondaryColor3sEXT( io Integer red, io Integer green, io Integer blue ) = 'glSecondaryColor3sEXT_wrapper';function glSecondaryColor3svEXT( io Integer v[3] ) = 'glSecondaryColor3svEXT_wrapper';function glSecondaryColor3ubEXT( io Size red, io Size green, io Size blue ) = 'glSecondaryColor3ubEXT_wrapper';function glSecondaryColor3ubvEXT( io Size v[3] ) = 'glSecondaryColor3ubvEXT_wrapper';function glSecondaryColor3uiEXT( io Size red, io Size green, io Size blue ) = 'glSecondaryColor3uiEXT_wrapper';function glSecondaryColor3uivEXT( io Size v[3] ) = 'glSecondaryColor3uivEXT_wrapper';function glSecondaryColor3usEXT( io Integer red, io Integer green, io Integer blue ) = 'glSecondaryColor3usEXT_wrapper';function glSecondaryColor3usvEXT( io Integer v[3] ) = 'glSecondaryColor3usvEXT_wrapper';function glSecondaryColorPointerEXT( io Integer size, io Size type, io Size stride, io Data pointer ) = 'glSecondaryColorPointerEXT_wrapper';function glActiveProgramEXT( io Size program ) = 'glActiveProgramEXT_wrapper';function Size glCreateShaderProgramEXT( io Size type, io String string ) = 'glCreateShaderProgramEXT_wrapper';function glUseShaderProgramEXT( io Size type, io Size program ) = 'glUseShaderProgramEXT_wrapper';function glActiveStencilFaceEXT( io Size face ) = 'glActiveStencilFaceEXT_wrapper';function glTexSubImage1DEXT( io Size target, io Integer level, io Integer xoffset, io Size width, io Size format, io Size type, io Data pixels ) = 'glTexSubImage1DEXT_wrapper';function glTexSubImage2DEXT( io Size target, io Integer level, io Integer xoffset, io Integer yoffset, io Size width, io Size height, io Size format, io Size type, io Data pixels ) = 'glTexSubImage2DEXT_wrapper';function glTexSubImage3DEXT( io Size target, io Integer level, io Integer xoffset, io Integer yoffset, io Integer zoffset, io Size width, io Size height, io Size depth, io Size format, io Size type, io Data pixels ) = 'glTexSubImage3DEXT_wrapper';function glTexImage3DEXT( io Size target, io Integer level, io Size internalformat, io Size width, io Size height, io Size depth, io Integer border, io Size format, io Size type, io Data pixels ) = 'glTexImage3DEXT_wrapper';function glTexBufferEXT( io Size target, io Size internalformat, io Size buffer ) = 'glTexBufferEXT_wrapper';function glClearColorIiEXT( io Integer red, io Integer green, io Integer blue, io Integer alpha ) = 'glClearColorIiEXT_wrapper';function glClearColorIuiEXT( io Size red, io Size green, io Size blue, io Size alpha ) = 'glClearColorIuiEXT_wrapper';function glGetTexParameterIivEXT( io Size target, io Size pname, io Integer params[] ) = 'glGetTexParameterIivEXT_wrapper';function glGetTexParameterIuivEXT( io Size target, io Size pname, io Size params[] ) = 'glGetTexParameterIuivEXT_wrapper';function glTexParameterIivEXT( io Size target, io Size pname, io Integer params[] ) = 'glTexParameterIivEXT_wrapper';function glTexParameterIuivEXT( io Size target, io Size pname, io Size params[] ) = 'glTexParameterIuivEXT_wrapper';function Boolean glAreTexturesResidentEXT( io Size n, io Size textures[], io Boolean residences[] ) = 'glAreTexturesResidentEXT_wrapper';function glBindTextureEXT( io Size target, io Size texture ) = 'glBindTextureEXT_wrapper';function glDeleteTexturesEXT( io Size n, io Size textures[] ) = 'glDeleteTexturesEXT_wrapper';function glGenTexturesEXT( io Size n, io Size textures[] ) = 'glGenTexturesEXT_wrapper';function Boolean glIsTextureEXT( io Size texture ) = 'glIsTextureEXT_wrapper';function glPrioritizeTexturesEXT( io Size n, io Size textures[], io Scalar priorities[] ) = 'glPrioritizeTexturesEXT_wrapper';function glTextureNormalEXT( io Size mode ) = 'glTextureNormalEXT_wrapper';function glBeginTransformFeedbackEXT( io Size primitiveMode ) = 'glBeginTransformFeedbackEXT_wrapper';function glBindBufferBaseEXT( io Size target, io Size index, io Size buffer ) = 'glBindBufferBaseEXT_wrapper';function glBindBufferOffsetEXT( io Size target, io Size index, io Size buffer, io Integer offset ) = 'glBindBufferOffsetEXT_wrapper';function glBindBufferRangeEXT( io Size target, io Size index, io Size buffer, io Integer offset, io Size size ) = 'glBindBufferRangeEXT_wrapper';function glEndTransformFeedbackEXT(  ) = 'glEndTransformFeedbackEXT_wrapper';function glGetTransformFeedbackVaryingEXT( io Size program, io Size index, io Size bufSize, io Size length[], io Size size[], io Size type[], io String name ) = 'glGetTransformFeedbackVaryingEXT_wrapper';function glTransformFeedbackVaryingsEXT( io Size program, io Size count, io String varyings[], io Size bufferMode ) = 'glTransformFeedbackVaryingsEXT_wrapper';function glArrayElementEXT( io Integer i ) = 'glArrayElementEXT_wrapper';function glColorPointerEXT( io Integer size, io Size type, io Size stride, io Size count, io Data pointer ) = 'glColorPointerEXT_wrapper';function glDrawArraysEXT( io Size mode, io Integer first, io Size count ) = 'glDrawArraysEXT_wrapper';function glEdgeFlagPointerEXT( io Size stride, io Size count, io Boolean pointer[] ) = 'glEdgeFlagPointerEXT_wrapper';function glIndexPointerEXT( io Size type, io Size stride, io Size count, io Data pointer ) = 'glIndexPointerEXT_wrapper';function glNormalPointerEXT( io Size type, io Size stride, io Size count, io Data pointer ) = 'glNormalPointerEXT_wrapper';function glTexCoordPointerEXT( io Integer size, io Size type, io Size stride, io Size count, io Data pointer ) = 'glTexCoordPointerEXT_wrapper';function glVertexPointerEXT( io Integer size, io Size type, io Size stride, io Size count, io Data pointer ) = 'glVertexPointerEXT_wrapper';function glBeginVertexShaderEXT(  ) = 'glBeginVertexShaderEXT_wrapper';function Size glBindLightParameterEXT( io Size light, io Size value ) = 'glBindLightParameterEXT_wrapper';function Size glBindMaterialParameterEXT( io Size face, io Size value ) = 'glBindMaterialParameterEXT_wrapper';function Size glBindParameterEXT( io Size value ) = 'glBindParameterEXT_wrapper';function Size glBindTexGenParameterEXT( io Size unit, io Size coord, io Size value ) = 'glBindTexGenParameterEXT_wrapper';function Size glBindTextureUnitParameterEXT( io Size unit, io Size value ) = 'glBindTextureUnitParameterEXT_wrapper';function glBindVertexShaderEXT( io Size id ) = 'glBindVertexShaderEXT_wrapper';function glDeleteVertexShaderEXT( io Size id ) = 'glDeleteVertexShaderEXT_wrapper';function glDisableVariantClientStateEXT( io Size id ) = 'glDisableVariantClientStateEXT_wrapper';function glEnableVariantClientStateEXT( io Size id ) = 'glEnableVariantClientStateEXT_wrapper';function glEndVertexShaderEXT(  ) = 'glEndVertexShaderEXT_wrapper';function glExtractComponentEXT( io Size res, io Size src, io Size num ) = 'glExtractComponentEXT_wrapper';function Size glGenSymbolsEXT( io Size dataType, io Size storageType, io Size range, io Size components ) = 'glGenSymbolsEXT_wrapper';function Size glGenVertexShadersEXT( io Size range ) = 'glGenVertexShadersEXT_wrapper';function glGetInvariantBooleanvEXT( io Size id, io Size value, io Boolean data[] ) = 'glGetInvariantBooleanvEXT_wrapper';function glGetInvariantFloatvEXT( io Size id, io Size value, io Scalar data[] ) = 'glGetInvariantFloatvEXT_wrapper';function glGetInvariantIntegervEXT( io Size id, io Size value, io Integer data[] ) = 'glGetInvariantIntegervEXT_wrapper';function glGetLocalConstantBooleanvEXT( io Size id, io Size value, io Boolean data[] ) = 'glGetLocalConstantBooleanvEXT_wrapper';function glGetLocalConstantFloatvEXT( io Size id, io Size value, io Scalar data[] ) = 'glGetLocalConstantFloatvEXT_wrapper';function glGetLocalConstantIntegervEXT( io Size id, io Size value, io Integer data[] ) = 'glGetLocalConstantIntegervEXT_wrapper';function glGetVariantBooleanvEXT( io Size id, io Size value, io Boolean data[] ) = 'glGetVariantBooleanvEXT_wrapper';function glGetVariantFloatvEXT( io Size id, io Size value, io Scalar data[] ) = 'glGetVariantFloatvEXT_wrapper';function glGetVariantIntegervEXT( io Size id, io Size value, io Integer data[] ) = 'glGetVariantIntegervEXT_wrapper';function glInsertComponentEXT( io Size res, io Size src, io Size num ) = 'glInsertComponentEXT_wrapper';function Boolean glIsVariantEnabledEXT( io Size id, io Size cap ) = 'glIsVariantEnabledEXT_wrapper';function glSetInvariantEXT( io Size id, io Size type, io Data addr ) = 'glSetInvariantEXT_wrapper';function glSetLocalConstantEXT( io Size id, io Size type, io Data addr ) = 'glSetLocalConstantEXT_wrapper';function glShaderOp1EXT( io Size op, io Size res, io Size arg1 ) = 'glShaderOp1EXT_wrapper';function glShaderOp2EXT( io Size op, io Size res, io Size arg1, io Size arg2 ) = 'glShaderOp2EXT_wrapper';function glShaderOp3EXT( io Size op, io Size res, io Size arg1, io Size arg2, io Size arg3 ) = 'glShaderOp3EXT_wrapper';function glSwizzleEXT( io Size res, io Size inValue, io Size outX, io Size outY, io Size outZ, io Size outW ) = 'glSwizzleEXT_wrapper';function glVariantPointerEXT( io Size id, io Size type, io Size stride, io Data addr ) = 'glVariantPointerEXT_wrapper';function glVariantbvEXT( io Size id, io Byte addr[] ) = 'glVariantbvEXT_wrapper';function glVariantdvEXT( io Size id, io Scalar addr[] ) = 'glVariantdvEXT_wrapper';function glVariantfvEXT( io Size id, io Scalar addr[] ) = 'glVariantfvEXT_wrapper';function glVariantivEXT( io Size id, io Integer addr[] ) = 'glVariantivEXT_wrapper';function glVariantsvEXT( io Size id, io Integer addr[] ) = 'glVariantsvEXT_wrapper';function glVariantubvEXT( io Size id, io Size addr[] ) = 'glVariantubvEXT_wrapper';function glVariantuivEXT( io Size id, io Size addr[] ) = 'glVariantuivEXT_wrapper';function glVariantusvEXT( io Size id, io Integer addr[] ) = 'glVariantusvEXT_wrapper';function glWriteMaskEXT( io Size res, io Size inValue, io Size outX, io Size outY, io Size outZ, io Size outW ) = 'glWriteMaskEXT_wrapper';function glVertexWeightPointerEXT( io Integer size, io Size type, io Size stride, io Data pointer ) = 'glVertexWeightPointerEXT_wrapper';function glVertexWeightfEXT( io Scalar weight ) = 'glVertexWeightfEXT_wrapper';function glVertexWeightfvEXT( io Scalar weight[] ) = 'glVertexWeightfvEXT_wrapper';function Size glBufferRegionEnabledEXT(  ) = 'glBufferRegionEnabledEXT_wrapper';function glDeleteBufferRegionEXT( io Size region ) = 'glDeleteBufferRegionEXT_wrapper';function glDrawBufferRegionEXT( io Size region, io Integer x, io Integer y, io Size width, io Size height, io Integer xDest, io Integer yDest ) = 'glDrawBufferRegionEXT_wrapper';function Size glNewBufferRegionEXT( io Size region ) = 'glNewBufferRegionEXT_wrapper';function glReadBufferRegionEXT( io Size region, io Integer x, io Integer y, io Size width, io Size height ) = 'glReadBufferRegionEXT_wrapper';function glXWaitGL(  ) = 'glXWaitGL_wrapper';function glXWaitX(  ) = 'glXWaitX_wrapper';function Boolean glxewIsSupported( io String name ) = 'glxewIsSupported_wrapper';function Boolean glxewGetExtension( io String name ) = 'glxewGetExtension_wrapper';function Integer gluBuild1DMipmapLevels( io Size target, io Integer internalFormat, io Size width, io Size format, io Size type, io Integer level, io Integer base, io Integer max, io Data data ) = 'gluBuild1DMipmapLevels_wrapper';function Integer gluBuild1DMipmaps( io Size target, io Integer internalFormat, io Size width, io Size format, io Size type, io Data data ) = 'gluBuild1DMipmaps_wrapper';function Integer gluBuild2DMipmapLevels( io Size target, io Integer internalFormat, io Size width, io Size height, io Size format, io Size type, io Integer level, io Integer base, io Integer max, io Data data ) = 'gluBuild2DMipmapLevels_wrapper';function Integer gluBuild2DMipmaps( io Size target, io Integer internalFormat, io Size width, io Size height, io Size format, io Size type, io Data data ) = 'gluBuild2DMipmaps_wrapper';function Integer gluBuild3DMipmapLevels( io Size target, io Integer internalFormat, io Size width, io Size height, io Size depth, io Size format, io Size type, io Integer level, io Integer base, io Integer max, io Data data ) = 'gluBuild3DMipmapLevels_wrapper';function Integer gluBuild3DMipmaps( io Size target, io Integer internalFormat, io Size width, io Size height, io Size depth, io Size format, io Size type, io Data data ) = 'gluBuild3DMipmaps_wrapper';function Boolean gluCheckExtension( io Size extName[], io Size extString[] ) = 'gluCheckExtension_wrapper';function String gluErrorString( io Size error ) = 'gluErrorString_wrapper';function String gluGetString( io Size name ) = 'gluGetString_wrapper';function gluLookAt( io Scalar eyeX, io Scalar eyeY, io Scalar eyeZ, io Scalar centerX, io Scalar centerY, io Scalar centerZ, io Scalar upX, io Scalar upY, io Scalar upZ ) = 'gluLookAt_wrapper';function gluOrtho2D( io Scalar left, io Scalar right, io Scalar bottom, io Scalar top ) = 'gluOrtho2D_wrapper';function gluPerspective( io Scalar fovy, io Scalar aspect, io Scalar zNear, io Scalar zFar ) = 'gluPerspective_wrapper';function gluPickMatrix( io Scalar x, io Scalar y, io Scalar delX, io Scalar delY, io Integer viewport[] ) = 'gluPickMatrix_wrapper';function Integer gluProject( io Scalar objX, io Scalar objY, io Scalar objZ, io Scalar model[], io Scalar proj[], io Integer view[], io Scalar winX[], io Scalar winY[], io Scalar winZ[] ) = 'gluProject_wrapper';function Integer gluScaleImage( io Size format, io Size wIn, io Size hIn, io Size typeIn, io Data dataIn, io Size wOut, io Size hOut, io Size typeOut, io Data dataOut ) = 'gluScaleImage_wrapper';function Integer gluUnProject( io Scalar winX, io Scalar winY, io Scalar winZ, io Scalar model[], io Scalar proj[], io Integer view[], io Scalar objX[], io Scalar objY[], io Scalar objZ[] ) = 'gluUnProject_wrapper';function Integer gluUnProject4( io Scalar winX, io Scalar winY, io Scalar winZ, io Scalar clipW, io Scalar model[4], io Scalar proj[4], io Integer view[4], io Scalar nearVal, io Scalar farVal, io Scalar objX[], io Scalar objY[], io Scalar objZ[], io Scalar objW[] ) = 'gluUnProject4_wrapper';"
}
