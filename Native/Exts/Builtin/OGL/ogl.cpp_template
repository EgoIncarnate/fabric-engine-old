/*
 *  Copyright 2010-2011 Fabric Technologies Inc. All rights reserved.
 */
 
#include <Fabric/EDK/EDK.h>

using namespace Fabric::EDK;

####HEADERS####

// #define FABRIC_OGL_DEBUG 1

unsigned int gBracket = 0;
bool gGlewInitialized = false;
void _incBracket()
{
  gBracket++;
}
void _decBracket()
{
  if(gBracket > 0)
    gBracket--;
  else
    throw("Fabric::OGL::_decBracket: Unbalanced bracket.");
}
void _clearError()
{
  if(!gGlewInitialized){
#ifdef FABRIC_OGL_DEBUG
    printf("glewInit();\n");
#endif
    GLenum error = glewInit();
    if(error != GLEW_OK)
    {
      printf("[Fabric::OGL::glewInit] ERROR: %s\n",(const char*)gluErrorString(error));
      throw("[Fabric::OGL::glewInit] ERROR: %s",(const char*)gluErrorString(error));
    }
    gGlewInitialized = true;
  }

  // throw away last error
  if(gBracket > 0)
    return;
  glGetError();
}

void _checkError(const char * functionName)
{
  if(gBracket >0)
    return;
  GLenum error = glGetError();
  if(error != GL_NO_ERROR)
  {
    printf("[Fabric::OGL::%s] ERROR: %s\n",functionName,(const char*)gluErrorString(error));
    throw("[Fabric::OGL::%s] ERROR: %s",functionName,(const char*)gluErrorString(error));
  }
}

####FUNCTIONS####
