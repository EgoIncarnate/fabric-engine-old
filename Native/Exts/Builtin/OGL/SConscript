#
# Copyright 2010-2011 Fabric Technologies Inc. All rights reserved.
#

Import( 'extsEnv', 'fabricExtsDistDir', 'buildOS', 'buildArch', 'buildType' )

oglPluginEnv = extsEnv.Clone()

# OpenGL
if buildOS == 'Linux':
  oglPluginEnv.Append( LINKFLAGS = [ '-lGLEW' ] )
  oglPluginEnv.ParseConfig( 'pkg-config --cflags --libs gtk+-2.0' )
  oglPluginEnv.ParseConfig( 'pkg-config --cflags --libs gtkglext-1.0' )
  oglPluginEnv.ParseConfig( 'pkg-config --cflags --libs gdkglext-1.0' )
if buildOS == 'Darwin':
  oglPluginEnv.Append( CPPPATH = ['/opt/local/include'] )
  oglPluginEnv.Append( LIBPATH = ['/opt/local/lib'] )
  oglPluginEnv.Append( LIBS = ['GLEW'] )
  oglPluginEnv.Append( FRAMEWORKS = ['OpenGL'] )
if buildOS == 'Windows':
	Import( 'glewFlags' )
	oglPluginEnv.MergeFlags( glewFlags )

# [pzion 20110329] WHO MADE THIS COMMENT???
# ensure to insert an include prior to every header file  
# this has to be done because the flags are parsed for unique
# values, which removes one of the '-include' flags
if oglPluginEnv['FABRIC_BUILD_OS'] == 'Linux':
  ccflags = []
  for flag in oglPluginEnv['CCFLAGS']:
    if(flag.lower() == '-include'):
      continue
    if(flag.lower().endswith(".h")):
      ccflags.append("-include")
    ccflags.append(flag)
  oglPluginEnv['CCFLAGS'] = ccflags

oglPlugin = oglPluginEnv.SharedLibrary( 'FabricOGL', Glob('*.cpp') ),
oglManifest = oglPluginEnv.File('FabricOGL.fpm.json'),

installAction = Install( fabricExtsDistDir, [oglPlugin,oglManifest] )
extsEnv.CopyToAppdataIfWindows( installAction )

Alias( 'oglExt', [
  oglPlugin,
  oglManifest,
  installAction
] )
