#
# Copyright 2010-2011 Fabric Technologies Inc. All rights reserved.
#

import os, shutil
Import( 'baseEnv', 'buildOS' )

extsEnv = baseEnv.Clone()
Export( 'extsEnv' )

aliases = [
    'exrExt',
    'hdrExt',
    'pngExt',
    'tgaExt',
    'viconExt'
]

dirs = [
    'EXR',
    'HDR',
    'PNG',
    'TGA',
    'VICON'
]

if buildOS != 'Windows':
  dirs += ['VIDEO']
  aliases += ['videoExt']

# On windows, files have to be copied to the AppData directory (we can't create a symlink).
# We do this copy here, since we don't have a proper installer.
# The following code adds a post-build task which will be dependent on the
# copy to Ext files in #dist.

def CopyToAppdataIfWindowsAction(target=None, source=None, env=None):
  if buildOS == 'Windows':
    appDataDir = os.path.join( os.environ['APPDATA'], 'Fabric', 'Exts' )
    if not os.path.exists(appDataDir):
      os.makedirs( appDataDir )

    for t in target:
      shutil.copy( t.abspath, appDataDir )
      print "Copying " + t.abspath + " to " + appDataDir

# The goal of following method, along with the AddMethod line,
# is to share the function accross all Ext folders.

def CopyToAppdataIfWindowsMethod(nbargs, args):
  for arg in args:
    extsEnv.AddPostAction( arg, CopyToAppdataIfWindowsAction)

extsEnv.AddMethod(CopyToAppdataIfWindowsMethod, "CopyToAppdataIfWindows")

SConscript( dirs=dirs )

Alias( 'exts', aliases )
