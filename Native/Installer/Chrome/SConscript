#
# Copyright 2010-2011 Fabric Technologies Inc. All rights reserved.
#

import os
Import( 'baseEnv', 'buildOS', 'buildArch', 'archDistDir', 'fabricExtsDistDir', 'npapiDistDir', 'installerName' )

chromeExtensionDir = archDistDir.Dir('Chrome').Dir(installerName)

installedFiles = []

srcManifest = baseEnv.Template( "manifest.json", "manifest.json."+buildOS+".template" )
dstManifest = chromeExtensionDir.File( "manifest.json" )
installedFiles.append( baseEnv.Command(
  dstManifest,
  srcManifest,
  [ Copy( '$TARGET', '$SOURCE' ) ]
) )

for res in ["16", "48", "128"]:
  installedFiles.append( baseEnv.Command(
    chromeExtensionDir.File( 'fabric-engine_' + res + '.png' ),
    'fabric-engine_' + res + '.png',
    [ Copy( '$TARGET', '$SOURCE' ) ]
  ) )

if buildOS == "Windows":
  installedFiles.append( baseEnv.Command(
    chromeExtensionDir.File('npFabricPlugin.dll'),
    npapiDistDir.File('npFabricPlugin.dll'),
    [ Copy( '$TARGET', '$SOURCE' ) ]
   ) )
if buildOS == "Darwin":
  npapiPluginBundleDir = npapiDistDir.Dir( 'Fabric.'+buildArch+'.plugin' )
  pluginDir = chromeExtensionDir.Dir( 'Fabric.'+buildArch+'.plugin' )
  installedFiles.append( baseEnv.Command(
    pluginDir.Dir('Contents').Dir('MacOS').File('FabricNPAPI'),
    npapiPluginBundleDir.Dir('Contents').Dir('MacOS').File('FabricNPAPI'),
    [ Copy( '$TARGET', '$SOURCE' ) ]
  ) )
  installedFiles.append( baseEnv.Command(
    pluginDir.Dir('Contents').File('Info.plist'),
    npapiPluginBundleDir.Dir('Contents').File('Info.plist'),
    [ Copy( '$TARGET', '$SOURCE' ) ]
  ) )

for ext in ['EXR','HDR','OBJ','OGL','PNG','TGA']:
  fpm = 'Fabric' + ext + '.fpm.json'
  if buildOS == 'Darwin':
    lib = 'libFabric' + ext + '.dylib'
  if buildOS == 'Windows':
    lib = 'Fabric' + ext + '.dll'
  installedFiles.append( baseEnv.Command(
    chromeExtensionDir.File( fpm ),
    fabricExtsDistDir.File( fpm ),
    [
      Copy( '$TARGET', '$SOURCE' )
    ]
  ) )
  installedFiles.append( baseEnv.Command(
    chromeExtensionDir.File( lib ),
    fabricExtsDistDir.File( lib ),
    [Copy( '$TARGET', '$SOURCE' )]
  ) )

pemFile = archDistDir.Dir('Chrome').File('private-key.pem')
installedFiles.append( baseEnv.Command(
  pemFile,
  baseEnv.File('ChromeExtension.pem'),
  [Copy( '$TARGET', '$SOURCE' )]
) )

if buildOS == 'Windows':
  chrome = 'c:\Users\Phil\AppData\Local\Google\Chrome\Application\chrome.exe'
if buildOS == 'Darwin':
  chrome = "'/Applications/Google Chrome.app/Contents/MacOS/Google Chrome'"
baseEnv.Command(
  archDistDir.Dir('Chrome').File(installerName+'.crx'),
  installedFiles,
  chrome+" --pack-extension=" + chromeExtensionDir.abspath + " --pack-extension-key=" + pemFile.abspath + " --no-message-box"
)
