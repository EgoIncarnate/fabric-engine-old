//
// Copyright 2010-2011 Fabric Technologies Inc. All rights reserved.
//

use FabricFILESTREAM;
use FabricFileStream;

operator openFileStreamForWriting(
  io String handle,
  io FabricFileStream stream,
  io String dataNames[],
  io Size seekOffsetsLocation,
  io Size seekOffsets[]
){
  report "openFileStream";
  stream.open(handle,"w");
  report "dataNames:"+dataNames;
  
  if(stream.isValid() && dataNames.size() > 0) {
    seekOffsets.resize(dataNames.size());
    stream.writeStringArray(dataNames);
    seekOffsetsLocation = stream.getSeek();
    for(Size i=0;i<dataNames.size();i++) {
      // store the seek offsets of these
      // size values, so that we can seek later
    //  seekOffsets[i] = stream.getSeek();
      stream.writeSize(0);
    }
  }
}

operator openFileStreamForReading(
  io String handle,
  io FabricFileStream stream
){
  report "openFileStream";
  if(!stream.isValid()) {
    stream.open(handle,"r");
  }
}


operator closeFileStream(
  io FabricFileStream stream,
  io Size seekOffsetsLocation,
  io Size seekOffsets[]
){
  report "closeFileStream";
    report "seekOffsets:"+seekOffsets;
  // Now we write the TOC. Each integer specifies the seek offset
  // of the data for the indexed data member. 
  stream.setSeek(seekOffsetsLocation);
  stream.writeData(seekOffsets.data(),seekOffsets.dataSize());
  stream.close();
}
