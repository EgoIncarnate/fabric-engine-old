import os
Import('env')

docbookEnv = env.Clone()

try:
	docbookRoot = os.environ['SHORT_ATTENTION_SPAN_DOCBOOK_PATH']
except:
	print "Missing environment variable SHORT_ATTENTION_SPAN_DOCBOOK_PATH"
	sys.exit(1)

docbookSchema = os.path.join(docbookRoot, 'xsl', 'docbookxi.rng')

saxonClassJars = [
	docbookRoot + "/jars/xercesImpl-2.7.1.jar",
  docbookRoot + "/xsl/extensions/saxon65.jar",
  docbookRoot + "/jars/saxon.jar",
  docbookRoot + "/jars/xslthl-2.0.1.jar"
	]
saxonClassPath = os.pathsep.join(saxonClassJars)

highlighterConfigPath = "file:///" + docbookRoot + "/xsl/highlighting/xslthl-config.xml"

builderPDFFOFromDocbookXML = Builder(
	action = [[
		'java', '-Xss1024K', '-Xmx512m',
		'-cp', saxonClassPath,
 		'-Djavax.xml.parsers.DocumentBuilderFactory=org.apache.xerces.jaxp.DocumentBuilderFactoryImpl',
    '-Djavax.xml.parsers.SAXParserFactory=org.apache.xerces.jaxp.SAXParserFactoryImpl',
    '-Dorg.apache.xerces.xni.parser.XMLParserConfiguration=org.apache.xerces.parsers.XIncludeParserConfiguration',
    '-Dxslthl.config=' + highlighterConfigPath,
		'com.icl.saxon.StyleSheet',
		'-o', '$TARGET',
		'$SOURCES',
		'use.extensions=1'
		]],
	suffix = '.pdf.fo',
	src_suffix = '.docbook.xml'
	)
docbookEnv.Append( BUILDERS = { 'PDFFOFromDocbookXML': builderPDFFOFromDocbookXML } )

foClassJars = [
  docbookRoot + "/fop/avalon-framework-4.2.0.jar",
  docbookRoot + "/jars/batik-all-1.7.jar",
  docbookRoot + "/jars/commons-io-1.3.1.jar",
  docbookRoot + "/jars/commons-logging-1.0.4.jar",
  docbookRoot + "/jars/fop-hyph.jar",
  docbookRoot + "/jars/fop.jar",
  docbookRoot + "/jars/serializer-2.7.0.jar",
  docbookRoot + "/jars/xalan-2.7.0.jar",
  docbookRoot + "/jars/xercesImpl-2.7.1.jar",
  docbookRoot + "/jars/xml-apis-1.3.04.jar",
  docbookRoot + "/jars/xmlgraphics-commons-1.4.jar"
  ]
foClassPath = os.pathsep.join(foClassJars)

builderPDFFromPDFFO = Builder(
	action = [[
		'java', '-Xmx512m', '-Xss1024K',
		'-cp', foClassPath,
		'org.apache.fop.cli.Main',
		'-fo', '$SOURCE',
		'-pdf', '$TARGET'
		]],
	suffix = '.pdf',
	src_suffix = '.pdf.fo'
	)
docbookEnv.Append( BUILDERS = { 'PDFFromPDFFO': builderPDFFromPDFFO } )

w3cEntities = docbookEnv.File('w3centities-f.ent')

def Docbook(env, inputDocbookXML):
	outputPDFs = []
	env.Depends(inputDocbookXML, w3cEntities)
	pdfXSL = env.Dir('xsl').File('pdf.xsl')
	pdffo = env.PDFFOFromDocbookXML([inputDocbookXML, pdfXSL])
	env.AddPreAction(
		pdffo,
		[[
			'java',
			'-jar',
			'-Xmx512m',
			'-Xss1024K',
			'-Dorg.apache.xerces.xni.parser.XMLParserConfiguration=org.apache.xerces.parsers.XIncludeParserConfiguration',
			docbookRoot + '/jars/jing.jar',
			docbookSchema,
			"$SOURCE"
			]]
		)
	foXML = env.Dir('xsl').File('fo.xml')
	outputPDFs.append(env.PDFFromPDFFO([pdffo, foXML]))
	return outputPDFs
AddMethod(docbookEnv, Docbook)

klpgPDF = Alias('klpgPDF', docbookEnv.Docbook('KLProgrammingGuide.docbook.xml'))
iopgPDF = Alias('iopgPDF', docbookEnv.Docbook('IOProgrammingGuide.docbook.xml'))
Alias('guides', [klpgPDF, iopgPDF])