//
// Copyright 2010-2011 Fabric Technologies Inc. All rights reserved.
//


use Xfo;
use Vec2;
use Vec3;
use BezierKeyframe;
use SolverHelperFunctions;


operator fishingRodOp(
  io Xfo pose[],
  io Bone bones[],
  
  io Scalar restLineLength,
  io Scalar minLineLength,
  io Scalar maxLineLength,
  
  io Integer boneIndex,
  io Integer targetId,
  
  io PoseVariables poseVariables
) {
  // Compute the FK pose of the chain.
  // Note: this should be moved to a separate solver.
  pose[boneIndex] = bones[boneIndex].referencePose;

  Vec2 minLineLengthSoftening(restLineLength - minLineLength, restLineLength - minLineLength);
  Vec2 maxLineLengthSoftening(maxLineLength - restLineLength, maxLineLength - restLineLength);
  
  applyFishingRod(
    pose[boneIndex],
    bones[boneIndex].length,
    poseVariables.xfoValues[targetId],
    Vec3(1.0, 0.0, 0.0),

    minLineLength,
    minLineLengthSoftening,
    maxLineLength,
    maxLineLengthSoftening
  );
}